global proc shelf_Sid () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "EC" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "import sys\nimport os\nsys.path.append('B:/Eternal_Code_Directory'..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "UVLinkingEditor.png" 
        -image1 "UVLinkingEditor.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import sys\nimport os\nsys.path.append('B:/Eternal_Code_Directory')\nimport Procs\nimport ECUI\nreload(Procs)\nreload(ECUI)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Start" 
        -enableBackground 1
        -backgroundColor 0.0374609 0.480217 0.381643 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Start" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.200913 0.200913 0.200913 
        -overlayLabelBackColor 1 1 1 0.5 
        -image "aiObject.png" 
        -image1 "aiObject.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import maya.cmds as cmds\nimport sys\ndef l():\n    c=cmds.promptDialog(\n    \t\ttitle='LockAttrs',\n    \t\tmessage='t for trans,r for rotate,s for scale,a for all',\n    \t\tbutton=['Lock', \"Don't Lock\"],\n    \t\tdefaultButton='Lock',\n    \t\tcancelButton=\"Don't Lock\",\n    \t\tdismissString='Bitch')\n    \t\t\n    \n    if c=='Lock':\n        \n        text = cmds.promptDialog(query=True, text=True)\n        a = str(text)\n        sel = cmds.ls(sl=True)\n        if a == 't':\n            cmds.setAttr((str(sel[0])+'.'+'t'),l=1)\n            print 'Connected Translation'\n        elif a == 'r':\n            cmds.setAttr((str(sel[0])+'.'+'r'),l=1)\n            print 'Connected Rot'\n        elif a == 's':\n            cmds.setAttr((str(sel[0])+'.'+'s'),l=1)\n            print 'Connected Scale'\n        elif a == 'a':\n            cmds.setAttr((str(sel[0])+'.'+'s'),l=1)\n            cmds.setAttr((str(sel[0])+'.'+'t'),l=1)\n            cmds.setAttr((str(sel[0])+'.'+'r'),l=1)\n            \n            print 'Connected All'\n        elif a == 'v':\n            cmds.setAttr((str(sel[0])+'.'+'v'),l=1)\n            print 'Connected vis'\n            \n        else:\n            print 'Nothing selected'\n            sys.stdout.write('Nothing selected')\n            \n            \n            \n            \n        \n\n        \n    elif c ==\"Don't Lock\":\n       \n        pass\n        sys.stdout.write('Nothing Locked')\n        \n        \n        \n        \n        \n        \n        \n        \n        \ndef c():\n    c=cmds.promptDialog(\n    \t\ttitle='ConnectAttrs',\n    \t\tmessage='t for trans,r for rotate,s for scale,a for all',\n    \t\tbutton=['Connect', \"Don't Connect\"],\n    \t\tdefaultButton='Connect',\n    \t\tcancelButton=\"Don't Connect\",\n    \t\tdismissString='Bitch')\n    \t\t\n    \n    if c=='Connect':\n        \n        text = cmds.promptDialog(query=True, text=True)\n        a = str(text)\n        sel = cmds.ls(sl=True)\n        if a == 't':\n            cmds.connectAttr((str(sel[0])+'.'+'t'),(str(sel[1])+'.'+'t'))\n            print 'Connected Translation'\n        elif a == 'r':\n            cmds.connectAttr((str(sel[0])+'.'+'r'),(str(sel[1])+'.'+'r'))\n            print 'Connected Rot'\n        elif a == 's':\n            cmds.connectAttr((str(sel[0])+'.'+'s'),(str(sel[1])+'.'+'s'))\n            print 'Connected Scale'\n        elif a == 'a':\n            cmds.connectAttr((str(sel[0])+'.'+'s'),(str(sel[1])+'.'+'s'))\n            cmds.connectAttr((str(sel[0])+'.'+'t'),(str(sel[1])+'.'+'t'))\n            cmds.connectAttr((str(sel[0])+'.'+'r'),(str(sel[1])+'.'+'r'))\n            \n            print 'Connected All'\n        else:\n            print 'Nothing selected'\n            sys.stdout.write('Nothing selected')\n        \n\n        \n    elif c ==\"Don't Connect\":\n       \n        pass\n        sys.stdout.write('Nothing connected')\n        \n        \n        \n        \n        \n        \n        " 
        -sourceType "python" 
        -doubleClickCommand "import sys\nimport os\nsys.path.append('B:/Eternal_Code_Directory/Eternal_Code')\nimport FollicleSurfaceSetup\nreload(FollicleSurfaceSetup)\n" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation " #################################################################\n######################     The Surface     ########################\n #################################################################\n#Author:Siddarth Mehra\n#Email:siddarthmehraajm@gmail.com\n#Mobile: +91-7728050400(Whatsapp)\n\n\n#This script created a bendy surface for attaching in rigs\n\n\n#Run this command proxyCube() after runin the script for a tempobject for basic skin for copying\n\nimport maya.cmds as cmds\nimport maya.mel as mel\nimport pymel.core as pm\n\n\n\n#CreateSurface()\n\n\n\n\ndef CreateSurface():\n    \n    #doHideInOutliner 1;\n    \n    ####################################################################\n                                #Group#CDef\n    ####################################################################\n    \n    \n    def GrpWPiv(s):\n            \n        cmds.select(cl=True)\n        \n        offset = cmds.group(n=str(s + '_Offset_Group'),em = True)\n        tmp= cmds.group(em=True)\n        cmds.delete(cmds.parentConstraint(s,tmp))\n        pos = cmds.xform(tmp, q=True, t=True, ws=True)\n        rot = cmds.xform(tmp, q=True, rotation=True, ws=True)\n        cmds.xform(offset, translation=pos, ws=True)\n        cmds.xform(offset, rotation=rot, ws=True)\n        cmds.makeIdentity(offset, apply=True, t=1, r=1, s=1 )\n        cmds.parent(s,offset)\n        cmds.delete(tmp)\n        return offset\n        \n    \n    ####################################################################\n                                #Extra#Def\n    ####################################################################\n    \n    \n    def SLc():\n            \n        cmds.select(cl=True)\n        \n        \n        \n    ####################################################################\n    \n    def SL(obj):\n            \n        cmds.select(obj)\n        return obj\n    \n    def SLT(obj,Sobj):\n            \n        cmds.select(obj,Sobj)\n        return obj,Sobj\n        \n    \n    ####################################################################\n    \n    def Rnm(obj,txt=str):\n            \n        renamedObj = cmds.rename(obj,txt)\n        return renamedObj\n    \n    ####################################################################\n    \n    def LnH(obj):\n           \n        cmds.setAttr( obj + '.t', lock=True )\n        cmds.setAttr( obj + '.r', lock=True )\n        cmds.setAttr( obj + '.s', lock=True )\n        \n        cmds.setAttr( obj + '.v', lock=True )   \n       \n        cmds.setAttr( obj + '.tx', k=False,channelBox = 0 )\n        cmds.setAttr( obj + '.ty', k=False,channelBox = 0 )\n        cmds.setAttr( obj + '.tz', k=False,channelBox = 0 )\n        \n        cmds.setAttr( obj + '.rx', k=False,channelBox = 0 )\n        cmds.setAttr( obj + '.ry', k=False,channelBox = 0 )\n        cmds.setAttr( obj + '.rz', k=False,channelBox = 0 )\n        \n        cmds.setAttr( obj + '.sx', k=False,channelBox = 0 )\n        cmds.setAttr( obj + '.sy', k=False,channelBox = 0 )\n        cmds.setAttr( obj + '.sz', k=False,channelBox = 0 )    \n        \n        \n    \n    \n    \n    ####################################################################\n                                #Name &Main Def\n    ####################################################################\n    \n    \n    \n    \n    #def ProSurface():\n        \n    TFoll = cmds.nurbsPlane(n = 'tmpPlane',p = (0,0,0),ax = (0,1,0),w = 1,lr = 6,d=3,u=1,v=5,ch=0)\n    \n    Folsize = range(5)\n    \n    tmpsize = .1\n    \n    folllst = []\n    \n    grplist= [] \n    follCtrl_Lst=[]\n    follJntLst=[]\n    ####################################################################\n                                #Create Follicles\n    ####################################################################\n    for i in Folsize:\n        \n        fol = pm.createNode('transform', n=(Gloablname+'_Follicle_0'+str(i+1)), ss=True)\n        folShape = pm.createNode('follicle', n=fol.name()+'Shape', p=fol, ss=True)\n        geo = pm.PyNode('tmpPlane')\n        geo.local >> folShape.inputSurface\n        geo.worldMatrix[0] >> folShape.inputWorldMatrix\n        folShape.outRotate >> fol.rotate\n        folShape.outTranslate >> fol.translate\n        fol.inheritsTransform.set(False)\n        folShape.parameterU.set(0.5)\n        \n        folShape.parameterV.set(tmpsize)\n        ##\n        tmpsize +=.2\n        ##\n        \n        ##\n        SLc()\n        ##\n        pm.select(fol)\n        folllst.append(cmds.ls(sl=True))\n        \n    ####################################################################\n                                #Follicle joints & ctrls\n    ####################################################################\n    \n    for i in folllst:\n    \n        innerCtrl = cmds.circle(r = .2,n=(i[0]+'_Jnt_Ctrl'))\n        \n        jnt = cmds.createNode('joint',n=(i[0]+'_Joint'))\n        #cmds.setAttr((jnt+'.jointOrientY'),90)\n        cmds.setAttr((jnt+'.radius'),.1)\n        SLc()\n        cmds.parent(jnt,innerCtrl)\n        #cmds.parent(innerCtrl,i[0])\n        #cmds.setAttr((innerCtrl[0]+'.translateY'),0)\n        try:\n            cmds.setAttr((innerCtrl[0]+'Shape'+'.overrideEnabled'),1)\n            cmds.setAttr((innerCtrl[0]+'Shape'+'.overrideColor'),17)\n        except:\n            pass\n            \n        ctrlGrp = cmds.group(innerCtrl[0],n=(innerCtrl[0]+'_Group'))\n        pos = cmds.xform(i, q=True, t=True, ws=True)\n        cmds.setAttr((ctrlGrp+'.translateZ'),pos[2])\n        cmds.setAttr((ctrlGrp+'.rotateY'),90)\n        follCtrl_Lst.append(ctrlGrp)\n        grpfol = cmds.group(i,n=(i[0]+'_Group'))\n        grplist.append(grpfol)\n        cmds.parentConstraint(i[0],ctrlGrp,mo=True)\n        cmds.scaleConstraint(i[0],ctrlGrp,mo=True)\n        follJntLst.append(jnt)\n        \n    \n    \n        \n        \n    ####################################################################\n                                #BS_Def Plane\n    ####################################################################\n    SLc()\n    \n    \n    FollicleCtrlGroup = cmds.group(follCtrl_Lst,n=(Gloablname+'_Follicle_Ctrl_Group'))\n    FollicleGroup = cmds.group(grplist,n=(Gloablname+'_Follicle_Group'))\n    \n    BSgeo = cmds.nurbsPlane(n = 'tmpBSPlane',p = (0,0,0),ax = (0,1,0),w = 1,lr = 6,d=3,u=1,v=5,ch=0)\n    cmds.move(-3,0,0)\n    \n    cmds.blendShape(BSgeo,TFoll,automatic=True,n=(Gloablname+'Follicle_Deform_BS'),w=[(0),(1)])\n    \n    \n    ####################################################################\n                                #Wire Deformer\n    ####################################################################\n    try:\n        wireDfrmrCurve = mel.eval('curve -d 2 -p -3 0 3 -p -3 0 0 -p -3 0 -3 -k 0 -k 0 -k 1 -k 1')\n    \n        wireDfrmrCurveNN = Rnm(wireDfrmrCurve,(Gloablname+'_WireDeformerCurve'))\n        SLc()\n        \n        pm.select(BSgeo[0])\n        wiredfrmr = cmds.wire(gw = False,en = 1,ce=0,li=0,dds=(1,10.0),w = (BSgeo[0],wireDfrmrCurveNN))\n        print 'Ignore the Error!'\n    except:\n        print 'oh'\n        \n        \n    \n                            #Create Clusters\n    ####################################################################\n    \n    cmds.select((wireDfrmrCurveNN+'.cv[0]'),(wireDfrmrCurveNN+'.cv[1]'))\n    Lcl01 = cmds.cluster(n=(Gloablname+'_CL_01'))\n    cmds.xform(Lcl01,ws=True,piv=(-3,0,3))\n    try:\n        cmds.setAttr(Lcl01[1]+'Shape.originX',-3)\n        cmds.setAttr(Lcl01[1]+'Shape.originY',0)\n        cmds.setAttr(Lcl01[1]+'Shape.originZ',3)\n        \n    except:\n        pass\n    \n    \n    cl01 = cmds.spaceLocator(n=(Gloablname+'Wire_L_01'))\n    cl01Grp = GrpWPiv(str(cl01[0]))\n    cmds.setAttr(cl01Grp+'.rotateY',90)\n    cmds.delete(cmds.pointConstraint(Lcl01,cl01Grp))\n    cmds.parentConstraint(cl01,Lcl01[1],mo = True)\n    \n    SLc()\n    ####################################################################\n    \n    cmds.select((wireDfrmrCurveNN+'.cv[2]'),(wireDfrmrCurveNN+'.cv[1]'))\n    Lcl02 = cmds.cluster(n=(Gloablname+'_CL_02'))\n    cmds.xform(Lcl02,ws=True,piv=(-3,0,-3))\n    try:\n        cmds.setAttr(Lcl02[1]+'Shape.originX',-3)\n        cmds.setAttr(Lcl02[1]+'Shape.originY',0)\n        cmds.setAttr(Lcl02[1]+'Shape.originZ',-3)\n        \n    except:\n        pass\n    cl02 = cmds.spaceLocator(n=(Gloablname+'Wire_L_02'))\n    cl02Grp = GrpWPiv(str(cl02[0]))\n    cmds.setAttr(cl02Grp+'.rotateY',90)\n    cmds.delete(cmds.pointConstraint(Lcl02,cl02Grp))\n    cmds.parentConstraint(cl02,Lcl02[1],mo = True)\n    \n    SLc()\n    ####################################################################\n    \n    cmds.select((wireDfrmrCurveNN+'.cv[1]'))\n    LclM = cmds.cluster(n=(Gloablname+'_CL_Mid'))\n    cmds.xform(LclM,ws=True,piv=(-3,0,0))\n    try:\n        cmds.setAttr(LclM[1]+'Shape.originX',-3)\n        cmds.setAttr(LclM[1]+'Shape.originY',0)\n        cmds.setAttr(LclM[1]+'Shape.originZ',0)\n        \n    except:\n        pass\n    clM = cmds.spaceLocator(n=(Gloablname+'Wire_L_M'))\n    clMGrp = GrpWPiv(str(clM[0]))\n    cmds.setAttr(clMGrp+'.rotateY',90)\n    cmds.delete(cmds.pointConstraint(LclM,clMGrp))\n    cmds.parentConstraint(clM,LclM[1],mo = True)\n    \n    SLc()\n    ####################################################################\n    cmds.percent(Lcl02[0],(wireDfrmrCurveNN+'.cv[1]'),v=.5)\n    cmds.percent(Lcl01[0],(wireDfrmrCurveNN+'.cv[1]'),v=.5)\n    \n    ####################################################################\n                                #Cluster Sec Controls\n    ####################################################################\n    Actrl = mel.eval(\"sphere -esw 360 -r 0.3 -d 1 -ut 0 -tol 0.01 -s 4 -nsp 2 -ch 0;\")\n    ActrlNN =Rnm(Actrl,(Gloablname+'_A_Sec_Ctrl'))\n    try:\n        cmds.setAttr((ActrlNN+'Shape'+'.overrideEnabled'),1)\n        cmds.setAttr((ActrlNN+'Shape'+'.overrideShading'),0)\n        cmds.setAttr((ActrlNN+'Shape'+'.overrideColor'),4)\n        cmds.setAttr((ActrlNN+'Shape'+'.overrideEnabled'),lock = True)\n        cmds.setAttr((ActrlNN+'Shape'+'.overrideShading'),lock = True)\n        cmds.setAttr((ActrlNN+'Shape'+'.overrideColor'),lock = True)\n    except:\n        pass\n    \n    \n    cmds.move(0,0,3,ActrlNN)\n    cmds.makeIdentity(ActrlNN, apply=True, t=1, r=1, s=1 )\n    cmds.connectAttr( (ActrlNN+'.t'), (cl01[0]+'.t') )\n    cmds.connectAttr( (ActrlNN+'.r'), (cl01[0]+'.r') )\n    cmds.connectAttr( (ActrlNN+'.s'), (cl01[0]+'.s') )\n    ####################################################################\n    Midctrl = mel.eval(\"sphere -esw 360 -r 0.3 -d 1 -ut 0 -tol 0.01 -s 4 -nsp 2 -ch 0;\")\n    MidctrlNN =Rnm(Midctrl,(Gloablname+'_Mid_Sec_Ctrl'))\n    try:\n        cmds.setAttr((MidctrlNN+'Shape'+'.overrideEnabled'),1)\n        cmds.setAttr((MidctrlNN+'Shape'+'.overrideShading'),0)\n        cmds.setAttr((MidctrlNN+'Shape'+'.overrideColor'),4)\n        cmds.setAttr((MidctrlNN+'Shape'+'.overrideEnabled'),lock = True)\n        cmds.setAttr((MidctrlNN+'Shape'+'.overrideShading'),lock = True)\n        cmds.setAttr((MidctrlNN+'Shape'+'.overrideColor'),lock = True)\n    except:\n        pass\n    \n    \n    cmds.makeIdentity(MidctrlNN, apply=True, t=1, r=1, s=1 )\n    cmds.connectAttr( (MidctrlNN+'.t'), (clM[0]+'.t') )\n    cmds.connectAttr( (MidctrlNN+'.r'), (clM[0]+'.r') )\n    cmds.connectAttr( (MidctrlNN+'.s'), (clM[0]+'.s') )\n    ####################################################################\n    Bctrl = mel.eval(\"sphere -esw 360 -r 0.3 -d 1 -ut 0 -tol 0.01 -s 4 -nsp 2 -ch 0;\")\n    BctrlNN =Rnm(Bctrl,(Gloablname+'_B_Sec_Ctrl'))\n    try:\n        cmds.setAttr((BctrlNN+'Shape'+'.overrideEnabled'),1)\n        cmds.setAttr((BctrlNN+'Shape'+'.overrideShading'),0)\n        cmds.setAttr((BctrlNN+'Shape'+'.overrideColor'),4)\n        cmds.setAttr((BctrlNN+'Shape'+'.overrideEnabled'),lock = True)\n        cmds.setAttr((BctrlNN+'Shape'+'.overrideShading'),lock = True)\n        cmds.setAttr((BctrlNN+'Shape'+'.overrideColor'),lock = True)\n    except:\n        pass\n    \n    \n    cmds.move(0,0,-3,BctrlNN)\n    cmds.makeIdentity(BctrlNN, apply=True, t=1, r=1, s=1 )\n    cmds.connectAttr( (BctrlNN+'.t'), (cl02[0]+'.t') )\n    cmds.connectAttr( (BctrlNN+'.r'), (cl02[0]+'.r') )\n    cmds.connectAttr( (BctrlNN+'.s'), (cl02[0]+'.s') )\n    ####################################################################\n    \n    secCtrls = ActrlNN,MidctrlNN,BctrlNN\n    secCtrlsgrpLst = []\n    \n    for i in secCtrls:\n        a = GrpWPiv(i)\n        secCtrlsgrpLst.append(a)\n        cmds.setAttr(a+'.rotateY',90)\n        \n        \n        pass\n        \n        \n    \n        \n    cmds.pointConstraint(ActrlNN,secCtrlsgrpLst[1],w=.5,mo=True)\n    cmds.pointConstraint(BctrlNN,secCtrlsgrpLst[1],w=.5,mo=True)\n    SLc()\n    SecCtrlsMainGrp = cmds.group(secCtrlsgrpLst,n = (Gloablname+'_Sec_Ctrl_Group'))\n    LocatorsGrpList = cl01Grp,cl02Grp,clMGrp\n    \n    \n    SLc()\n    \n      \n    ####################################################################\n                        #Organising & Renaming Everything\n    ####################################################################\n                                #MOVE\n    MoveFollicleGeo = Rnm(TFoll,(Gloablname+'_Main_Geo'))\n    globalMoveGrp = cmds.group(MoveFollicleGeo,SecCtrlsMainGrp,n=(Gloablname+'_Global_Move_Group'))\n    SLc()\n    ####################################################################\n                                #Deform \n    BsDeformGeo = Rnm(BSgeo,(Gloablname+'_BS_Geo'))\n    ClGroup = cmds.group(LocatorsGrpList,n=(Gloablname+'_Cl_Group'))\n    cls =LclM[1],Lcl01[1],Lcl02[1] \n    cmds.parent(cls,ClGroup)\n    WireGroup = cmds.group(wireDfrmrCurveNN,(wireDfrmrCurveNN+'BaseWire'),n=(Gloablname+'_Wire_Group'))    \n    DeformGrp  = cmds.group(ClGroup,WireGroup,BsDeformGeo,n=(Gloablname+'_SurfaceDeform_Group'))    \n    cmds.setAttr(DeformGrp+'.v',0)\n    cmds.setAttr(FollicleGroup+'.v',0)\n    \n    ####################################################################\n                                #Global\n    \n    \n    MainNonDeformGroup=cmds.group(globalMoveGrp,DeformGrp,FollicleGroup,FollicleCtrlGroup,n=(Gloablname+'_Group'))    \n    \n    \n    \n    \n    ####################################################################\n                                #FollicleScale\n    ####################################################################\n    \n    \n    for i in folllst:\n        #cmds.connectAttr((globalMoveGrp+'.s'), (i[0]+'.s'))\n        cmds.scaleConstraint(globalMoveGrp,i[0],mo = True)\n        \n        \n    ####################################################################\n                                #Global_Ctrl\n    #################################################################### \n    \n    glCtrl = mel.eval(\"curve -d 1 -p -5 0 0 -p -3 0 -2 -p -3 0 -1 -p 3 0 -1 -p 3 0 -2 -p 5 0 0 -p 3 0 2 -p 3 0 1 -p -3 0 1 -p -3 0 2 -p -5 0 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 ;\")\n    cmds.select(str(glCtrl)+'.cv[0:10]',r=True)\n    cmds.scale(.35,.35,.35)\n    cmds.rotate(0,90,0)\n    SLc()\n    glCtrlNN = Rnm(glCtrl,(Gloablname+'_Placement'))\n    glCtrlGrp=cmds.group(glCtrlNN,n = (Gloablname+'_Ctrl_Group'))\n    cmds.setAttr(glCtrlGrp+'.rotateY',90)\n    cmds.parent(glCtrlGrp,MainNonDeformGroup)\n    cmds.parent(globalMoveGrp,glCtrlNN)\n    cmds.reorder(glCtrlGrp,f = True)\n    \n    \n    \n    \n    ####################################################################\n                                #Twist Deformer & Attrs\n    ####################################################################\n    \n    \n    \n    twistDeformer = cmds.nonLinear(BsDeformGeo, type='twist')\n    SL(twistDeformer[1])\n    cmds.rotate(90,0,0)\n    SLc()\n    cmds.connectAttr(BctrlNN+'.rotateX',twistDeformer[0]+'.startAngle')\n    \n    \n    cmds.connectAttr(ActrlNN+'.rotateX',twistDeformer[0]+'.endAngle')\n    \n    cmds.reorderDeformers(str(wiredfrmr[0]),str(twistDeformer[0]),BsDeformGeo)\n    \n    Rnm(twistDeformer[0],(Gloablname+'_TwistDeformer_Attrs'))\n    twstDfmNN = Rnm(twistDeformer[1],(Gloablname+'_TwistDeformer'))\n    cmds.parent(twstDfmNN,DeformGrp)\n    \n    ####################################################################\n                                #Squash&Stretch\n    ####################################################################\n    \n    \n    cmds.addAttr(str(glCtrlNN),ln = '_',nn = ' ',at = 'enum',en='Volume:',k=True)    \n    \n    SquetchAttr = cmds.addAttr(glCtrlNN,ln = 'Squetch',at = 'bool',k=True)\n    cmds.setAttr(glCtrlNN+'.Squetch',1)\n    \n    CurveInfoSquetch = cmds.arclen(wiredfrmr[2],ch = 1)\n    CurveInfoSquetch = Rnm(CurveInfoSquetch,(Gloablname+'_Squetch_CrvInfo'))\n    \n    \n    SquetchMD = cmds.createNode('multiplyDivide',n=(Gloablname+'_Squetch_MD'))\n    \n    cmds.setAttr(SquetchMD+'.operation',2)\n    \n    cmds.connectAttr(CurveInfoSquetch+'.arcLength',SquetchMD+'.input1X')\n    \n    cmds.setAttr(SquetchMD+'.input2X',float(cmds.getAttr(CurveInfoSquetch+'.arcLength')))\n    \n    SquetchVolumeMD = cmds.createNode('multiplyDivide',n=(Gloablname+'_Squetch_Volume_MD'))\n    \n    cmds.setAttr(SquetchVolumeMD+'.operation',2)\n    \n    \n    cmds.setAttr(SquetchVolumeMD+'.input1X',float(1.0))\n    \n    cmds.setAttr(SquetchVolumeMD+'.input2X',float(cmds.getAttr(CurveInfoSquetch+'.arcLength')))\n    \n    cmds.connectAttr(SquetchMD+'.outputX',SquetchVolumeMD+'.input2X')\n    \n    SquetchCondition = cmds.createNode('condition',n=(Gloablname+'_SquetchCondition'))\n    \n    cmds.setAttr(SquetchCondition + '.secondTerm',float(1.0))\n    \n    cmds.connectAttr(SquetchVolumeMD+'.outputX',SquetchCondition+'.colorIfTrueR')\n    \n    cmds.connectAttr(glCtrlNN+'.Squetch',SquetchCondition+'.firstTerm')\n    for i in follJntLst:\n        \n        cmds.connectAttr(SquetchCondition+'.outColorR',str(i+'.scaleX'))\n        cmds.connectAttr(SquetchCondition+'.outColorR',str(i+'.scaleY'))\n        \n    SLc()\n    \n    ############################################################\n                                #skn\n    ####################################################################\n    def proxyCube():   \n        tmpsknCube = cmds.polyCube(w=.3,h=.3,d=6,sd=40,n=(Gloablname+'_tmp_SknCube'),ch=0)\n        \n        cmds.makeIdentity(tmpsknCube, apply=True, t=1, r=1, s=1 )\n        #SL(follJntLst)\n        skncls  = cmds.skinCluster(follJntLst,tmpsknCube,dr=10)\n        #vtxCount = cmds.polyEvaluate(tmpsknCube,v=True)\n        \n        \n        #for i in range(vtxCount):\n           # a = cmds.skinPercent('skinCluster1','Hi_tmpSknCube'+'.vtx['+str(i)+']',q=1,v=1)\n           # print 'cmds.skinPercent(str(skncls[0]),tmpsknCube[0]'+\"+'.vtx['+\"+'str('+str(i)+')'+\"+']'\"+',tv=[(follJntLst[0],'+str(a[0])+'),'+'(follJntLst[1],'+str(a[1])+'),'+'(follJntLst[2],'+str(a[2])+'),'+'(follJntLst[3],'+str(a[3])+'),'+'(follJntLst[4],'+str(a[4])+')'+'])'\n            \n            \n        def settmpskn():\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(0)+']',tv=[(follJntLst[0],0.879774389594),(follJntLst[1],0.120225610406),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(1)+']',tv=[(follJntLst[0],0.879774389594),(follJntLst[1],0.120225610406),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(2)+']',tv=[(follJntLst[0],0.879774387689),(follJntLst[1],0.120225612311),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(3)+']',tv=[(follJntLst[0],0.879774387689),(follJntLst[1],0.120225612311),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(4)+']',tv=[(follJntLst[0],0.871450372729),(follJntLst[1],0.128549627271),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(5)+']',tv=[(follJntLst[0],0.871450372729),(follJntLst[1],0.128549627271),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(6)+']',tv=[(follJntLst[0],0.850893089157),(follJntLst[1],0.149106910843),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(7)+']',tv=[(follJntLst[0],0.850893089157),(follJntLst[1],0.149106910843),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(8)+']',tv=[(follJntLst[0],0.818751809671),(follJntLst[1],0.181248190329),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(9)+']',tv=[(follJntLst[0],0.818751809671),(follJntLst[1],0.181248190329),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(10)+']',tv=[(follJntLst[0],0.766964002989),(follJntLst[1],0.221254449746),(follJntLst[2],0.0117815472651),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(11)+']',tv=[(follJntLst[0],0.766964002989),(follJntLst[1],0.221254449746),(follJntLst[2],0.0117815472651),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(12)+']',tv=[(follJntLst[0],0.710904328474),(follJntLst[1],0.270341778968),(follJntLst[2],0.0187538925576),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(13)+']',tv=[(follJntLst[0],0.710904328474),(follJntLst[1],0.270341778968),(follJntLst[2],0.0187538925576),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(14)+']',tv=[(follJntLst[0],0.646515308025),(follJntLst[1],0.324447740768),(follJntLst[2],0.0290369512072),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(15)+']',tv=[(follJntLst[0],0.646515308025),(follJntLst[1],0.324447740768),(follJntLst[2],0.0290369512072),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(16)+']',tv=[(follJntLst[0],0.576154216616),(follJntLst[1],0.380207082672),(follJntLst[2],0.0436387007128),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(17)+']',tv=[(follJntLst[0],0.576154216616),(follJntLst[1],0.380207082672),(follJntLst[2],0.0436387007128),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(18)+']',tv=[(follJntLst[0],0.502538729593),(follJntLst[1],0.433835024386),(follJntLst[2],0.0636262460207),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(19)+']',tv=[(follJntLst[0],0.502538729593),(follJntLst[1],0.433835024386),(follJntLst[2],0.0636262460207),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(20)+']',tv=[(follJntLst[0],0.428548586776),(follJntLst[1],0.481446516485),(follJntLst[2],0.0900048967383),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(21)+']',tv=[(follJntLst[0],0.428548586776),(follJntLst[1],0.481446516485),(follJntLst[2],0.0900048967383),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(22)+']',tv=[(follJntLst[0],0.35697531504),(follJntLst[1],0.519459276654),(follJntLst[2],0.123565408305),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(23)+']',tv=[(follJntLst[0],0.35697531504),(follJntLst[1],0.519459276654),(follJntLst[2],0.123565408305),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(24)+']',tv=[(follJntLst[0],0.29026568011),(follJntLst[1],0.545012610637),(follJntLst[2],0.164721709253),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(25)+']',tv=[(follJntLst[0],0.29026568011),(follJntLst[1],0.545012610637),(follJntLst[2],0.164721709253),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(26)+']',tv=[(follJntLst[0],0.227492034314),(follJntLst[1],0.549517024659),(follJntLst[2],0.210763443699),(follJntLst[3],0.0122274973288),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(27)+']',tv=[(follJntLst[0],0.227492034314),(follJntLst[1],0.549517024659),(follJntLst[2],0.210763443699),(follJntLst[3],0.0122274973288),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(28)+']',tv=[(follJntLst[0],0.17482791224),(follJntLst[1],0.542102207916),(follJntLst[2],0.263584915362),(follJntLst[3],0.0194849644819),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(29)+']',tv=[(follJntLst[0],0.17482791224),(follJntLst[1],0.542102207916),(follJntLst[2],0.263584915362),(follJntLst[3],0.0194849644819),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(30)+']',tv=[(follJntLst[0],0.13067330041),(follJntLst[1],0.519349523965),(follJntLst[2],0.319864165588),(follJntLst[3],0.0301130100373),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(31)+']',tv=[(follJntLst[0],0.13067330041),(follJntLst[1],0.519349523965),(follJntLst[2],0.319864165588),(follJntLst[3],0.0301130100373),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(32)+']',tv=[(follJntLst[0],0.0949421266467),(follJntLst[1],0.483193455966),(follJntLst[2],0.376727627326),(follJntLst[3],0.0451367900612),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(33)+']',tv=[(follJntLst[0],0.0949421266467),(follJntLst[1],0.483193455966),(follJntLst[2],0.376727627326),(follJntLst[3],0.0451367900612),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(34)+']',tv=[(follJntLst[0],0.0670284115299),(follJntLst[1],0.43659679082),(follJntLst[2],0.430746214135),(follJntLst[3],0.0656285835144),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(35)+']',tv=[(follJntLst[0],0.0670284115299),(follJntLst[1],0.43659679082),(follJntLst[2],0.430746214135),(follJntLst[3],0.0656285835144),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(36)+']',tv=[(follJntLst[0],0.0459719013321),(follJntLst[1],0.383155193581),(follJntLst[2],0.478286132083),(follJntLst[3],0.0925867730037),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(37)+']',tv=[(follJntLst[0],0.0459719013321),(follJntLst[1],0.383155193581),(follJntLst[2],0.478286132083),(follJntLst[3],0.0925867730037),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(38)+']',tv=[(follJntLst[0],0.0306300861095),(follJntLst[1],0.326644491082),(follJntLst[2],0.515942319242),(follJntLst[3],0.126783103566),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(39)+']',tv=[(follJntLst[0],0.0306300861095),(follJntLst[1],0.326644491082),(follJntLst[2],0.515942319242),(follJntLst[3],0.126783103566),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(40)+']',tv=[(follJntLst[0],0.0198293699905),(follJntLst[1],0.270586804799),(follJntLst[2],0.54098216838),(follJntLst[3],0.168601656831),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(41)+']',tv=[(follJntLst[0],0.0198293699905),(follJntLst[1],0.270586804799),(follJntLst[2],0.54098216838),(follJntLst[3],0.168601656831),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(42)+']',tv=[(follJntLst[0],0.0123247388089),(follJntLst[1],0.215217615569),(follJntLst[2],0.544915155192),(follJntLst[3],0.215217733972),(follJntLst[4],0.0123247564574)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(43)+']',tv=[(follJntLst[0],0.0123247388089),(follJntLst[1],0.215217615569),(follJntLst[2],0.544915155192),(follJntLst[3],0.215217733972),(follJntLst[4],0.0123247564574)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(44)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.168601548579),(follJntLst[2],0.540982126424),(follJntLst[3],0.270586929098),(follJntLst[4],0.0198293958992)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(45)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.168601548579),(follJntLst[2],0.540982126424),(follJntLst[3],0.270586929098),(follJntLst[4],0.0198293958992)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(46)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.126783012418),(follJntLst[2],0.51594224757),(follJntLst[3],0.32664461711),(follJntLst[4],0.0306301229009)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(47)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.126783012418),(follJntLst[2],0.51594224757),(follJntLst[3],0.32664461711),(follJntLst[4],0.0306301229009)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(48)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0925866991224),(follJntLst[2],0.478286035829),(follJntLst[3],0.383155313221),(follJntLst[4],0.0459719518269)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(49)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0925866991224),(follJntLst[2],0.478286035829),(follJntLst[3],0.383155313221),(follJntLst[4],0.0459719518269)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(50)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0656285258563),(follJntLst[2],0.430746100442),(follJntLst[3],0.436596895224),(follJntLst[4],0.0670284784778)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(51)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0656285258563),(follJntLst[2],0.430746100442),(follJntLst[3],0.436596895224),(follJntLst[4],0.0670284784778)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(52)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0451367467238),(follJntLst[2],0.376727504327),(follJntLst[3],0.483193536584),(follJntLst[4],0.0949422123652)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(53)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0451367467238),(follJntLst[2],0.376727504327),(follJntLst[3],0.483193536584),(follJntLst[4],0.0949422123652)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(54)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0301129786522),(follJntLst[2],0.319864041329),(follJntLst[3],0.519349573644),(follJntLst[4],0.130673406375)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(55)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0301129786522),(follJntLst[2],0.319864041329),(follJntLst[3],0.519349573644),(follJntLst[4],0.130673406375)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(56)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0194849425715),(follJntLst[2],0.263584796865),(follJntLst[3],0.542102221868),(follJntLst[4],0.174828038696)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(57)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0194849425715),(follJntLst[2],0.263584796865),(follJntLst[3],0.542102221868),(follJntLst[4],0.174828038696)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(58)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0122274825765),(follJntLst[2],0.210763336314),(follJntLst[3],0.549517001123),(follJntLst[4],0.227492179987)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(59)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0122274825765),(follJntLst[2],0.210763336314),(follJntLst[3],0.549517001123),(follJntLst[4],0.227492179987)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(60)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.164721614081),(follJntLst[3],0.545012545408),(follJntLst[4],0.290265840511)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(61)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.164721614081),(follJntLst[3],0.545012545408),(follJntLst[4],0.290265840511)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(62)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.123565330298),(follJntLst[3],0.519459182143),(follJntLst[4],0.356975487558)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(63)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.123565330298),(follJntLst[3],0.519459182143),(follJntLst[4],0.356975487558)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(64)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0900048351302),(follJntLst[3],0.481446398902),(follJntLst[4],0.428548765968)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(65)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0900048351302),(follJntLst[3],0.481446398902),(follJntLst[4],0.428548765968)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(66)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0636261991314),(follJntLst[3],0.433834891454),(follJntLst[4],0.502538909415)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(67)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0636261991314),(follJntLst[3],0.433834891454),(follJntLst[4],0.502538909415)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(68)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.043638666309),(follJntLst[3],0.380206942527),(follJntLst[4],0.576154391164)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(69)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.043638666309),(follJntLst[3],0.380206942527),(follJntLst[4],0.576154391165)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(70)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0290369268527),(follJntLst[3],0.324447600838),(follJntLst[4],0.64651547231)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(71)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0290369268527),(follJntLst[3],0.324447600838),(follJntLst[4],0.64651547231)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(72)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0187538758931),(follJntLst[3],0.270341644982),(follJntLst[4],0.710904479125)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(73)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0187538758931),(follJntLst[3],0.270341644982),(follJntLst[4],0.710904479125)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(74)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0117815361811),(follJntLst[3],0.221254324938),(follJntLst[4],0.766964138881)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(75)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0117815361811),(follJntLst[3],0.221254324938),(follJntLst[4],0.766964138881)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(76)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.181248072516),(follJntLst[4],0.818751927484)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(77)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.181248072516),(follJntLst[4],0.818751927484)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(78)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.149106798705),(follJntLst[4],0.850893201295)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(79)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.149106798705),(follJntLst[4],0.850893201295)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(80)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.128549508512),(follJntLst[4],0.871450491488)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(81)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.128549508512),(follJntLst[4],0.871450491488)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(82)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.120225518622),(follJntLst[4],0.879774481378)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(83)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.120225518622),(follJntLst[4],0.879774481378)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(84)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.120225520527),(follJntLst[4],0.879774479473)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(85)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.120225520527),(follJntLst[4],0.879774479473)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(86)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.128549532161),(follJntLst[4],0.871450467839)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(87)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.128549532161),(follJntLst[4],0.871450467839)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(88)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.149106807882),(follJntLst[4],0.850893192118)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(89)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.149106807882),(follJntLst[4],0.850893192118)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(90)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.181248076077),(follJntLst[4],0.818751923923)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(91)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.181248076077),(follJntLst[4],0.818751923923)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(92)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0117815362406),(follJntLst[3],0.22125432629),(follJntLst[4],0.766964137469)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(93)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0117815362406),(follJntLst[3],0.22125432629),(follJntLst[4],0.766964137469)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(94)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0187538759133),(follJntLst[3],0.270341645503),(follJntLst[4],0.710904478584)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(95)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0187538759133),(follJntLst[3],0.270341645503),(follJntLst[4],0.710904478584)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(96)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0290369268596),(follJntLst[3],0.324447601038),(follJntLst[4],0.646515472103)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(97)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0290369268596),(follJntLst[3],0.324447601038),(follJntLst[4],0.646515472103)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(98)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0436386663114),(follJntLst[3],0.380206942604),(follJntLst[4],0.576154391085)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(99)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0436386663114),(follJntLst[3],0.380206942604),(follJntLst[4],0.576154391085)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(100)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0636261991324),(follJntLst[3],0.433834891484),(follJntLst[4],0.502538909384)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(101)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0636261991324),(follJntLst[3],0.433834891484),(follJntLst[4],0.502538909384)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(102)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0900048351308),(follJntLst[3],0.481446398914),(follJntLst[4],0.428548765955)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(103)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0900048351308),(follJntLst[3],0.481446398914),(follJntLst[4],0.428548765955)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(104)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.123565330299),(follJntLst[3],0.519459182148),(follJntLst[4],0.356975487553)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(105)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.123565330299),(follJntLst[3],0.519459182148),(follJntLst[4],0.356975487553)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(106)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.164721614082),(follJntLst[3],0.54501254541),(follJntLst[4],0.290265840509)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(107)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.164721614082),(follJntLst[3],0.54501254541),(follJntLst[4],0.290265840509)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(108)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0122274825765),(follJntLst[2],0.210763336314),(follJntLst[3],0.549517001123),(follJntLst[4],0.227492179986)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(109)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0122274825765),(follJntLst[2],0.210763336314),(follJntLst[3],0.549517001123),(follJntLst[4],0.227492179986)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(110)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0194849425715),(follJntLst[2],0.263584796865),(follJntLst[3],0.542102221868),(follJntLst[4],0.174828038695)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(111)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0194849425715),(follJntLst[2],0.263584796865),(follJntLst[3],0.542102221868),(follJntLst[4],0.174828038695)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(112)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0301129786522),(follJntLst[2],0.31986404133),(follJntLst[3],0.519349573644),(follJntLst[4],0.130673406374)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(113)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0301129786522),(follJntLst[2],0.31986404133),(follJntLst[3],0.519349573644),(follJntLst[4],0.130673406374)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(114)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0451367467238),(follJntLst[2],0.376727504328),(follJntLst[3],0.483193536583),(follJntLst[4],0.0949422123647)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(115)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0451367467238),(follJntLst[2],0.376727504328),(follJntLst[3],0.483193536583),(follJntLst[4],0.0949422123647)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(116)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0656285258563),(follJntLst[2],0.430746100443),(follJntLst[3],0.436596895223),(follJntLst[4],0.0670284784774)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(117)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0656285258563),(follJntLst[2],0.430746100443),(follJntLst[3],0.436596895223),(follJntLst[4],0.0670284784774)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(118)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0925866991224),(follJntLst[2],0.47828603583),(follJntLst[3],0.383155313221),(follJntLst[4],0.0459719518266)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(119)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0925866991224),(follJntLst[2],0.47828603583),(follJntLst[3],0.383155313221),(follJntLst[4],0.0459719518266)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(120)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.126783012418),(follJntLst[2],0.515942247571),(follJntLst[3],0.32664461711),(follJntLst[4],0.0306301229007)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(121)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.126783012418),(follJntLst[2],0.515942247571),(follJntLst[3],0.32664461711),(follJntLst[4],0.0306301229007)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(122)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.168601548579),(follJntLst[2],0.540982126425),(follJntLst[3],0.270586929097),(follJntLst[4],0.0198293958991)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(123)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.168601548579),(follJntLst[2],0.540982126425),(follJntLst[3],0.270586929097),(follJntLst[4],0.0198293958991)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(124)+']',tv=[(follJntLst[0],0.0123247388089),(follJntLst[1],0.215217615569),(follJntLst[2],0.544915155193),(follJntLst[3],0.215217733971),(follJntLst[4],0.0123247564573)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(125)+']',tv=[(follJntLst[0],0.0123247388089),(follJntLst[1],0.215217615569),(follJntLst[2],0.544915155193),(follJntLst[3],0.215217733971),(follJntLst[4],0.0123247564573)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(126)+']',tv=[(follJntLst[0],0.0198293699905),(follJntLst[1],0.270586804798),(follJntLst[2],0.540982168381),(follJntLst[3],0.16860165683),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(127)+']',tv=[(follJntLst[0],0.0198293699905),(follJntLst[1],0.270586804798),(follJntLst[2],0.540982168381),(follJntLst[3],0.16860165683),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(128)+']',tv=[(follJntLst[0],0.0306300861095),(follJntLst[1],0.326644491082),(follJntLst[2],0.515942319243),(follJntLst[3],0.126783103566),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(129)+']',tv=[(follJntLst[0],0.0306300861095),(follJntLst[1],0.326644491082),(follJntLst[2],0.515942319243),(follJntLst[3],0.126783103566),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(130)+']',tv=[(follJntLst[0],0.0459719013321),(follJntLst[1],0.383155193581),(follJntLst[2],0.478286132084),(follJntLst[3],0.0925867730032),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(131)+']',tv=[(follJntLst[0],0.0459719013321),(follJntLst[1],0.383155193581),(follJntLst[2],0.478286132084),(follJntLst[3],0.0925867730032),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(132)+']',tv=[(follJntLst[0],0.0670284115299),(follJntLst[1],0.43659679082),(follJntLst[2],0.430746214136),(follJntLst[3],0.0656285835141),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(133)+']',tv=[(follJntLst[0],0.0670284115299),(follJntLst[1],0.43659679082),(follJntLst[2],0.430746214136),(follJntLst[3],0.0656285835141),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(134)+']',tv=[(follJntLst[0],0.0949421266467),(follJntLst[1],0.483193455966),(follJntLst[2],0.376727627326),(follJntLst[3],0.0451367900609),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(135)+']',tv=[(follJntLst[0],0.0949421266467),(follJntLst[1],0.483193455966),(follJntLst[2],0.376727627326),(follJntLst[3],0.0451367900609),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(136)+']',tv=[(follJntLst[0],0.13067330041),(follJntLst[1],0.519349523965),(follJntLst[2],0.319864165588),(follJntLst[3],0.0301130100371),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(137)+']',tv=[(follJntLst[0],0.13067330041),(follJntLst[1],0.519349523965),(follJntLst[2],0.319864165588),(follJntLst[3],0.0301130100371),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(138)+']',tv=[(follJntLst[0],0.17482791224),(follJntLst[1],0.542102207916),(follJntLst[2],0.263584915362),(follJntLst[3],0.0194849644818),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(139)+']',tv=[(follJntLst[0],0.17482791224),(follJntLst[1],0.542102207916),(follJntLst[2],0.263584915362),(follJntLst[3],0.0194849644818),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(140)+']',tv=[(follJntLst[0],0.227492034314),(follJntLst[1],0.549517024658),(follJntLst[2],0.210763443699),(follJntLst[3],0.0122274973287),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(141)+']',tv=[(follJntLst[0],0.227492034314),(follJntLst[1],0.549517024658),(follJntLst[2],0.210763443699),(follJntLst[3],0.0122274973287),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(142)+']',tv=[(follJntLst[0],0.290265680112),(follJntLst[1],0.545012610636),(follJntLst[2],0.164721709253),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(143)+']',tv=[(follJntLst[0],0.290265680112),(follJntLst[1],0.545012610636),(follJntLst[2],0.164721709253),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(144)+']',tv=[(follJntLst[0],0.356975315045),(follJntLst[1],0.51945927665),(follJntLst[2],0.123565408305),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(145)+']',tv=[(follJntLst[0],0.356975315045),(follJntLst[1],0.51945927665),(follJntLst[2],0.123565408305),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(146)+']',tv=[(follJntLst[0],0.428548586788),(follJntLst[1],0.481446516474),(follJntLst[2],0.0900048967381),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(147)+']',tv=[(follJntLst[0],0.428548586788),(follJntLst[1],0.481446516474),(follJntLst[2],0.0900048967381),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(148)+']',tv=[(follJntLst[0],0.502538729623),(follJntLst[1],0.433835024357),(follJntLst[2],0.0636262460199),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(149)+']',tv=[(follJntLst[0],0.502538729623),(follJntLst[1],0.433835024357),(follJntLst[2],0.0636262460199),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(150)+']',tv=[(follJntLst[0],0.576154216694),(follJntLst[1],0.380207082595),(follJntLst[2],0.0436387007106),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(151)+']',tv=[(follJntLst[0],0.576154216694),(follJntLst[1],0.380207082595),(follJntLst[2],0.0436387007106),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(152)+']',tv=[(follJntLst[0],0.646515308231),(follJntLst[1],0.324447740569),(follJntLst[2],0.0290369512004),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(153)+']',tv=[(follJntLst[0],0.646515308231),(follJntLst[1],0.324447740569),(follJntLst[2],0.0290369512004),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(154)+']',tv=[(follJntLst[0],0.710904329014),(follJntLst[1],0.270341778448),(follJntLst[2],0.0187538925375),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(155)+']',tv=[(follJntLst[0],0.710904329014),(follJntLst[1],0.270341778448),(follJntLst[2],0.0187538925375),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(156)+']',tv=[(follJntLst[0],0.7669640044),(follJntLst[1],0.221254448394),(follJntLst[2],0.0117815472057),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(157)+']',tv=[(follJntLst[0],0.7669640044),(follJntLst[1],0.221254448394),(follJntLst[2],0.0117815472057),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(158)+']',tv=[(follJntLst[0],0.818751813231),(follJntLst[1],0.181248186769),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(159)+']',tv=[(follJntLst[0],0.818751813231),(follJntLst[1],0.181248186769),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(160)+']',tv=[(follJntLst[0],0.850893098333),(follJntLst[1],0.149106901667),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(161)+']',tv=[(follJntLst[0],0.850893098333),(follJntLst[1],0.149106901667),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(162)+']',tv=[(follJntLst[0],0.871450396377),(follJntLst[1],0.128549603623),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(163)+']',tv=[(follJntLst[0],0.871450396377),(follJntLst[1],0.128549603623),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n    \n                \n            \n        settmpskn()    \n    \n    \n    \n    \n    \n\n\n\n\na=cmds.promptDialog(\n    \t\ttitle='FollicleCreate',\n    \t\tmessage='Name of the RigPart',\n    \t\tbutton=['Create', \"Close\"],\n    \t\tdefaultButton='Create',\n    \t\tcancelButton=\"Close\",\n    \t\t)\nif a == 'Create':\n    textw = cmds.promptDialog(query=True, text=True)\n    Gloablname = textw\n    CreateSurface()\n    \nelse:\n    print 'Process Cancled'\n\n    \n    \n\n\n\n\n" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Flexi" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Flexi" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command " #################################################################\n######################     The Surface     ########################\n #################################################################\n#Author:Siddarth Mehra\n#Email:siddarthmehraajm@gmail.com\n#Mobile: +91-7728050400(Whatsapp)\n\n\n#This script created a bendy surface for attaching in rigs\n\n\n#Run this command proxyCube() after runin the script for a tempobject for basic skin for copying\n\nimport maya.cmds as cmds\nimport maya.mel as mel\nimport pymel.core as pm\n\n\n\n#CreateSurface()\n\n\n\n\ndef CreateSurface():\n    \n    #doHideInOutliner 1;\n    \n    ####################################################################\n                                #Group#CDef\n    ####################################################################\n    \n    \n    def GrpWPiv(s):\n            \n        cmds.select(cl=True)\n        \n        offset = cmds.group(n=str(s + '_Offset_Group'),em = True)\n        tmp= cmds.group(em=True)\n        cmds.delete(cmds.parentConstraint(s,tmp))\n        pos = cmds.xform(tmp, q=True, t=True, ws=True)\n        rot = cmds.xform(tmp, q=True, rotation=True, ws=True)\n        cmds.xform(offset, translation=pos, ws=True)\n        cmds.xform(offset, rotation=rot, ws=True)\n        cmds.makeIdentity(offset, apply=True, t=1, r=1, s=1 )\n        cmds.parent(s,offset)\n        cmds.delete(tmp)\n        return offset\n        \n    \n    ####################################################################\n                                #Extra#Def\n    ####################################################################\n    \n    \n    def SLc():\n            \n        cmds.select(cl=True)\n        \n        \n        \n    ####################################################################\n    \n    def SL(obj):\n            \n        cmds.select(obj)\n        return obj\n    \n    def SLT(obj,Sobj):\n            \n        cmds.select(obj,Sobj)\n        return obj,Sobj\n        \n    \n    ####################################################################\n    \n    def Rnm(obj,txt=str):\n            \n        renamedObj = cmds.rename(obj,txt)\n        return renamedObj\n    \n    ####################################################################\n    \n    def LnH(obj):\n           \n        cmds.setAttr( obj + '.t', lock=True )\n        cmds.setAttr( obj + '.r', lock=True )\n        cmds.setAttr( obj + '.s', lock=True )\n        \n        cmds.setAttr( obj + '.v', lock=True )   \n       \n        cmds.setAttr( obj + '.tx', k=False,channelBox = 0 )\n        cmds.setAttr( obj + '.ty', k=False,channelBox = 0 )\n        cmds.setAttr( obj + '.tz', k=False,channelBox = 0 )\n        \n        cmds.setAttr( obj + '.rx', k=False,channelBox = 0 )\n        cmds.setAttr( obj + '.ry', k=False,channelBox = 0 )\n        cmds.setAttr( obj + '.rz', k=False,channelBox = 0 )\n        \n        cmds.setAttr( obj + '.sx', k=False,channelBox = 0 )\n        cmds.setAttr( obj + '.sy', k=False,channelBox = 0 )\n        cmds.setAttr( obj + '.sz', k=False,channelBox = 0 )    \n        \n        \n    \n    \n    \n    ####################################################################\n                                #Name &Main Def\n    ####################################################################\n    \n    \n    \n    \n    #def ProSurface():\n        \n    TFoll = cmds.nurbsPlane(n = 'tmpPlane',p = (0,0,0),ax = (0,1,0),w = 1,lr = 6,d=3,u=1,v=5,ch=0)\n    \n    Folsize = range(5)\n    \n    tmpsize = .1\n    \n    folllst = []\n    \n    grplist= [] \n    follCtrl_Lst=[]\n    follJntLst=[]\n    ####################################################################\n                                #Create Follicles\n    ####################################################################\n    for i in Folsize:\n        \n        fol = pm.createNode('transform', n=(Gloablname+'_Follicle_0'+str(i+1)), ss=True)\n        folShape = pm.createNode('follicle', n=fol.name()+'Shape', p=fol, ss=True)\n        geo = pm.PyNode('tmpPlane')\n        geo.local >> folShape.inputSurface\n        geo.worldMatrix[0] >> folShape.inputWorldMatrix\n        folShape.outRotate >> fol.rotate\n        folShape.outTranslate >> fol.translate\n        fol.inheritsTransform.set(False)\n        folShape.parameterU.set(0.5)\n        \n        folShape.parameterV.set(tmpsize)\n        ##\n        tmpsize +=.2\n        ##\n        \n        ##\n        SLc()\n        ##\n        pm.select(fol)\n        folllst.append(cmds.ls(sl=True))\n        \n    ####################################################################\n                                #Follicle joints & ctrls\n    ####################################################################\n    \n    for i in folllst:\n    \n        innerCtrl = cmds.circle(r = .2,n=(i[0]+'_Jnt_Ctrl'))\n        \n        jnt = cmds.createNode('joint',n=(i[0]+'_Joint'))\n        #cmds.setAttr((jnt+'.jointOrientY'),90)\n        cmds.setAttr((jnt+'.radius'),.1)\n        SLc()\n        cmds.parent(jnt,innerCtrl)\n        #cmds.parent(innerCtrl,i[0])\n        #cmds.setAttr((innerCtrl[0]+'.translateY'),0)\n        try:\n            cmds.setAttr((innerCtrl[0]+'Shape'+'.overrideEnabled'),1)\n            cmds.setAttr((innerCtrl[0]+'Shape'+'.overrideColor'),17)\n        except:\n            pass\n            \n        ctrlGrp = cmds.group(innerCtrl[0],n=(innerCtrl[0]+'_Group'))\n        pos = cmds.xform(i, q=True, t=True, ws=True)\n        cmds.setAttr((ctrlGrp+'.translateZ'),pos[2])\n        cmds.setAttr((ctrlGrp+'.rotateY'),90)\n        follCtrl_Lst.append(ctrlGrp)\n        grpfol = cmds.group(i,n=(i[0]+'_Group'))\n        grplist.append(grpfol)\n        cmds.parentConstraint(i[0],ctrlGrp,mo=True)\n        cmds.scaleConstraint(i[0],ctrlGrp,mo=True)\n        follJntLst.append(jnt)\n        \n    \n    \n        \n        \n    ####################################################################\n                                #BS_Def Plane\n    ####################################################################\n    SLc()\n    \n    \n    FollicleCtrlGroup = cmds.group(follCtrl_Lst,n=(Gloablname+'_Follicle_Ctrl_Group'))\n    FollicleGroup = cmds.group(grplist,n=(Gloablname+'_Follicle_Group'))\n    \n    BSgeo = cmds.nurbsPlane(n = 'tmpBSPlane',p = (0,0,0),ax = (0,1,0),w = 1,lr = 6,d=3,u=1,v=5,ch=0)\n    cmds.move(-3,0,0)\n    \n    cmds.blendShape(BSgeo,TFoll,automatic=True,n=(Gloablname+'Follicle_Deform_BS'),w=[(0),(1)])\n    \n    \n    ####################################################################\n                                #Wire Deformer\n    ####################################################################\n    try:\n        wireDfrmrCurve = mel.eval('curve -d 2 -p -3 0 3 -p -3 0 0 -p -3 0 -3 -k 0 -k 0 -k 1 -k 1')\n    \n        wireDfrmrCurveNN = Rnm(wireDfrmrCurve,(Gloablname+'_WireDeformerCurve'))\n        SLc()\n        \n        pm.select(BSgeo[0])\n        wiredfrmr = cmds.wire(gw = False,en = 1,ce=0,li=0,dds=(1,10.0),w = (BSgeo[0],wireDfrmrCurveNN))\n        print 'Ignore the Error!'\n    except:\n        print 'oh'\n        \n        \n    \n                            #Create Clusters\n    ####################################################################\n    \n    cmds.select((wireDfrmrCurveNN+'.cv[0]'),(wireDfrmrCurveNN+'.cv[1]'))\n    Lcl01 = cmds.cluster(n=(Gloablname+'_CL_01'))\n    cmds.xform(Lcl01,ws=True,piv=(-3,0,3))\n    try:\n        cmds.setAttr(Lcl01[1]+'Shape.originX',-3)\n        cmds.setAttr(Lcl01[1]+'Shape.originY',0)\n        cmds.setAttr(Lcl01[1]+'Shape.originZ',3)\n        \n    except:\n        pass\n    \n    \n    cl01 = cmds.spaceLocator(n=(Gloablname+'Wire_L_01'))\n    cl01Grp = GrpWPiv(str(cl01[0]))\n    cmds.setAttr(cl01Grp+'.rotateY',90)\n    cmds.delete(cmds.pointConstraint(Lcl01,cl01Grp))\n    cmds.parentConstraint(cl01,Lcl01[1],mo = True)\n    \n    SLc()\n    ####################################################################\n    \n    cmds.select((wireDfrmrCurveNN+'.cv[2]'),(wireDfrmrCurveNN+'.cv[1]'))\n    Lcl02 = cmds.cluster(n=(Gloablname+'_CL_02'))\n    cmds.xform(Lcl02,ws=True,piv=(-3,0,-3))\n    try:\n        cmds.setAttr(Lcl02[1]+'Shape.originX',-3)\n        cmds.setAttr(Lcl02[1]+'Shape.originY',0)\n        cmds.setAttr(Lcl02[1]+'Shape.originZ',-3)\n        \n    except:\n        pass\n    cl02 = cmds.spaceLocator(n=(Gloablname+'Wire_L_02'))\n    cl02Grp = GrpWPiv(str(cl02[0]))\n    cmds.setAttr(cl02Grp+'.rotateY',90)\n    cmds.delete(cmds.pointConstraint(Lcl02,cl02Grp))\n    cmds.parentConstraint(cl02,Lcl02[1],mo = True)\n    \n    SLc()\n    ####################################################################\n    \n    cmds.select((wireDfrmrCurveNN+'.cv[1]'))\n    LclM = cmds.cluster(n=(Gloablname+'_CL_Mid'))\n    cmds.xform(LclM,ws=True,piv=(-3,0,0))\n    try:\n        cmds.setAttr(LclM[1]+'Shape.originX',-3)\n        cmds.setAttr(LclM[1]+'Shape.originY',0)\n        cmds.setAttr(LclM[1]+'Shape.originZ',0)\n        \n    except:\n        pass\n    clM = cmds.spaceLocator(n=(Gloablname+'Wire_L_M'))\n    clMGrp = GrpWPiv(str(clM[0]))\n    cmds.setAttr(clMGrp+'.rotateY',90)\n    cmds.delete(cmds.pointConstraint(LclM,clMGrp))\n    cmds.parentConstraint(clM,LclM[1],mo = True)\n    \n    SLc()\n    ####################################################################\n    cmds.percent(Lcl02[0],(wireDfrmrCurveNN+'.cv[1]'),v=.5)\n    cmds.percent(Lcl01[0],(wireDfrmrCurveNN+'.cv[1]'),v=.5)\n    \n    ####################################################################\n                                #Cluster Sec Controls\n    ####################################################################\n    Actrl = mel.eval(\"sphere -esw 360 -r 0.3 -d 1 -ut 0 -tol 0.01 -s 4 -nsp 2 -ch 0;\")\n    ActrlNN =Rnm(Actrl,(Gloablname+'_A_Sec_Ctrl'))\n    try:\n        cmds.setAttr((ActrlNN+'Shape'+'.overrideEnabled'),1)\n        cmds.setAttr((ActrlNN+'Shape'+'.overrideShading'),0)\n        cmds.setAttr((ActrlNN+'Shape'+'.overrideColor'),4)\n        cmds.setAttr((ActrlNN+'Shape'+'.overrideEnabled'),lock = True)\n        cmds.setAttr((ActrlNN+'Shape'+'.overrideShading'),lock = True)\n        cmds.setAttr((ActrlNN+'Shape'+'.overrideColor'),lock = True)\n    except:\n        pass\n    \n    \n    cmds.move(0,0,3,ActrlNN)\n    cmds.makeIdentity(ActrlNN, apply=True, t=1, r=1, s=1 )\n    cmds.connectAttr( (ActrlNN+'.t'), (cl01[0]+'.t') )\n    cmds.connectAttr( (ActrlNN+'.r'), (cl01[0]+'.r') )\n    cmds.connectAttr( (ActrlNN+'.s'), (cl01[0]+'.s') )\n    ####################################################################\n    Midctrl = mel.eval(\"sphere -esw 360 -r 0.3 -d 1 -ut 0 -tol 0.01 -s 4 -nsp 2 -ch 0;\")\n    MidctrlNN =Rnm(Midctrl,(Gloablname+'_Mid_Sec_Ctrl'))\n    try:\n        cmds.setAttr((MidctrlNN+'Shape'+'.overrideEnabled'),1)\n        cmds.setAttr((MidctrlNN+'Shape'+'.overrideShading'),0)\n        cmds.setAttr((MidctrlNN+'Shape'+'.overrideColor'),4)\n        cmds.setAttr((MidctrlNN+'Shape'+'.overrideEnabled'),lock = True)\n        cmds.setAttr((MidctrlNN+'Shape'+'.overrideShading'),lock = True)\n        cmds.setAttr((MidctrlNN+'Shape'+'.overrideColor'),lock = True)\n    except:\n        pass\n    \n    \n    cmds.makeIdentity(MidctrlNN, apply=True, t=1, r=1, s=1 )\n    cmds.connectAttr( (MidctrlNN+'.t'), (clM[0]+'.t') )\n    cmds.connectAttr( (MidctrlNN+'.r'), (clM[0]+'.r') )\n    cmds.connectAttr( (MidctrlNN+'.s'), (clM[0]+'.s') )\n    ####################################################################\n    Bctrl = mel.eval(\"sphere -esw 360 -r 0.3 -d 1 -ut 0 -tol 0.01 -s 4 -nsp 2 -ch 0;\")\n    BctrlNN =Rnm(Bctrl,(Gloablname+'_B_Sec_Ctrl'))\n    try:\n        cmds.setAttr((BctrlNN+'Shape'+'.overrideEnabled'),1)\n        cmds.setAttr((BctrlNN+'Shape'+'.overrideShading'),0)\n        cmds.setAttr((BctrlNN+'Shape'+'.overrideColor'),4)\n        cmds.setAttr((BctrlNN+'Shape'+'.overrideEnabled'),lock = True)\n        cmds.setAttr((BctrlNN+'Shape'+'.overrideShading'),lock = True)\n        cmds.setAttr((BctrlNN+'Shape'+'.overrideColor'),lock = True)\n    except:\n        pass\n    \n    \n    cmds.move(0,0,-3,BctrlNN)\n    cmds.makeIdentity(BctrlNN, apply=True, t=1, r=1, s=1 )\n    cmds.connectAttr( (BctrlNN+'.t'), (cl02[0]+'.t') )\n    cmds.connectAttr( (BctrlNN+'.r'), (cl02[0]+'.r') )\n    cmds.connectAttr( (BctrlNN+'.s'), (cl02[0]+'.s') )\n    ####################################################################\n    \n    secCtrls = ActrlNN,MidctrlNN,BctrlNN\n    secCtrlsgrpLst = []\n    \n    for i in secCtrls:\n        a = GrpWPiv(i)\n        secCtrlsgrpLst.append(a)\n        cmds.setAttr(a+'.rotateY',90)\n        \n        \n        pass\n        \n        \n    \n        \n    cmds.pointConstraint(ActrlNN,secCtrlsgrpLst[1],w=.5,mo=True)\n    cmds.pointConstraint(BctrlNN,secCtrlsgrpLst[1],w=.5,mo=True)\n    SLc()\n    SecCtrlsMainGrp = cmds.group(secCtrlsgrpLst,n = (Gloablname+'_Sec_Ctrl_Group'))\n    LocatorsGrpList = cl01Grp,cl02Grp,clMGrp\n    \n    \n    SLc()\n    \n      \n    ####################################################################\n                        #Organising & Renaming Everything\n    ####################################################################\n                                #MOVE\n    MoveFollicleGeo = Rnm(TFoll,(Gloablname+'_Main_Geo'))\n    globalMoveGrp = cmds.group(MoveFollicleGeo,SecCtrlsMainGrp,n=(Gloablname+'_Global_Move_Group'))\n    SLc()\n    ####################################################################\n                                #Deform \n    BsDeformGeo = Rnm(BSgeo,(Gloablname+'_BS_Geo'))\n    ClGroup = cmds.group(LocatorsGrpList,n=(Gloablname+'_Cl_Group'))\n    cls =LclM[1],Lcl01[1],Lcl02[1] \n    cmds.parent(cls,ClGroup)\n    WireGroup = cmds.group(wireDfrmrCurveNN,(wireDfrmrCurveNN+'BaseWire'),n=(Gloablname+'_Wire_Group'))    \n    DeformGrp  = cmds.group(ClGroup,WireGroup,BsDeformGeo,n=(Gloablname+'_SurfaceDeform_Group'))    \n    cmds.setAttr(DeformGrp+'.v',0)\n    cmds.setAttr(FollicleGroup+'.v',0)\n    \n    ####################################################################\n                                #Global\n    \n    \n    MainNonDeformGroup=cmds.group(globalMoveGrp,DeformGrp,FollicleGroup,FollicleCtrlGroup,n=(Gloablname+'_Group'))    \n    \n    \n    \n    \n    ####################################################################\n                                #FollicleScale\n    ####################################################################\n    \n    \n    for i in folllst:\n        #cmds.connectAttr((globalMoveGrp+'.s'), (i[0]+'.s'))\n        cmds.scaleConstraint(globalMoveGrp,i[0],mo = True)\n        \n        \n    ####################################################################\n                                #Global_Ctrl\n    #################################################################### \n    \n    glCtrl = mel.eval(\"curve -d 1 -p -5 0 0 -p -3 0 -2 -p -3 0 -1 -p 3 0 -1 -p 3 0 -2 -p 5 0 0 -p 3 0 2 -p 3 0 1 -p -3 0 1 -p -3 0 2 -p -5 0 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 ;\")\n    cmds.select(str(glCtrl)+'.cv[0:10]',r=True)\n    cmds.scale(.35,.35,.35)\n    cmds.rotate(0,90,0)\n    SLc()\n    glCtrlNN = Rnm(glCtrl,(Gloablname+'_Placement'))\n    glCtrlGrp=cmds.group(glCtrlNN,n = (Gloablname+'_Ctrl_Group'))\n    cmds.setAttr(glCtrlGrp+'.rotateY',90)\n    cmds.parent(glCtrlGrp,MainNonDeformGroup)\n    cmds.parent(globalMoveGrp,glCtrlNN)\n    cmds.reorder(glCtrlGrp,f = True)\n    \n    \n    \n    \n    ####################################################################\n                                #Twist Deformer & Attrs\n    ####################################################################\n    \n    \n    \n    twistDeformer = cmds.nonLinear(BsDeformGeo, type='twist')\n    SL(twistDeformer[1])\n    cmds.rotate(90,0,0)\n    SLc()\n    cmds.connectAttr(BctrlNN+'.rotateX',twistDeformer[0]+'.startAngle')\n    \n    \n    cmds.connectAttr(ActrlNN+'.rotateX',twistDeformer[0]+'.endAngle')\n    \n    cmds.reorderDeformers(str(wiredfrmr[0]),str(twistDeformer[0]),BsDeformGeo)\n    \n    Rnm(twistDeformer[0],(Gloablname+'_TwistDeformer_Attrs'))\n    twstDfmNN = Rnm(twistDeformer[1],(Gloablname+'_TwistDeformer'))\n    cmds.parent(twstDfmNN,DeformGrp)\n    \n    ####################################################################\n                                #Squash&Stretch\n    ####################################################################\n    \n    \n    cmds.addAttr(str(glCtrlNN),ln = '_',nn = ' ',at = 'enum',en='Volume:',k=True)    \n    \n    SquetchAttr = cmds.addAttr(glCtrlNN,ln = 'Squetch',at = 'bool',k=True)\n    cmds.setAttr(glCtrlNN+'.Squetch',1)\n    \n    CurveInfoSquetch = cmds.arclen(wiredfrmr[2],ch = 1)\n    CurveInfoSquetch = Rnm(CurveInfoSquetch,(Gloablname+'_Squetch_CrvInfo'))\n    \n    \n    SquetchMD = cmds.createNode('multiplyDivide',n=(Gloablname+'_Squetch_MD'))\n    \n    cmds.setAttr(SquetchMD+'.operation',2)\n    \n    cmds.connectAttr(CurveInfoSquetch+'.arcLength',SquetchMD+'.input1X')\n    \n    cmds.setAttr(SquetchMD+'.input2X',float(cmds.getAttr(CurveInfoSquetch+'.arcLength')))\n    \n    SquetchVolumeMD = cmds.createNode('multiplyDivide',n=(Gloablname+'_Squetch_Volume_MD'))\n    \n    cmds.setAttr(SquetchVolumeMD+'.operation',2)\n    \n    \n    cmds.setAttr(SquetchVolumeMD+'.input1X',float(1.0))\n    \n    cmds.setAttr(SquetchVolumeMD+'.input2X',float(cmds.getAttr(CurveInfoSquetch+'.arcLength')))\n    \n    cmds.connectAttr(SquetchMD+'.outputX',SquetchVolumeMD+'.input2X')\n    \n    SquetchCondition = cmds.createNode('condition',n=(Gloablname+'_SquetchCondition'))\n    \n    cmds.setAttr(SquetchCondition + '.secondTerm',float(1.0))\n    \n    cmds.connectAttr(SquetchVolumeMD+'.outputX',SquetchCondition+'.colorIfTrueR')\n    \n    cmds.connectAttr(glCtrlNN+'.Squetch',SquetchCondition+'.firstTerm')\n    for i in follJntLst:\n        \n        cmds.connectAttr(SquetchCondition+'.outColorR',str(i+'.scaleX'))\n        cmds.connectAttr(SquetchCondition+'.outColorR',str(i+'.scaleY'))\n        \n    SLc()\n    \n    ############################################################\n                                #skn\n    ####################################################################\n    def proxyCube():   \n        tmpsknCube = cmds.polyCube(w=.3,h=.3,d=6,sd=40,n=(Gloablname+'_tmp_SknCube'),ch=0)\n        \n        cmds.makeIdentity(tmpsknCube, apply=True, t=1, r=1, s=1 )\n        #SL(follJntLst)\n        skncls  = cmds.skinCluster(follJntLst,tmpsknCube,dr=10)\n        #vtxCount = cmds.polyEvaluate(tmpsknCube,v=True)\n        \n        \n        #for i in range(vtxCount):\n           # a = cmds.skinPercent('skinCluster1','Hi_tmpSknCube'+'.vtx['+str(i)+']',q=1,v=1)\n           # print 'cmds.skinPercent(str(skncls[0]),tmpsknCube[0]'+\"+'.vtx['+\"+'str('+str(i)+')'+\"+']'\"+',tv=[(follJntLst[0],'+str(a[0])+'),'+'(follJntLst[1],'+str(a[1])+'),'+'(follJntLst[2],'+str(a[2])+'),'+'(follJntLst[3],'+str(a[3])+'),'+'(follJntLst[4],'+str(a[4])+')'+'])'\n            \n            \n        def settmpskn():\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(0)+']',tv=[(follJntLst[0],0.879774389594),(follJntLst[1],0.120225610406),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(1)+']',tv=[(follJntLst[0],0.879774389594),(follJntLst[1],0.120225610406),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(2)+']',tv=[(follJntLst[0],0.879774387689),(follJntLst[1],0.120225612311),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(3)+']',tv=[(follJntLst[0],0.879774387689),(follJntLst[1],0.120225612311),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(4)+']',tv=[(follJntLst[0],0.871450372729),(follJntLst[1],0.128549627271),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(5)+']',tv=[(follJntLst[0],0.871450372729),(follJntLst[1],0.128549627271),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(6)+']',tv=[(follJntLst[0],0.850893089157),(follJntLst[1],0.149106910843),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(7)+']',tv=[(follJntLst[0],0.850893089157),(follJntLst[1],0.149106910843),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(8)+']',tv=[(follJntLst[0],0.818751809671),(follJntLst[1],0.181248190329),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(9)+']',tv=[(follJntLst[0],0.818751809671),(follJntLst[1],0.181248190329),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(10)+']',tv=[(follJntLst[0],0.766964002989),(follJntLst[1],0.221254449746),(follJntLst[2],0.0117815472651),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(11)+']',tv=[(follJntLst[0],0.766964002989),(follJntLst[1],0.221254449746),(follJntLst[2],0.0117815472651),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(12)+']',tv=[(follJntLst[0],0.710904328474),(follJntLst[1],0.270341778968),(follJntLst[2],0.0187538925576),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(13)+']',tv=[(follJntLst[0],0.710904328474),(follJntLst[1],0.270341778968),(follJntLst[2],0.0187538925576),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(14)+']',tv=[(follJntLst[0],0.646515308025),(follJntLst[1],0.324447740768),(follJntLst[2],0.0290369512072),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(15)+']',tv=[(follJntLst[0],0.646515308025),(follJntLst[1],0.324447740768),(follJntLst[2],0.0290369512072),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(16)+']',tv=[(follJntLst[0],0.576154216616),(follJntLst[1],0.380207082672),(follJntLst[2],0.0436387007128),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(17)+']',tv=[(follJntLst[0],0.576154216616),(follJntLst[1],0.380207082672),(follJntLst[2],0.0436387007128),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(18)+']',tv=[(follJntLst[0],0.502538729593),(follJntLst[1],0.433835024386),(follJntLst[2],0.0636262460207),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(19)+']',tv=[(follJntLst[0],0.502538729593),(follJntLst[1],0.433835024386),(follJntLst[2],0.0636262460207),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(20)+']',tv=[(follJntLst[0],0.428548586776),(follJntLst[1],0.481446516485),(follJntLst[2],0.0900048967383),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(21)+']',tv=[(follJntLst[0],0.428548586776),(follJntLst[1],0.481446516485),(follJntLst[2],0.0900048967383),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(22)+']',tv=[(follJntLst[0],0.35697531504),(follJntLst[1],0.519459276654),(follJntLst[2],0.123565408305),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(23)+']',tv=[(follJntLst[0],0.35697531504),(follJntLst[1],0.519459276654),(follJntLst[2],0.123565408305),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(24)+']',tv=[(follJntLst[0],0.29026568011),(follJntLst[1],0.545012610637),(follJntLst[2],0.164721709253),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(25)+']',tv=[(follJntLst[0],0.29026568011),(follJntLst[1],0.545012610637),(follJntLst[2],0.164721709253),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(26)+']',tv=[(follJntLst[0],0.227492034314),(follJntLst[1],0.549517024659),(follJntLst[2],0.210763443699),(follJntLst[3],0.0122274973288),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(27)+']',tv=[(follJntLst[0],0.227492034314),(follJntLst[1],0.549517024659),(follJntLst[2],0.210763443699),(follJntLst[3],0.0122274973288),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(28)+']',tv=[(follJntLst[0],0.17482791224),(follJntLst[1],0.542102207916),(follJntLst[2],0.263584915362),(follJntLst[3],0.0194849644819),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(29)+']',tv=[(follJntLst[0],0.17482791224),(follJntLst[1],0.542102207916),(follJntLst[2],0.263584915362),(follJntLst[3],0.0194849644819),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(30)+']',tv=[(follJntLst[0],0.13067330041),(follJntLst[1],0.519349523965),(follJntLst[2],0.319864165588),(follJntLst[3],0.0301130100373),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(31)+']',tv=[(follJntLst[0],0.13067330041),(follJntLst[1],0.519349523965),(follJntLst[2],0.319864165588),(follJntLst[3],0.0301130100373),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(32)+']',tv=[(follJntLst[0],0.0949421266467),(follJntLst[1],0.483193455966),(follJntLst[2],0.376727627326),(follJntLst[3],0.0451367900612),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(33)+']',tv=[(follJntLst[0],0.0949421266467),(follJntLst[1],0.483193455966),(follJntLst[2],0.376727627326),(follJntLst[3],0.0451367900612),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(34)+']',tv=[(follJntLst[0],0.0670284115299),(follJntLst[1],0.43659679082),(follJntLst[2],0.430746214135),(follJntLst[3],0.0656285835144),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(35)+']',tv=[(follJntLst[0],0.0670284115299),(follJntLst[1],0.43659679082),(follJntLst[2],0.430746214135),(follJntLst[3],0.0656285835144),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(36)+']',tv=[(follJntLst[0],0.0459719013321),(follJntLst[1],0.383155193581),(follJntLst[2],0.478286132083),(follJntLst[3],0.0925867730037),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(37)+']',tv=[(follJntLst[0],0.0459719013321),(follJntLst[1],0.383155193581),(follJntLst[2],0.478286132083),(follJntLst[3],0.0925867730037),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(38)+']',tv=[(follJntLst[0],0.0306300861095),(follJntLst[1],0.326644491082),(follJntLst[2],0.515942319242),(follJntLst[3],0.126783103566),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(39)+']',tv=[(follJntLst[0],0.0306300861095),(follJntLst[1],0.326644491082),(follJntLst[2],0.515942319242),(follJntLst[3],0.126783103566),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(40)+']',tv=[(follJntLst[0],0.0198293699905),(follJntLst[1],0.270586804799),(follJntLst[2],0.54098216838),(follJntLst[3],0.168601656831),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(41)+']',tv=[(follJntLst[0],0.0198293699905),(follJntLst[1],0.270586804799),(follJntLst[2],0.54098216838),(follJntLst[3],0.168601656831),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(42)+']',tv=[(follJntLst[0],0.0123247388089),(follJntLst[1],0.215217615569),(follJntLst[2],0.544915155192),(follJntLst[3],0.215217733972),(follJntLst[4],0.0123247564574)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(43)+']',tv=[(follJntLst[0],0.0123247388089),(follJntLst[1],0.215217615569),(follJntLst[2],0.544915155192),(follJntLst[3],0.215217733972),(follJntLst[4],0.0123247564574)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(44)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.168601548579),(follJntLst[2],0.540982126424),(follJntLst[3],0.270586929098),(follJntLst[4],0.0198293958992)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(45)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.168601548579),(follJntLst[2],0.540982126424),(follJntLst[3],0.270586929098),(follJntLst[4],0.0198293958992)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(46)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.126783012418),(follJntLst[2],0.51594224757),(follJntLst[3],0.32664461711),(follJntLst[4],0.0306301229009)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(47)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.126783012418),(follJntLst[2],0.51594224757),(follJntLst[3],0.32664461711),(follJntLst[4],0.0306301229009)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(48)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0925866991224),(follJntLst[2],0.478286035829),(follJntLst[3],0.383155313221),(follJntLst[4],0.0459719518269)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(49)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0925866991224),(follJntLst[2],0.478286035829),(follJntLst[3],0.383155313221),(follJntLst[4],0.0459719518269)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(50)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0656285258563),(follJntLst[2],0.430746100442),(follJntLst[3],0.436596895224),(follJntLst[4],0.0670284784778)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(51)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0656285258563),(follJntLst[2],0.430746100442),(follJntLst[3],0.436596895224),(follJntLst[4],0.0670284784778)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(52)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0451367467238),(follJntLst[2],0.376727504327),(follJntLst[3],0.483193536584),(follJntLst[4],0.0949422123652)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(53)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0451367467238),(follJntLst[2],0.376727504327),(follJntLst[3],0.483193536584),(follJntLst[4],0.0949422123652)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(54)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0301129786522),(follJntLst[2],0.319864041329),(follJntLst[3],0.519349573644),(follJntLst[4],0.130673406375)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(55)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0301129786522),(follJntLst[2],0.319864041329),(follJntLst[3],0.519349573644),(follJntLst[4],0.130673406375)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(56)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0194849425715),(follJntLst[2],0.263584796865),(follJntLst[3],0.542102221868),(follJntLst[4],0.174828038696)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(57)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0194849425715),(follJntLst[2],0.263584796865),(follJntLst[3],0.542102221868),(follJntLst[4],0.174828038696)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(58)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0122274825765),(follJntLst[2],0.210763336314),(follJntLst[3],0.549517001123),(follJntLst[4],0.227492179987)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(59)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0122274825765),(follJntLst[2],0.210763336314),(follJntLst[3],0.549517001123),(follJntLst[4],0.227492179987)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(60)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.164721614081),(follJntLst[3],0.545012545408),(follJntLst[4],0.290265840511)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(61)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.164721614081),(follJntLst[3],0.545012545408),(follJntLst[4],0.290265840511)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(62)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.123565330298),(follJntLst[3],0.519459182143),(follJntLst[4],0.356975487558)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(63)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.123565330298),(follJntLst[3],0.519459182143),(follJntLst[4],0.356975487558)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(64)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0900048351302),(follJntLst[3],0.481446398902),(follJntLst[4],0.428548765968)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(65)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0900048351302),(follJntLst[3],0.481446398902),(follJntLst[4],0.428548765968)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(66)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0636261991314),(follJntLst[3],0.433834891454),(follJntLst[4],0.502538909415)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(67)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0636261991314),(follJntLst[3],0.433834891454),(follJntLst[4],0.502538909415)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(68)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.043638666309),(follJntLst[3],0.380206942527),(follJntLst[4],0.576154391164)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(69)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.043638666309),(follJntLst[3],0.380206942527),(follJntLst[4],0.576154391165)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(70)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0290369268527),(follJntLst[3],0.324447600838),(follJntLst[4],0.64651547231)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(71)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0290369268527),(follJntLst[3],0.324447600838),(follJntLst[4],0.64651547231)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(72)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0187538758931),(follJntLst[3],0.270341644982),(follJntLst[4],0.710904479125)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(73)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0187538758931),(follJntLst[3],0.270341644982),(follJntLst[4],0.710904479125)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(74)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0117815361811),(follJntLst[3],0.221254324938),(follJntLst[4],0.766964138881)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(75)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0117815361811),(follJntLst[3],0.221254324938),(follJntLst[4],0.766964138881)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(76)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.181248072516),(follJntLst[4],0.818751927484)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(77)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.181248072516),(follJntLst[4],0.818751927484)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(78)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.149106798705),(follJntLst[4],0.850893201295)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(79)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.149106798705),(follJntLst[4],0.850893201295)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(80)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.128549508512),(follJntLst[4],0.871450491488)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(81)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.128549508512),(follJntLst[4],0.871450491488)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(82)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.120225518622),(follJntLst[4],0.879774481378)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(83)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.120225518622),(follJntLst[4],0.879774481378)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(84)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.120225520527),(follJntLst[4],0.879774479473)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(85)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.120225520527),(follJntLst[4],0.879774479473)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(86)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.128549532161),(follJntLst[4],0.871450467839)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(87)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.128549532161),(follJntLst[4],0.871450467839)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(88)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.149106807882),(follJntLst[4],0.850893192118)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(89)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.149106807882),(follJntLst[4],0.850893192118)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(90)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.181248076077),(follJntLst[4],0.818751923923)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(91)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0),(follJntLst[3],0.181248076077),(follJntLst[4],0.818751923923)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(92)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0117815362406),(follJntLst[3],0.22125432629),(follJntLst[4],0.766964137469)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(93)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0117815362406),(follJntLst[3],0.22125432629),(follJntLst[4],0.766964137469)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(94)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0187538759133),(follJntLst[3],0.270341645503),(follJntLst[4],0.710904478584)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(95)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0187538759133),(follJntLst[3],0.270341645503),(follJntLst[4],0.710904478584)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(96)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0290369268596),(follJntLst[3],0.324447601038),(follJntLst[4],0.646515472103)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(97)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0290369268596),(follJntLst[3],0.324447601038),(follJntLst[4],0.646515472103)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(98)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0436386663114),(follJntLst[3],0.380206942604),(follJntLst[4],0.576154391085)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(99)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0436386663114),(follJntLst[3],0.380206942604),(follJntLst[4],0.576154391085)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(100)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0636261991324),(follJntLst[3],0.433834891484),(follJntLst[4],0.502538909384)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(101)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0636261991324),(follJntLst[3],0.433834891484),(follJntLst[4],0.502538909384)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(102)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0900048351308),(follJntLst[3],0.481446398914),(follJntLst[4],0.428548765955)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(103)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.0900048351308),(follJntLst[3],0.481446398914),(follJntLst[4],0.428548765955)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(104)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.123565330299),(follJntLst[3],0.519459182148),(follJntLst[4],0.356975487553)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(105)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.123565330299),(follJntLst[3],0.519459182148),(follJntLst[4],0.356975487553)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(106)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.164721614082),(follJntLst[3],0.54501254541),(follJntLst[4],0.290265840509)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(107)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0),(follJntLst[2],0.164721614082),(follJntLst[3],0.54501254541),(follJntLst[4],0.290265840509)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(108)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0122274825765),(follJntLst[2],0.210763336314),(follJntLst[3],0.549517001123),(follJntLst[4],0.227492179986)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(109)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0122274825765),(follJntLst[2],0.210763336314),(follJntLst[3],0.549517001123),(follJntLst[4],0.227492179986)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(110)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0194849425715),(follJntLst[2],0.263584796865),(follJntLst[3],0.542102221868),(follJntLst[4],0.174828038695)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(111)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0194849425715),(follJntLst[2],0.263584796865),(follJntLst[3],0.542102221868),(follJntLst[4],0.174828038695)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(112)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0301129786522),(follJntLst[2],0.31986404133),(follJntLst[3],0.519349573644),(follJntLst[4],0.130673406374)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(113)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0301129786522),(follJntLst[2],0.31986404133),(follJntLst[3],0.519349573644),(follJntLst[4],0.130673406374)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(114)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0451367467238),(follJntLst[2],0.376727504328),(follJntLst[3],0.483193536583),(follJntLst[4],0.0949422123647)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(115)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0451367467238),(follJntLst[2],0.376727504328),(follJntLst[3],0.483193536583),(follJntLst[4],0.0949422123647)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(116)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0656285258563),(follJntLst[2],0.430746100443),(follJntLst[3],0.436596895223),(follJntLst[4],0.0670284784774)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(117)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0656285258563),(follJntLst[2],0.430746100443),(follJntLst[3],0.436596895223),(follJntLst[4],0.0670284784774)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(118)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0925866991224),(follJntLst[2],0.47828603583),(follJntLst[3],0.383155313221),(follJntLst[4],0.0459719518266)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(119)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.0925866991224),(follJntLst[2],0.47828603583),(follJntLst[3],0.383155313221),(follJntLst[4],0.0459719518266)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(120)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.126783012418),(follJntLst[2],0.515942247571),(follJntLst[3],0.32664461711),(follJntLst[4],0.0306301229007)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(121)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.126783012418),(follJntLst[2],0.515942247571),(follJntLst[3],0.32664461711),(follJntLst[4],0.0306301229007)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(122)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.168601548579),(follJntLst[2],0.540982126425),(follJntLst[3],0.270586929097),(follJntLst[4],0.0198293958991)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(123)+']',tv=[(follJntLst[0],0.0),(follJntLst[1],0.168601548579),(follJntLst[2],0.540982126425),(follJntLst[3],0.270586929097),(follJntLst[4],0.0198293958991)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(124)+']',tv=[(follJntLst[0],0.0123247388089),(follJntLst[1],0.215217615569),(follJntLst[2],0.544915155193),(follJntLst[3],0.215217733971),(follJntLst[4],0.0123247564573)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(125)+']',tv=[(follJntLst[0],0.0123247388089),(follJntLst[1],0.215217615569),(follJntLst[2],0.544915155193),(follJntLst[3],0.215217733971),(follJntLst[4],0.0123247564573)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(126)+']',tv=[(follJntLst[0],0.0198293699905),(follJntLst[1],0.270586804798),(follJntLst[2],0.540982168381),(follJntLst[3],0.16860165683),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(127)+']',tv=[(follJntLst[0],0.0198293699905),(follJntLst[1],0.270586804798),(follJntLst[2],0.540982168381),(follJntLst[3],0.16860165683),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(128)+']',tv=[(follJntLst[0],0.0306300861095),(follJntLst[1],0.326644491082),(follJntLst[2],0.515942319243),(follJntLst[3],0.126783103566),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(129)+']',tv=[(follJntLst[0],0.0306300861095),(follJntLst[1],0.326644491082),(follJntLst[2],0.515942319243),(follJntLst[3],0.126783103566),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(130)+']',tv=[(follJntLst[0],0.0459719013321),(follJntLst[1],0.383155193581),(follJntLst[2],0.478286132084),(follJntLst[3],0.0925867730032),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(131)+']',tv=[(follJntLst[0],0.0459719013321),(follJntLst[1],0.383155193581),(follJntLst[2],0.478286132084),(follJntLst[3],0.0925867730032),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(132)+']',tv=[(follJntLst[0],0.0670284115299),(follJntLst[1],0.43659679082),(follJntLst[2],0.430746214136),(follJntLst[3],0.0656285835141),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(133)+']',tv=[(follJntLst[0],0.0670284115299),(follJntLst[1],0.43659679082),(follJntLst[2],0.430746214136),(follJntLst[3],0.0656285835141),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(134)+']',tv=[(follJntLst[0],0.0949421266467),(follJntLst[1],0.483193455966),(follJntLst[2],0.376727627326),(follJntLst[3],0.0451367900609),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(135)+']',tv=[(follJntLst[0],0.0949421266467),(follJntLst[1],0.483193455966),(follJntLst[2],0.376727627326),(follJntLst[3],0.0451367900609),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(136)+']',tv=[(follJntLst[0],0.13067330041),(follJntLst[1],0.519349523965),(follJntLst[2],0.319864165588),(follJntLst[3],0.0301130100371),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(137)+']',tv=[(follJntLst[0],0.13067330041),(follJntLst[1],0.519349523965),(follJntLst[2],0.319864165588),(follJntLst[3],0.0301130100371),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(138)+']',tv=[(follJntLst[0],0.17482791224),(follJntLst[1],0.542102207916),(follJntLst[2],0.263584915362),(follJntLst[3],0.0194849644818),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(139)+']',tv=[(follJntLst[0],0.17482791224),(follJntLst[1],0.542102207916),(follJntLst[2],0.263584915362),(follJntLst[3],0.0194849644818),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(140)+']',tv=[(follJntLst[0],0.227492034314),(follJntLst[1],0.549517024658),(follJntLst[2],0.210763443699),(follJntLst[3],0.0122274973287),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(141)+']',tv=[(follJntLst[0],0.227492034314),(follJntLst[1],0.549517024658),(follJntLst[2],0.210763443699),(follJntLst[3],0.0122274973287),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(142)+']',tv=[(follJntLst[0],0.290265680112),(follJntLst[1],0.545012610636),(follJntLst[2],0.164721709253),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(143)+']',tv=[(follJntLst[0],0.290265680112),(follJntLst[1],0.545012610636),(follJntLst[2],0.164721709253),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(144)+']',tv=[(follJntLst[0],0.356975315045),(follJntLst[1],0.51945927665),(follJntLst[2],0.123565408305),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(145)+']',tv=[(follJntLst[0],0.356975315045),(follJntLst[1],0.51945927665),(follJntLst[2],0.123565408305),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(146)+']',tv=[(follJntLst[0],0.428548586788),(follJntLst[1],0.481446516474),(follJntLst[2],0.0900048967381),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(147)+']',tv=[(follJntLst[0],0.428548586788),(follJntLst[1],0.481446516474),(follJntLst[2],0.0900048967381),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(148)+']',tv=[(follJntLst[0],0.502538729623),(follJntLst[1],0.433835024357),(follJntLst[2],0.0636262460199),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(149)+']',tv=[(follJntLst[0],0.502538729623),(follJntLst[1],0.433835024357),(follJntLst[2],0.0636262460199),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(150)+']',tv=[(follJntLst[0],0.576154216694),(follJntLst[1],0.380207082595),(follJntLst[2],0.0436387007106),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(151)+']',tv=[(follJntLst[0],0.576154216694),(follJntLst[1],0.380207082595),(follJntLst[2],0.0436387007106),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(152)+']',tv=[(follJntLst[0],0.646515308231),(follJntLst[1],0.324447740569),(follJntLst[2],0.0290369512004),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(153)+']',tv=[(follJntLst[0],0.646515308231),(follJntLst[1],0.324447740569),(follJntLst[2],0.0290369512004),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(154)+']',tv=[(follJntLst[0],0.710904329014),(follJntLst[1],0.270341778448),(follJntLst[2],0.0187538925375),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(155)+']',tv=[(follJntLst[0],0.710904329014),(follJntLst[1],0.270341778448),(follJntLst[2],0.0187538925375),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(156)+']',tv=[(follJntLst[0],0.7669640044),(follJntLst[1],0.221254448394),(follJntLst[2],0.0117815472057),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(157)+']',tv=[(follJntLst[0],0.7669640044),(follJntLst[1],0.221254448394),(follJntLst[2],0.0117815472057),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(158)+']',tv=[(follJntLst[0],0.818751813231),(follJntLst[1],0.181248186769),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(159)+']',tv=[(follJntLst[0],0.818751813231),(follJntLst[1],0.181248186769),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(160)+']',tv=[(follJntLst[0],0.850893098333),(follJntLst[1],0.149106901667),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(161)+']',tv=[(follJntLst[0],0.850893098333),(follJntLst[1],0.149106901667),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(162)+']',tv=[(follJntLst[0],0.871450396377),(follJntLst[1],0.128549603623),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n            cmds.skinPercent(str(skncls[0]),tmpsknCube[0]+'.vtx['+str(163)+']',tv=[(follJntLst[0],0.871450396377),(follJntLst[1],0.128549603623),(follJntLst[2],0.0),(follJntLst[3],0.0),(follJntLst[4],0.0)])\n    \n                \n            \n        settmpskn()    \n    \n    \n    \n    \n    \n\n\n\n\na=cmds.promptDialog(\n    \t\ttitle='FollicleCreate',\n    \t\tmessage='Name of the RigPart',\n    \t\tbutton=['Create', \"Close\"],\n    \t\tdefaultButton='Create',\n    \t\tcancelButton=\"Close\",\n    \t\t)\nif a == 'Create':\n    textw = cmds.promptDialog(query=True, text=True)\n    Gloablname = textw\n    CreateSurface()\n    \nelse:\n    print 'Process Cancled'\n\n    \n    \n\n\n\n\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Toggle local rotation axis visibility" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Local Rotation Axes" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "LRA" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconDisplay.png" 
        -image1 "menuIconDisplay.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "ToggleLocalRotationAxes" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "sel=cmds.ls(sl=True)\na = mel.eval(\"findRelatedSkinCluster(\"+'\"'+sel[0]+'\"'+\")\")\ninfJnts=cmds.skinCluster(a,q=True,wi=True)\ncmds.select(infJnts,r=True)" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Inf_Jnts" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Inf_Jnts" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "sel=cmds.ls(sl=True)\na = mel.eval(\"findRelatedSkinCluster(\"+'\"'+sel[0]+'\"'+\")\")\ninfJnts=cmds.skinCluster(a,q=True,wi=True)\ncmds.select(infJnts,r=True)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Copy skin weights" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Copy Skin Weights" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "copySkinWeight.png" 
        -image1 "copySkinWeight.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "CopySkinWeights" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "ngst" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "ngst" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "ngSkinToolsShelfIcon.png" 
        -image1 "ngSkinToolsShelfIcon.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "from ngSkinTools.ui.mainwindow import MainWindow\nMainWindow.open()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "\n\nglobal proc kk_controllers ()\n\n{\n\tif (`window -exists mc`)\n\tdeleteUI -window mc;\n\n// making GUI ................................................................................................................................................................................................\n\nstring $window = `window -title \"kk_Controllers\"  -rtf 1  -s 0 -w 1 -h 300  mc`;\n\tstring $mco = `columnLayout -adjustableColumn true `;\n\t\tframeLayout -label \" Color\" -borderStyle \"etchedIn\";\n\t\t\tcolumnLayout -adjustableColumn true -columnAttach \"left\" 10  -rowSpacing 10;\n\t\t\t\tcolorIndexSliderGrp -minValue 1 -maxValue 31 -value 16 -columnWidth 1 25 -columnWidth 2 140  -dc h_off  -cc h_on cis01 ;\n\nsetParent $mco;\n\n\tframeLayout -label \" Lock & Hide\" -borderStyle \"etchedIn\"   -h 220 ;\n\t\tstring $lh_c = `columnLayout -adjustableColumn 1  `;\n\t\tseparator -h 10 -style \"none\";\n\t\tbutton -c \"get\" -label \"Get from selected\";\n\t\tbutton -c \"lockhide\" -label \"Apply to selected\";\n\t\tseparator -h 5 -style \"none\";\n\t\tstring $mc = `rowLayout -nc 3 -columnWidth3 61 61 61 `;\n\n\t\tframeLayout -borderStyle \"etchedIn\" -h 110 -w 60 -label \"\";\n\t\t\tstring $mf = `formLayout`;\n\n\t\tcheckBox  -label \"T\" -onc \"ont\" -ofc \"oft\"    t;\n\t\tcheckBox  -label \"X\" -cc \"lockhide\" tx;\n\t\tcheckBox  -label \"Y\" -cc \"lockhide\" ty;\n\t\tcheckBox  -label \"Z\" -cc \"lockhide\" tz;\n\t\tpicture -image \"kk_icons/x.XPM\" px;\n              picture -image \"kk_icons/y.XPM\" py;\n              picture -image \"kk_icons/z.XPM\" pz;\n\n\tformLayout -e\n\t\t-attachForm t \"left\" 5\n\n\t\t-attachForm tx \"top\" 30\n\t\t-attachForm tx \"left\" 17\n\n\t\t-attachForm ty \"top\" 45\n\t\t-attachForm ty \"left\" 17\n\n\t\t-attachForm tz \"top\" 60\n\t\t-attachForm tz \"left\" 17\n\n\t\t-attachForm px \"top\" 32\n\t\t-attachForm px \"left\" 10\n\n\t\t-attachForm py \"top\" 47\n\t\t-attachForm py \"left\" 10\n\n\t\t-attachForm pz \"top\" 62\n\t\t-attachForm pz \"left\" 10\n\n\t\t$mf;\n\n\n\n\nsetParent $mc;\n\n\t\tframeLayout -borderStyle \"etchedIn\" -h 110 -w 60 -label \"\";\n\t\t\tstring $mf = `formLayout`;\n\n\t\tcheckBox  -onc \"onr\" -ofc \"ofr\" -label \" R \"  r;\n\t\tcheckBox  -label \"X\" -cc \"lockhide\" rx;\n\t\tcheckBox  -label \"Y\" -cc \"lockhide\" ry;\n\t\tcheckBox  -label \"Z\" -cc \"lockhide\" rz;\n\t\tpicture -image \"x.XPM\" px;\n        picture -image \"y.XPM\" py;\n        picture -image \"z.XPM\" pz;\n\tformLayout -e\n\t\t-attachForm r \"left\" 5\n\n\t\t-attachForm rx \"top\" 30\n\t\t-attachForm rx \"left\" 17\n\n\t\t-attachForm ry \"top\" 45\n\t\t-attachForm ry \"left\" 17\n\n\t\t-attachForm rz \"top\" 60\n\t\t-attachForm rz \"left\" 17\n\n\t\t-attachForm px \"top\" 32\n\t\t-attachForm px \"left\" 10\n\n\t\t-attachForm py \"top\" 47\n\t\t-attachForm py \"left\" 10\n\n\t\t-attachForm pz \"top\" 62\n\t\t-attachForm pz \"left\" 10\n\n\t\t$mf;\n\nsetParent $mc;\n\n\t\tframeLayout -borderStyle \"etchedIn\" -h 110 -w 60 -label \"\" ;\n\t\t\tstring $mf = `formLayout`;\n\n\t\tcheckBox  -onc \"ons\" -ofc \"ofs\" -label \" S \"  s;\n\t\tcheckBox  -label \"X\" -cc \"lockhide\" sx;\n\t\tcheckBox  -label \"Y\" -cc \"lockhide\" sy;\n\t\tcheckBox  -label \"Z\" -cc \"lockhide\" sz;\n\t\tpicture -image \"x.XPM\" px;\n        \tpicture -image \"y.XPM\" py;\n        \tpicture -image \"z.XPM\" pz;\n\tformLayout -e\n\t\t-attachForm s \"left\" 5\n\n\t\t-attachForm sx \"top\" 30\n\t\t-attachForm sx \"left\" 17\n\n\t\t-attachForm sy \"top\" 45\n\t\t-attachForm sy \"left\" 17\n\n\t\t-attachForm sz \"top\" 60\n\t\t-attachForm sz \"left\" 17\n\n\t\t-attachForm px \"top\" 32\n\t\t-attachForm px \"left\" 10\n\n\t\t-attachForm py \"top\" 47\n\t\t-attachForm py \"left\" 10\n\n\t\t-attachForm pz \"top\" 62\n\t\t-attachForm pz \"left\" 10\n\n\t\t$mf;\n\nsetParent $lh_c;\n\n\t\tseparator -style \"none\";\n\t\tcheckBox -label \"Visibility\" -align \"left\"  -cc \"lockhide\" v;\n\t\tseparator -style \"none\";\n\nsetParent $mco;\n\nframeLayout -label \" Mirror\" -borderStyle \"etchedIn\";\n\tcolumnLayout;\n\t\tseparator -style \"none\";\n\t\trowLayout -nc 4 -columnWidth4 60 40 40 40;\n\t\t\tcheckBox -label \"Copy\" cb01;\n\t\t\tbutton -label \"   X   \" -c mirrorX;\n\t\t\tbutton -label \"   Y   \" -c mirrorY;\n\t\t\tbutton -label \"   Z   \" -c mirrorZ;\n\tsetParent..;\n\t\tseparator -style \"none\";\n\nsetParent $mco;\n\n\n\n    frameLayout -h 350 -label \"Controllers\" -borderStyle \"etchedIn\";\n\n// WIP ------------------------------------------------------\n\tcolumnLayout;\n\t\t\tseparator -h 5 -style \"none\";\n\t\t    checkBox -v on -label \"Create Up Node\"  upNodeCB;\nsetParent..;\n// WIP ------------------------------------------------------\n\n\n\t\t    scrollLayout -cr 1   ;\n\t\t\tgridLayout -numberOfColumns 4 -cellWidthHeight 40 40 ;\n\n\n\n\n\n\t\t\t\tsymbolButton -image \"kk_icons/b01.XPM\"    -c b01   b01;\n\t\t\t\tsymbolButton -image \"kk_icons/b02.XPM\"    -c b02   b02;\n\t\t\t\tsymbolButton -image \"kk_icons/b03.XPM\"    -c b03   b03;\n\t\t\t\tsymbolButton -image \"kk_icons/b04.XPM\"    -c b04   b04;\n\t\t\t\tsymbolButton -image \"kk_icons/b05.XPM\"    -c b05   b05;\n\t\t\t\tsymbolButton -image \"kk_icons/b06.XPM\"    -c b06   b06;\n\t\t\t\tsymbolButton -image \"kk_icons/b07.XPM\"    -c b07   b07;\n\t\t\t\tsymbolButton -image \"kk_icons/b08.XPM\"    -c b08   b08;\n\t\t\t\tsymbolButton -image \"kk_icons/b09.XPM\"    -c b09   b09;\n\t\t\t\tsymbolButton -image \"kk_icons/b10.XPM\"    -c b10   b10;\n\t\t\t\tsymbolButton -image \"kk_icons/b11.XPM\"    -c b11   b11;\n\t\t\t\tsymbolButton -image \"kk_icons/b12.XPM\"    -c b12   b12;\n\t\t\t\tsymbolButton -image \"kk_icons/b13.XPM\"    -c b13   b13;\n\t\t\t\tsymbolButton -image \"kk_icons/b14.XPM\"    -c b14   b14;\n\t\t\t\tsymbolButton -image \"kk_icons/b15.XPM\"    -c b15   b15;\n\t\t\t\tsymbolButton -image \"kk_icons/b16.XPM\"    -c b16   b16;\n\t\t\t\tsymbolButton -image \"kk_icons/b17.XPM\"    -c b17   b17;\n\t\t\t\tsymbolButton -image \"kk_icons/b18.XPM\"    -c b18   b18;\n\t\t\t\tsymbolButton -image \"kk_icons/b19.XPM\"    -c b19   b19;\n\t\t\t\tsymbolButton -image \"kk_icons/b20.XPM\"    -c b20   b20;\n\t\t\t\tsymbolButton -image \"kk_icons/b21.XPM\"    -c b21   b21;\n\t\t\t\tsymbolButton -image \"kk_icons/b22.XPM\"    -c b22   b22;\n\t\t\t\tsymbolButton -image \"kk_icons/b23.XPM\"    -c b23   b23;\n\t\t\t\tsymbolButton -image \"kk_icons/b24.XPM\"    -c b24   b24;\n\t\t\t\tsymbolButton -image \"kk_icons/b25.XPM\"    -c b25   b25;\n\t\t\t\tsymbolButton -image \"kk_icons/b26.XPM\"    -c b26   b26;\n\t\t\t\tsymbolButton -image \"kk_icons/b27.XPM\"    -c b27   b27;\n\t\t\t\tsymbolButton -image \"kk_icons/b28.XPM\"    -c b28   b28;\n\nsetParent $mco;\n\n\n\n                \t\tcolumnLayout -adjustableColumn true  ;\n\t\t\t\t\tbutton -h 30   -label \"Slider Maker\" -c make ;\n\t\t\t\t\tbutton -h 30   -label \" Combine Shapes \"   -c combine;\n\t\t\t\t\tbutton -h 30   -label \"Freeze Transformations\"    -c freeze  ft;\n\t\t\t\t\ttextField -visible 0 text01;\n\n\n\n\nshowWindow mc;\n\n\n\t// end of GUI ..........................................................................................................................................................................................................\n\n\t// Procedure for \"making controllers\" ....................................................................................................................................................................\n\n\t//buttons ....................................................................................................................................\n\n}\n\n////////////////////////////////////////////////////////////////////////////////////\n\n//snap\n\nglobal proc snap() \t{\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\t\n\t\t\tstring $text = `textField -q -text text01`;\n\t\n\tif ($text == \"\")\n\t\t\t{\n\t\t\tsphere;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\tsphere;\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\t\n\t\t\t}\n\n// get\n\nglobal proc get ()\n{\n\nstring $sele [] = `ls -sl`;\nstring $gtx = `getAttr -lock $sele.tx`;\nstring $gty = `getAttr -lock $sele.ty`;\nstring $gtz = `getAttr -lock $sele.tz`;\n\nstring $grx = `getAttr -lock $sele.rx`;\nstring $gry = `getAttr -lock $sele.ry`;\nstring $grz = `getAttr -lock $sele.rz`;\n\nstring $gsx = `getAttr -lock $sele.sx`;\nstring $gsy = `getAttr -lock $sele.sy`;\nstring $gsz = `getAttr -lock $sele.sz`;\n\nstring $gv =  `getAttr -lock $sele.visibility`;\n\n\nif ($gtx == 1)\n{\ncheckBox -e -value 1 tx;\n}\nelse\n{\ncheckBox -e -value 0 tx;\n}\n\n\nif ($gty == 1)\n{\ncheckBox -e -value 1 ty;\n}\nelse\n{\ncheckBox -e -value 0 ty;\n}\n\n\nif ($gtz == 1)\n{\ncheckBox -e -value 1 tz;\n}\nelse\n{\ncheckBox -e -value 0 tz;\n}\n\nif ($grx == 1)\n{\ncheckBox -e -value 1 rx;\n}\nelse\n{\ncheckBox -e -value 0 rx;\n}\n\nif ($gry == 1)\n{\ncheckBox -e -value 1 ry;\n}\nelse\n{\ncheckBox -e -value 0 ry;\n}\n\nif ($grz == 1)\n{\ncheckBox -e -value 1 rz;\n}\nelse\n{\ncheckBox -e -value 0 rz;\n}\n\nif ($gsx == 1)\n{\ncheckBox -e -value 1 sx;\n}\nelse\n{\ncheckBox -e -value 0 sx;\n}\n\nif ($gsy == 1)\n{\ncheckBox -e -value 1 sy;\n}\nelse\n{\ncheckBox -e -value 0 sy;\n}\n\nif ($gsz == 1)\n{\ncheckBox -e -value 1 sz;\n}\nelse\n{\ncheckBox -e -value 0 sz;\n}\n\nif ($gv == 1)\n{\ncheckBox -e -value 1 v;\n}\nelse\n{\ncheckBox -e -value 0 v;\n}\nedit_t;\nedit_r;\nedit_s;\n}\n\n\n\n\n//t\nglobal proc ont ()\n\t{\n\tcheckBox -e -value 1 tx;\n       checkBox -e -value 1 ty;\n       checkBox -e -value 1 tz;\n\tlockhide;\n\t}\nglobal proc oft ()\n\t{\n\tcheckBox -e -value 0 tx;\n       checkBox -e -value 0 ty;\n       checkBox -e -value 0 tz;\n\tlockhide;\n        }\n///////////////////////////////////////////\n//r\nglobal proc onr ()\n\t{\n\tcheckBox -e -value 1 rx;\n       checkBox -e -value 1 ry;\n       checkBox -e -value 1 rz;\n\tlockhide;\n\t}\nglobal proc ofr ()\n\t{\n\tcheckBox -e -value 0 rx;\n       checkBox -e -value 0 ry;\n       checkBox -e -value 0 rz;\n\tlockhide;\n       }\n///////////////////////////////////////////\n//s\n\nglobal proc ons ()\n\t{\n\tcheckBox -e -value 1 sx;\n       checkBox -e -value 1 sy;\n       checkBox -e -value 1 sz;\n\tlockhide;\n\t}\nglobal proc ofs ()\n\t{\n\tcheckBox -e -value 0 sx;\n       checkBox -e -value 0 sy;\n       checkBox -e -value 0 sz;\n\tlockhide;\n       }\n\n\n/////////////////////////////////////////////\n\n// edit lockhide\n\n\nglobal proc edit_t()\n{\nint $tx = `checkBox -q -value tx`;\nint $ty = `checkBox -q -value ty`;\nint $tz = `checkBox -q -value tz`;\n\nif ($tx + $ty + $tz == 3)\n{\ncheckBox -e -value 1 t;\n}\nelse\n{\nif ($tx + $ty + $tz == 0)\n{\ncheckBox -e -value 0 t;\n}\n}\n}\n\n\nglobal proc edit_r()\n{\nint $rx = `checkBox -q -value rx`;\nint $ry = `checkBox -q -value ry`;\nint $rz = `checkBox -q -value rz`;\n\nif ($rx + $ry + $rz == 3)\n{\ncheckBox -e -value 1 r;\n}\nelse\n{\nif ($rx + $ry + $rz == 0)\n{\ncheckBox -e -value 0 r;\n}\n}\n}\n\n\nglobal proc edit_s()\n{\nint $sx = `checkBox -q -value sx`;\nint $sy = `checkBox -q -value sy`;\nint $sz = `checkBox -q -value sz`;\n\nif ($sx + $sy + $sz == 3)\n{\ncheckBox -e -value 1 s;\n}\nelse\n{\nif ($sx + $sy + $sz == 0)\n{\ncheckBox -e -value 0 s;\n}\n}\n}\n\n\n\tglobal proc shp01 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p -1 1 1 -p -1 1 -1 -p 1 1 -1 -p 1 1 1 -p -1 1 1 -p -1 -1 1 -p -1 -1 -1 -p -1 1 -1 -p -1 1 1 -p -1 -1 1 -p 1 -1 1 -p 1 1 1 -p 1 1 -1 -p 1 -1 -1 -p 1 -1 1 -p 1 -1 -1 -p -1 -1 -1 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\t\t\t}\n\n\tglobal proc b01 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp01;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp01;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\t\n\t\t\t\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\tglobal proc shp02 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p 2.57253 0 0 -p 3.235575 0 -0.738488 -p 2.552484 0 -0.738488 -p 2 0 -0.105773 -p -2.457426 0 -0.102784 -p -2 0 -1 -p -4 0 0 -p -2 0 1 -p -2.457426 0 0.0956313 -p 2 0 0.0956313 -p 2.552484 0 0.738488 -p 3.235575 0 0.738488 -p 2.57253 0 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 ;\n\n\n\t\t\n$UpNCB = `checkBox -q -v  upNodeCB`;\nif ($UpNCB == 1)\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\t\t\t\n\t\t\n\t\t\t}\n\tglobal proc b02 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp02;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp02;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\t\n\t\t\t\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\tglobal proc shp03 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p -2.12132 0 2.12132 -p -2.427589 0 1.760219 -p -2.671383 0 1.358164 -p -2.852888 0 0.917653 -p -2.959949 0 0.479631-p -2.999992 0 0.00653153 -p -2.964176 0 -0.453565 -p -2.839141 0 -0.959046-p -2.671717 0 -1.357504 -p -2.4336 0 -1.751819 -p -2.130993 0 -2.111601-p -1.792857 0 -2.403811 -p -1.387964 0 -2.656114 -p -0.942438 0 -2.844735 -p -0.465425 0 -2.962282 -p 0.00840032 0 -2.999988 -p 0.454939 0 -2.963959 -p 0.941699 0 -2.844981 -p 1.349441 0 -2.675776 -p 1.757329 0 -2.429662 -p 2.128882 0 -2.11373 -p 2.411311 0 -1.782662 -p 2.661389 0 -1.377759 -p 2.847929 0 -0.932812 -p 2.960853 0 -0.474177 -p 2.999999 0 0.00169319 -p 2.964737 0 0.449986 -p 2.852196 0 0.919787 -p 2.675184 0 1.35062 -p 2.431628 0 1.754581 -p 2.124565 0 2.11807 -p 1.773918 0 2.417691 -p 1.372686 0 2.663993 -p 0.923801 0 2.850887 -p 0.409006 0 2.970854 -p 0 0 3 -p 0.620223 0.592945 3 -p -1 0 3 -p 0.620223 -0.592945 3 -p 0 0 3 -p 0.620223 0 2.407055 -p -1 0 3 -p 0.620223 0 3.592945 -p 0 0 3 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\t\t\t}\n\tglobal proc b03 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp03;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp03;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\t\n\t\t\t\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\n\tglobal proc shp04 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p -3.686735 0 1.930981 -p -3.925376 0.23864 0.305307 -p -3.448095 0.23864 0.305307 -p -3.686735 0 1.930981 -p -3.448095 0.23864 0.305307 -p -3.448095 -0.23864 0.305307 -p -3.686735 0 1.930981 -p -3.448095 -0.23864 0.305307 -p -3.925376 -0.23864 0.305307 -p -3.686735 0 1.930981 -p -3.925376 0.23864 0.305307 -p -3.925376 -0.23864 0.305307 -p -3.686735 0 1.930981 -p -3.686735 0 0 -p -3.594301 0 -0.820376 -p -3.321634 0 -1.599615 -p -2.882406 0 -2.298642 -p -2.298642 0 -2.882406 -p -1.599615 0 -3.321634 -p -0.820376 0 -3.594301 -p 0 0 -3.686735 -p 1.930981 0 -3.686735 -p 0.305307 0.23864 -3.448095 -p 0.305307 0.23864 -3.925376 -p 1.930981 0 -3.686735 -p 0.305307 0.23864 -3.925376 -p 0.305307 -0.23864 -3.925376 -p 1.930981 0 -3.686735 -p 0.305307 -0.23864 -3.448095 -p 0.305307 -0.23864 -3.925376 -p 0.305307 -0.23864 -3.448095 -p 0.305307 0.23864 -3.448095 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\t\t\t}\n\tglobal proc b04 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp04;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp04;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\t\n\tglobal proc shp05 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p -5.38171 -0.5 -0.5 -p -5.38171 -0.5 0.5 -p -5.38171 0.5 0.5 -p -5.38171 0.5 -0.5 -p -5.38171 -0.5 -0.5 -p -7.007384 0 0 -p -5.38171 -0.5 0.5 -p -5.38171 0.5 0.5 -p -7.007384 0 0 -p -5.38171 0.5 -0.5 -p -7.007384 0 0 -p 0 0 0 -p 7.007384 0 0 -p 5.38171 0.5 0.5 -p 5.38171 0.5 -0.5 -p 7.007384 0 0 -p 5.38171 0.5 -0.5 -p 5.38171 -0.5 -0.5 -p 7.007384 0 0 -p 5.38171 -0.5 -0.5 -p 5.38171 -0.5 0.5 -p 7.007384 0 0 -p 5.38171 -0.5 0.5 -p 5.38171 0.5 0.5 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\t\t\t}\n\tglobal proc b05 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp05;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp05;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\n\tglobal proc shp06 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p 0 0 2 -p 0 0 1.001092 -p 0 0.383101 0.924889 -p 0 0.707879 0.707879 -p 0 0.924889 0.383101 -p 0 1.001092 0 -p 0 2 0 -p 0 1.001092 0 -p 0 0.924889 -0.383101 -p 0 0.707879 -0.707879 -p 0 0.383101 -0.924889 -p 0 0 -1.001092 -p 0 0 -2 -p 0 0 -1.001092 -p 0 -0.383101 -0.924889 -p 0 -0.707879 -0.707879 -p 0 -0.924889 -0.383101 -p 0 -1.001092 0 -p 0 -2 0 -p 0 -1.001092 0 -p 0 -0.924889 0.383101 -p 0 -0.707879 0.707879 -p 0 -0.383101 0.924889 -p 0 0 1.001092 -p -0.383101 0 0.924889 -p -0.707879 0 0.707879 -p -0.924889 0 0.383101 -p -1.001092 0 0 -p -2 0 0 -p -1.001092 0 0 -p -0.924889 0 -0.383101 -p -0.707879 0 -0.707879 -p -0.383101 0 -0.924889 -p 0 0 -1.001092 -p 0.383101 0 -0.924889 -p 0.707879 0 -0.707879 -p 0.924889 0 -0.383101 -p 1.001092 0 0 -p 2 0 0 -p 1.001092 0 0 -p 0.924889 0.383101 0 -p 0.707879 0.707879 0 -p 0.383101 0.924889 0 -p 0 1.001092 0 -p -0.383101 0.924889 0 -p -0.707879 0.707879 0 -p -0.924889 0.383101 0 -p -1.001092 0 0 -p -0.924889 -0.383101 0 -p -0.707879 -0.707879 0 -p -0.383101 -0.924889 0 -p 0 -1.001092 0 -p 0.383101 -0.924889 0 -p 0.707879 -0.707879 0 -p 0.924889 -0.383101 0 -p 1.001092 0 0 -p 0.924889 0 0.383101 -p 0.707879 0 0.707879 -p 0.383101 0 0.924889 -p 0 0 1.001092 -p 0 0 0 -p 0 0 -1.001092 -p 0 0 0 -p 1.001092 0 0 -p 0 0 0 -p -1.001092 0 0 -p 0 0 0 -p 0 -1.001092 0 -p 0 0 0 -p 0 1.001092 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 48 -k 49 -k 50 -k 51 -k 52 -k 53 -k 54 -k 55 -k 56 -k 57 -k 58 -k 59 -k 60 -k 61 -k 62 -k 63 -k 64 -k 65 -k 66 -k 67 -k 68 -k 69 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\t\t\t}\n\tglobal proc b06 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp06;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp06;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp07 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p -2 0 0 -p 1 0 1 -p 1 0 -1 -p -2 0 0 -p 1 1 0 -p 1 0 0 -p 1 -1 0 -p -2 0 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b07 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp07;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp07;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp08 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p 0.934487 1.275837 2.01658e-008 -p 0.932697 1.247176 -0.35686 -p 0.920752 1.172835 -0.686003 -p 0.891476 1.068829 -0.978435 -p 0.840076 0.946678 -1.231929 -p 0.763591 0.814991 -1.445766 -p 0.661715 0.681111 -1.621424 -p 0.537155 0.551427 -1.765671 -p 0.387617 0.433133 -1.880322 -p 0.209586 0.33878 -1.961541 -p 0 0.297363 -1.993747 -p -0.209586 0.33878 -1.961541 -p -0.387617 0.433133 -1.880322 -p -0.537155 0.551427 -1.765671 -p -0.661715 0.681111 -1.621424 -p -0.763591 0.814991 -1.445766 -p -0.840076 0.946678 -1.231929 -p -0.891476 1.068829 -0.978435 -p -0.920752 1.172835 -0.686003 -p -0.932697 1.247176 -0.35686 -p -0.934487 1.275837 2.01658e-008 -p -0.917572 1.470617 0 -p -0.856971 1.657129 0 -p -0.758916 1.826965 0 -p -0.627692 1.972704 0 -p -0.469036 2.087974 0 -p -0.28988 2.167739 0 -p -0.0980551 2.208513 0 -p 0.0980551 2.208513 0 -p 0.28988 2.167739 0 -p 0.469036 2.087974 0 -p 0.627692 1.972704 0 -p 0.758916 1.826965 0 -p 0.856971 1.657129 0 -p 0.917572 1.470617 0 -p 0.934487 1.275837 2.01658e-008 -p 0.932697 1.247176 0.35686 -p 0.920752 1.172834 0.686003 -p 0.891476 1.06883 0.978435 -p 0.840076 0.946678 1.23193 -p 0.763591 0.814992 1.445765 -p 0.661715 0.68111 1.621426 -p 0.537155 0.55143 1.765669 -p 0.387617 0.433127 1.880326 -p 0.209586 0.338788 1.961536 -p 0 0.297318 1.993775 -p -0.209586 0.338788 1.961536 -p -0.387617 0.433127 1.880326 -p -0.537155 0.55143 1.765669 -p -0.661715 0.68111 1.621426 -p -0.763591 0.814992 1.445765 -p -0.840076 0.946678 1.23193 -p -0.891476 1.06883 0.978435 -p -0.920752 1.172834 0.686003 -p -0.932697 1.247176 0.35686 -p -0.934487 1.275837 2.01658e-008 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 48 -k 49 -k 50 -k 51 -k 52 -k 53 -k 54 -k 55 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b08 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp08;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp08;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp09 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p -5 0 0 -p -3 0 -2 -p -3 0 -1 -p 3 0 -1 -p 3 0 -2 -p 5 0 0 -p 3 0 2 -p 3 0 1 -p -3 0 1 -p -3 0 2 -p -5 0 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b09 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp09;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp09;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp10 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p -1.34734 1.079737 0 -p -1.44224 1.524319 0 -p -1.664328 2.405765 0 -p -1.950005 3.338975 0 -p -2.026185 3.76749 0 -p -2.00714 4.157914 0 -p -1.911915 4.481681 0 -p -1.711941 4.719745 0 -p -1.454742 4.823697 0 -p -1.178678 4.748313 0 -p -0.978704 4.605474 0 -p -0.762282 4.305811 0 -p -0.625918 3.874188 0 -p -0.582821 3.418809 0 -p -0.537404 2.504382 0 -p -0.497941 2.074195 0 -p -0.435919 1.853457 0 -p -0.27968 1.671979 0 -p -0.112152 1.748709 0 -p 0.0181145 1.93818 0 -p 0.0631399 2.393048 0 -p 0.0309841 3.299414 0 -p 0.00884164 4.206964 0 -p 0.118751 4.647229 0 -p 0.259227 4.910196 0 -p 0.516336 5.11017 0 -p 0.783868 5.183232 0 -p 0.982941 5.11017 0 -p 1.161548 4.946641 0 -p 1.268618 4.757835 0 -p 1.339346 4.534125 0 -p 1.366566 4.080178 0 -p 1.18691 3.188703 0 -p 0.962236 2.303209 0 -p 0.871335 1.872813 0 -p 0.887716 1.643961 0 -p 0.972904 1.454826 0 -p 1.173392 1.520168 0 -p 1.333545 1.689809 0 -p 1.703036 2.510079 0 -p 1.804024 2.951195 0 -p 1.993722 3.363069 0 -p 2.163738 3.596084 0 -p 2.439892 3.719877 0 -p 2.746698 3.70583 0 -p 2.887452 3.538949 0 -p 2.961806 3.310347 0 -p 2.923079 2.868041 0 -p 2.734645 2.450959 0 -p 2.319855 1.644199 0 -p 2.098659 0.763906 0 -p 1.924326 -0.588646 0 -p 1.675939 -1.460628 0 -p 1.433159 -1.843999 0 -p 1.10277 -2.155313 0 -p 0.711811 -2.38603 0 -p 0.281957 -2.532393 0 -p -0.168824 -2.585124 0 -p -0.618393 -2.524033 0 -p -1.03629 -2.347311 0 -p -1.40311 -2.079606 0 -p -1.992964 -1.390367 0 -p -2.408387 -0.583148 0 -p -2.561783 -0.156678 0 -p -2.789956 0.234865 0 -p -3.166494 0.485898 0 -p -3.566608 0.701746 0 -p -3.872971 1.032209 0 -p -3.987831 1.272581 0 -p -4.025921 1.539213 0 -p -3.968786 1.748709 0 -p -3.806902 1.958205 0 -p -3.521226 2.043908 0 -p -3.273639 2.034385 0 -p -3.023745 1.975496 0 -p -2.644437 1.72963 0 -p -2.324835 1.399893 0 -p -2.049032 1.049876 0 -p -1.873824 0.844066 0 -p -1.689234 0.796519 0 -p -1.473877 0.901202 0 -p -1.34734 1.079737 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 48 -k 49 -k 50 -k 51 -k 52 -k 53 -k 54 -k 55 -k 56 -k 57 -k 58 -k 59 -k 60 -k 61 -k 62 -k 63 -k 64 -k 65 -k 66 -k 67 -k 68 -k 69 -k 70 -k 71 -k 72 -k 73 -k 74 -k 75 -k 76 -k 77 -k 78 -k 79 -k 80 -k 81 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b10 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp10;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp10;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp11 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p 0.365446 0 -1.737246 -p 0 0 -1.979341 -p -0.365446 0 -1.737246 -p 0 0 -3.272918 -p 0.365446 0 -1.737246 -p 0 0 -1.979341 -p 0 0.365446 -1.737246 -p 0 0 -3.272918 -p 0 -0.365446 -1.737246 -p 0 0 -1.979341 -p 0 0 0 -p 0 0 1.979341 -p -0.365446 0 1.737246 -p 0 0 3.272918 -p 0.365446 0 1.737246 -p 0 0 1.979341 -p 0 -0.365446 1.737246 -p 0 0 3.272918 -p 0 0.365446 1.737246 -p 0 0 1.979341 -p 0 0 0 -p 1.979341 0 0 -p 1.737246 0 0.365446 -p 3.272918 0 0 -p 1.737246 0 -0.365446 -p 1.979341 0 0 -p 1.737246 0.365446 0 -p 3.272918 0 0 -p 1.737246 -0.365446 0 -p 1.979341 0 0 -p 0 0 0 -p -1.979341 0 0 -p -1.737246 0 0.365446 -p -3.272918 0 0 -p -1.737246 0 -0.365446 -p -1.979341 0 0 -p -1.737246 0.365446 0 -p -3.272918 0 0 -p -1.737246 -0.365446 0 -p -1.979341 0 0 -p 0 0 0 -p 0 1.979341 0 -p -0.365446 1.737246 0 -p 0 3.272918 0 -p 0.365446 1.737246 0 -p 0 1.979341 0 -p 0 1.737246 0.365446 -p 0 3.272918 0 -p 0 1.737246 -0.365446 -p 0 1.979341 0 -p 0 0 0 -p 0 -1.979341 0 -p -0.365446 -1.737246 0 -p 0 -3.272918 0 -p 0.365446 -1.737246 0 -p 0 -1.979341 0 -p 0 -1.737246 -0.365446 -p 0 -3.272918 0 -p 0 -1.737246 0.365446 -p 0 -1.979341 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 48 -k 49 -k 50 -k 51 -k 52 -k 53 -k 54 -k 55 -k 56 -k 57 -k 58 -k 59 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\t\t\t}\n\tglobal proc b11 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp11;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp11;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp12 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p 0 1 0 -p 0 0.92388 0.382683 -p 0 0.707107 0.707107 -p 0 0.382683 0.92388 -p 0 0 1 -p 0 -0.382683 0.92388 -p 0 -0.707107 0.707107 -p 0 -0.92388 0.382683 -p 0 -1 0 -p 0 -0.92388 -0.382683 -p 0 -0.707107 -0.707107 -p 0 -0.382683 -0.92388 -p 0 0 -1 -p 0 0.382683 -0.92388 -p 0 0.707107 -0.707107 -p 0 0.92388 -0.382683 -p 0 1 0 -p 0.382683 0.92388 0 -p 0.707107 0.707107 0 -p 0.92388 0.382683 0 -p 1 0 0 -p 0.92388 -0.382683 0 -p 0.707107 -0.707107 0 -p 0.382683 -0.92388 0 -p 0 -1 0 -p -0.382683 -0.92388 0 -p -0.707107 -0.707107 0 -p -0.92388 -0.382683 0 -p -1 0 0 -p -0.92388 0.382683 0 -p -0.707107 0.707107 0 -p -0.382683 0.92388 0 -p 0 1 0 -p 0 0.92388 -0.382683 -p 0 0.707107 -0.707107 -p 0 0.382683 -0.92388 -p 0 0 -1 -p -0.382683 0 -0.92388 -p -0.707107 0 -0.707107 -p -0.92388 0 -0.382683 -p -1 0 0 -p -0.92388 0 0.382683 -p -0.707107 0 0.707107 -p -0.382683 0 0.92388 -p 0 0 1 -p 0.382683 0 0.92388 -p 0.707107 0 0.707107 -p 0.92388 0 0.382683 -p 1 0 0 -p 0.92388 0 -0.382683 -p 0.707107 0 -0.707107 -p 0.382683 0 -0.92388 -p 0 0 -1 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 48 -k 49 -k 50 -k 51 -k 52 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\t\t\t}\n\tglobal proc b12 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp12;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp12;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp13 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p -5 0 0 -p -3 0 -2 -p -3 0 -1 -p -1 0 -1 -p -1 0 -3 -p -2 0 -3 -p 0 0 -5 -p 2 0 -3 -p 1 0 -3 -p 1 0 -1 -p 3 0 -1 -p 3 0 -2 -p 5 0 0 -p 3 0 2 -p 3 0 1 -p 1 0 1 -p 1 0 3 -p 2 0 3 -p 0 0 5 -p -2 0 3 -p -1 0 3 -p -1 0 1 -p -3 0 1 -p -3 0 2 -p -5 0 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b13 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp13;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp13;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp14 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p -6.283766 0 9.1204e-010 -p -6.203579 0 -0.982165 -p -5.969952 0 -1.939507 -p -5.592832 0 -2.849955 -p -5.081088 0 -3.692098 -p -4.443293 0 -4.443293 -p -3.692098 0 -5.081088 -p -2.849955 0 -5.592832 -p -1.939507 0 -5.969952 -p -0.982165 0 -6.20358 -p 0 0 -6.283764 -p 0 0.982162 -6.20358 -p 0 1.939508 -5.969952 -p 0 2.849954 -5.592832 -p 0 3.692098 -5.081088 -p 0 4.443293 -4.443293 -p 0 5.081089 -3.692098 -p 0 5.592832 -2.849955 -p 0 5.969952 -1.939507 -p 0 6.203579 -0.982165 -p 0 6.283766 0 -p 0 6.203579 0.982165 -p 0 5.969952 1.939507 -p 0 5.592832 2.849955 -p 0 5.081089 3.692098 -p 0 4.443293 4.443293 -p 0 3.692098 5.081088 -p 0 2.849954 5.592832 -p 0 1.939508 5.969952 -p 0 0.982162 6.20358 -p 0 0 6.283766 -p -0.982165 0 6.203579 -p -1.939507 0 5.969952 -p -2.849955 0 5.592832 -p -3.692098 0 5.081088 -p -4.443293 0 4.443293 -p -5.081088 0 3.692098 -p -5.592832 0 2.849955 -p -5.969952 0 1.939507 -p -6.203579 0 0.982165 -p -6.283766 0 9.1204e-010 -p -6.20358 0.982162 0 -p -5.969952 1.939508 0 -p -5.592832 2.849954 0 -p -5.081088 3.692098 0 -p -4.443293 4.443293 0 -p -3.692098 5.081089 0 -p -2.849955 5.592832 0 -p -1.939507 5.969952 0 -p -0.982165 6.203579 0 -p 0 6.283766 0 -p 0.982165 6.203579 0 -p 1.939507 5.969952 0 -p 2.849955 5.592832 0 -p 3.692098 5.081089 0 -p 4.443293 4.443293 0 -p 5.081088 3.692098 0 -p 5.592832 2.849954 0 -p 5.969952 1.939508 0 -p 6.20358 0.982162 0 -p 6.283766 0 9.12045e-010 -p 6.203579 0 0.982165 -p 5.969952 0 1.939507 -p 5.592832 0 2.849955 -p 5.081088 0 3.692098 -p 4.443293 0 4.443293 -p 3.692098 0 5.081088 -p 2.849955 0 5.592832 -p 1.939507 0 5.969952 -p 0.982165 0 6.203579 -p 0 0 6.283766 -p 0.982165 0 6.203579 -p 1.939507 0 5.969952 -p 2.849955 0 5.592832 -p 3.692098 0 5.081088 -p 4.443293 0 4.443293 -p 5.081088 0 3.692098 -p 5.592832 0 2.849955 -p 5.969952 0 1.939507 -p 6.203579 0 0.982165 -p 6.283766 0 9.12045e-010 -p 6.203579 0 -0.982165 -p 5.969952 0 -1.939507 -p 5.592832 0 -2.849955 -p 5.081088 0 -3.692098 -p 4.443293 0 -4.443293 -p 3.692098 0 -5.081088 -p 2.849955 0 -5.592832 -p 1.939507 0 -5.969952 -p 0.982165 0 -6.20358 -p 0 0 -6.283764 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 48 -k 49 -k 50 -k 51 -k 52 -k 53 -k 54 -k 55 -k 56 -k 57 -k 58 -k 59 -k 60 -k 61 -k 62 -k 63 -k 64 -k 65 -k 66 -k 67 -k 68 -k 69 -k 70 -k 71 -k 72 -k 73 -k 74 -k 75 -k 76 -k 77 -k 78 -k 79 -k 80 -k 81 -k 82 -k 83 -k 84 -k 85 -k 86 -k 87 -k 88 -k 89 -k 90 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b14 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp14;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp14;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\n\tglobal proc shp15 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p 0 1.195249 0.555115 -p 0 1.180393 0.832049 -p 0 1.133567 1.105407 -p 0 1.048732 1.369346 -p 0 0.917923 1.613767 -p 0 0.738447 1.825003 -p 0 0.520555 1.996316 -p 0 0.271934 2.118642 -p -1.67422e-006 0 2.182925 -p -0.13416 0 2.16342 -p -0.266779 0 2.095529 -p -0.395472 0 1.99807 -p -0.518993 0 1.858632 -p -0.636496 0 1.679268 -p -0.737632 0 1.452024 -p -0.819474 0 1.166445 -p -0.846144 0 0.821387 -p -0.824602 0 0.556128 -p -0.749206 0 0.167213 -p -0.673656 0 -0.127237 -p -0.597808 0 -0.419587 -p -0.545054 0 -0.746104 -p -0.544891 0 -1.097217 -p -0.571904 0 -1.448294 -p -0.512279 0 -1.753435 -p -0.393271 0 -1.92306 -p -0.266839 0 -2.035747 -p -0.133965 0 -2.097731 -p 0 0 -2.120128 -p 0.133965 0 -2.097731 -p 0.266839 0 -2.035747 -p 0.393271 0 -1.92306 -p 0.512279 0 -1.753435 -p 0.571904 0 -1.448294 -p 0.544891 0 -1.097217 -p 0.545054 0 -0.746104 -p 0.597807 0 -0.419586 -p 0.673656 0 -0.127237 -p 0.749207 0 0.167214 -p 0.824602 0 0.556128 -p 0.793719 0.309015 0.555115 -p 0.711605 0.597122 0.555115 -p 0.58157 0.845165 0.555115 -p 0.410881 1.034146 0.555115 -p 0.212644 1.153473 0.555115 -p 0 1.195249 0.555115 -p -0.212644 1.153473 0.555115 -p -0.410881 1.034146 0.555115 -p -0.58157 0.845165 0.555115 -p -0.711605 0.597122 0.555115 -p -0.793719 0.309015 0.555115 -p -0.822457 0 0.555115 -p -0.846144 0 0.821387 -p -0.819474 0 1.166445 -p -0.737632 0 1.452024 -p -0.636496 0 1.679268 -p -0.518993 0 1.858632 -p -0.395472 0 1.99807 -p -0.266779 0 2.095529 -p -0.13416 0 2.16342 -p -1.67422e-006 0 2.182925 -p 0.134293 0 2.163449 -p 0.266596 0 2.09545 -p 0.395504 0 1.9981 -p 0.519008 0 1.858641 -p 0.636486 0 1.679267 -p 0.737631 0 1.452029 -p 0.819474 0 1.166447 -p 0.846144 0 0.82139 -p 0.824602 0 0.556128 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 48 -k 49 -k 50 -k 51 -k 52 -k 53 -k 54 -k 55 -k 56 -k 57 -k 58 -k 59 -k 60 -k 61 -k 62 -k 63 -k 64 -k 65 -k 66 -k 67 -k 68 -k 69 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b15 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp15;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp15;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp16 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p -2.513058 -0.000789387 0 -p -2.465186 0.0739742 0 -p -2.152997 0.192227 0 -p -1.82693 0.391554 0 -p -1.507944 0.627928 0 -p -1.184955 0.849308 0 -p -0.832559 1.021739 0 -p -0.449719 1.138051 0 -p 0 1.191496 0 -p 0.247442 1.154017 0 -p 0.47812 1.058465 0 -p 0.676741 0.90715 0 -p 0.828056 0.70853 0 -p 0.923606 0.477852 0 -p 0.957056 0.230409 0 -p 0.923606 -0.0170326 0 -p 0.828056 -0.247711 0 -p 0.676741 -0.446331 0 -p 0.47812 -0.597647 0 -p 0.247442 -0.693197 0 -p 0 -0.726646 0 -p -0.247442 -0.693197 0 -p -0.47812 -0.597647 0 -p -0.676741 -0.446331 0 -p -0.828056 -0.247711 0 -p -0.923606 -0.0170326 0 -p -0.957056 0.230409 0 -p -0.923606 0.477852 0 -p -0.828056 0.70853 0 -p -0.676741 0.90715 0 -p -0.47812 1.058465 0 -p -0.247442 1.154017 0 -p 0 1.191496 0 -p 0.452245 1.134262 0 -p 0.845189 1.004057 0 -p 1.195059 0.840467 0 -p 1.491525 0.656977 0 -p 1.77641 0.45723 0 -p 2.093635 0.264219 0 -p 2.452556 0.0891304 0 -p 2.511637 0.000631505 0 -p 2.458871 -0.0840784 0 -p 2.123947 -0.242747 0 -p 1.802933 -0.447126 0 -p 1.496577 -0.655714 0 -p 1.195059 -0.840467 0 -p 0.845189 -1.004057 0 -p 0.452245 -1.134263 0 -p 0 -1.191489 0 -p -0.452245 -1.134263 0 -p -0.845189 -1.004057 0 -p -1.200111 -0.834152 0 -p -1.520575 -0.622876 0 -p -1.821878 -0.40671 0 -p -2.122684 -0.220013 0 -p -2.457608 -0.0802893 0 -p -2.513058 -0.000789387 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 48 -k 49 -k 50 -k 51 -k 52 -k 53 -k 54 -k 55 -k 56 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b16 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp16;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp16;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp17 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p 0 8.70951 -8.113749 -p 1.637134 8.441733 -6.501093 -p 3.274268 7.878044 -4.966615 -p 4.911403 7.038203 -3.564106 -p 3.274268 7.038203 -3.564106 -p 1.637134 7.038203 -3.564106 -p 1.637134 5.951649 -2.342727 -p 1.637134 4.65647 -1.345292 -p 1.637134 3.198066 -0.606765 -p 1.627559 1.637134 -0.153032 -p 3.198066 1.637134 -0.606765 -p 4.65647 1.637134 -1.345292 -p 5.951649 1.637134 -2.342727 -p 7.038203 1.637134 -3.564106 -p 7.038203 3.274268 -3.564106 -p 7.038203 4.911403 -3.564106 -p 7.878044 3.274268 -4.966615 -p 8.441733 1.637134 -6.501093 -p 8.70951 0 -8.113749 -p 8.441733 -1.637134 -6.501093 -p 7.878044 -3.274268 -4.966615 -p 7.038203 -4.911403 -3.564106 -p 7.038203 -3.274268 -3.564106 -p 7.038203 -1.637134 -3.564106 -p 5.951649 -1.637134 -2.342727 -p 4.65647 -1.637134 -1.345292 -p 3.198066 -1.637134 -0.606765 -p 1.627559 -1.637134 -0.153032 -p 1.637134 -3.198066 -0.606765 -p 1.637134 -4.65647 -1.345292 -p 1.637134 -5.951649 -2.342727 -p 1.637134 -7.038203 -3.564106 -p 3.274268 -7.038203 -3.564106 -p 4.911403 -7.038203 -3.564106 -p 3.274268 -7.878044 -4.966615 -p 1.637134 -8.441733 -6.501093 -p 0 -8.70951 -8.113749 -p -1.637134 -8.441733 -6.501093 -p -3.274268 -7.878044 -4.966615 -p -4.911403 -7.038203 -3.564106 -p -3.274268 -7.038203 -3.564106 -p -1.637134 -7.038203 -3.564106 -p -1.637134 -5.951649 -2.342727 -p -1.637134 -4.65647 -1.345292 -p -1.637134 -3.198066 -0.606765 -p -1.627559 -1.637134 -0.153032 -p -3.198066 -1.637134 -0.606765 -p -4.65647 -1.637134 -1.345292 -p -5.951649 -1.637134 -2.342727 -p -7.038203 -1.637134 -3.564106 -p -7.038203 -3.274268 -3.564106 -p -7.038203 -4.911403 -3.564106 -p -7.878044 -3.274268 -4.966615 -p -8.441733 -1.637134 -6.501093 -p -8.70951 0 -8.113749 -p -8.441733 1.637134 -6.501093 -p -7.878044 3.274268 -4.966615 -p -7.038203 4.911403 -3.564106 -p -7.038203 3.274268 -3.564106 -p -7.038203 1.637134 -3.564106 -p -5.951649 1.637134 -2.342727 -p -4.65647 1.637134 -1.345292 -p -3.198066 1.637134 -0.606765 -p -1.637134 1.627559 -0.153032 -p -1.637134 3.198066 -0.606765 -p -1.637134 4.65647 -1.345292 -p -1.637134 5.951649 -2.342727 -p -1.637134 7.038203 -3.564106 -p -3.274268 7.038203 -3.564106 -p -4.911403 7.038203 -3.564106 -p -3.274268 7.878044 -4.966615 -p -1.637134 8.441733 -6.501093 -p 0 8.70951 -8.113749 -k 0 -k 2.313563 -k 4.627126 -k 6.940689 -k 8.577823 -k 10.214958 -k 11.849695 -k 13.484432 -k 15.119169 -k 16.744737 -k 18.379474 -k 20.014211 -k 21.648949 -k 23.283686 -k 24.92082 -k 26.557954 -k 28.871517 -k 31.18508 -k 33.498643 -k 35.812206 -k 38.12577 -k 40.439333 -k 42.076467 -k 43.713601 -k 45.348338 -k 46.983075 -k 48.617812 -k 50.25255 -k 51.878118 -k 53.512855 -k 55.147592 -k 56.782329 -k 58.419463 -k 60.056598 -k 62.370161 -k 64.683724 -k 66.997287 -k 69.31085 -k 71.624413 -k 73.937976 -k 75.57511 -k 77.212244 -k 78.846982 -k 80.481719 -k 82.116456 -k 83.742024 -k 85.376761 -k 87.011498 -k 88.646235 -k 90.280972 -k 91.918107 -k 93.555241 -k 95.868804 -k 98.182367 -k 100.49593 -k 102.809493 -k 105.123056 -k 107.436619 -k 109.073754 -k 110.710888 -k 112.345625 -k 113.980362 -k 115.615099 -k 117.240667 -k 118.875404 -k 120.510142 -k 122.144879 -k 123.779616 -k 125.41675 -k 127.053884 -k 129.367447 -k 131.68101 -k 133.994574 ;\n\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b17 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp17;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp17;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp18 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p 0 0 0 -p -9.99923 0 -2.2236e-005 -p -9.22886 0 3.822731 -p -7.070523 0 7.070516 -p -3.822719 0 9.228864 -p 0 0 9.999226 -p 0 0 0 -p 0 0 9.999226 -p 3.822719 0 9.228864 -p 7.070523 0 7.070516 -p 9.22886 0 3.822731 -p 9.99923 0 -2.2236e-005 -p 0 0 0 -p 9.99923 0 -2.2236e-005 -p 9.22886 0 -3.822678 -p 7.070523 0 -7.070596 -p 3.822719 0 -9.228749 -p 0 0 -10 -p 0 0 0 -p 0 0 -10 -p -3.822719 0 -9.228749 -p -7.070523 0 -7.070596 -p -9.22886 0 -3.822678 -p -9.99923 0 -2.2236e-005 -p 0 0 0 -p 0 20 0 -p 0 20 4 -p 0 28 0 -p 0 20 -4 -p 0 20 0 -p 4 20 0 -p 0 28 0 -p -4 20 0 -p 0 20 4 -p 4 20 0 -p 0 20 -4 -p -4 20 0 -p 0 20 0 -k 0 -k 9.99923 -k 13.898834 -k 17.798388 -k 21.697965 -k 25.597534 -k 35.59676 -k 45.595986 -k 49.495555 -k 53.395131 -k 57.294686 -k 61.19429 -k 71.19352 -k 81.192749 -k 85.092258 -k 88.991923 -k 92.891392 -k 96.791136 -k 106.791136 -k 116.791136 -k 120.690881 -k 124.59035 -k 128.490015 -k 132.389524 -k 142.388753 -k 162.388753 -k 166.388753 -k 175.333025 -k 184.277297 -k 188.277297 -k 192.277297 -k 201.221569 -k 210.165841 -k 215.822695 -k 221.479549 -k 227.136403 -k 232.793258 -k 236.793258 ;\n\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b18 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp18;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp18;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp19 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p -0.501812 -8.720681 0 -p 0.545838 -8.720681 0 -p 0.545838 -7.387514 0 -p 2.260467 -7.387514 0 -p 2.260467 -5.716921 0 -p 0.545838 -5.716921 0 -p 0.545838 -5.565796 0 -p 2.260467 -5.565796 0 -p 2.260467 -3.895204 0 -p 0.545838 -3.895204 0 -p 0.537417 4.927337 0 -p 1.592993 5.037761 0 -p 2.352876 5.285438 0 -p 2.963694 5.794448 0 -p 3.277409 6.527621 0 -p 3.358018 7.32238 0 -p 3.277409 8.117117 0 -p 2.963694 8.850319 0 -p 2.352876 9.359281 0 -p 1.592993 9.607047 0 -p 0.800517 9.71732 0 -p 0 9.745124 0 -p 0 8.812327 0 -p 0.570106 8.795228 0 -p 1.134486 8.727412 0 -p 1.675653 8.57504 0 -p 2.110661 8.262036 0 -p 2.33408 7.811128 0 -p 2.391488 7.322378 0 -p 2.33408 6.833614 0 -p 2.110661 6.382724 0 -p 1.675653 6.069691 0 -p 1.134486 5.917373 0 -p 0.570106 5.849464 0 -p 0 5.832846 0 -p -0.570106 5.849464 0 -p -1.134486 5.917373 0 -p -1.675653 6.069691 0 -p -2.110661 6.382724 0 -p -2.33408 6.833614 0 -p -2.391488 7.322378 0 -p -2.33408 7.811128 0 -p -2.110661 8.262036 0 -p -1.675653 8.57504 0 -p -1.134486 8.727412 0 -p -0.570106 8.795228 0 -p 0 8.812327 0 -p 0 9.745124 0 -p -0.800517 9.71732 0 -p -1.592993 9.607047 0 -p -2.352876 9.359281 0 -p -2.963694 8.850319 0 -p -3.277409 8.117117 0 -p -3.358018 7.32238 0 -p -3.277409 6.527621 0 -p -2.963694 5.794448 0 -p -2.352876 5.285438 0 -p -1.592993 5.037761 0 -p -0.49919 4.927337 0 -p -0.501812 -8.720681 0 -k 0 -k 1.04765 -k 2.380817 -k 4.095446 -k 5.766038 -k 7.480667 -k 7.631793 -k 9.346421 -k 11.017014 -k 12.731643 -k 21.554187 -k 22.615522 -k 23.41475 -k 24.209854 -k 25.007325 -k 25.806161 -k 26.604975 -k 27.402473 -k 28.197547 -k 28.996802 -k 29.796914 -k 30.597913 -k 31.53071 -k 32.101072 -k 32.669511 -k 33.231721 -k 33.767635 -k 34.270858 -k 34.762969 -k 35.255093 -k 35.7583 -k 36.294231 -k 36.856426 -k 37.424877 -k 37.995225 -k 38.565573 -k 39.134023 -k 39.696218 -k 40.232149 -k 40.735357 -k 41.22748 -k 41.719591 -k 42.222815 -k 42.758728 -k 43.320938 -k 43.889377 -k 44.45974 -k 45.392536 -k 46.193535 -k 46.993647 -k 47.792903 -k 48.587976 -k 49.385474 -k 50.184288 -k 50.983124 -k 51.780595 -k 52.575699 -k 53.374927 -k 54.474289 -k 68.122307 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\n\t\t\t}\n\tglobal proc b19 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp19;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp19;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp20 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p 0 24 0 -p -4 24 0 -p 0 32 0 -p 4 24 0 -p 0 24 0 -p 0 4 0 -p 1.034188 3.860232 0 -p 1.998312 3.460872 0 -p 2.828448 2.82845 0 -p 3.460875 1.998311 0 -p 3.860228 1.034189 0 -p 4.00003 -2.3063e-007 0 -p 3.860228 -1.034188 0 -p 3.460875 -1.998312 0 -p 2.828448 -2.828448 0 -p 1.998312 -3.460875 0 -p 1.034188 -3.860228 0 -p 0 -4.00003 0 -p -1.034188 -3.860228 0 -p -1.998312 -3.460875 0 -p -2.828448 -2.828448 0 -p -3.460875 -1.998312 0 -p -3.860228 -1.034188 0 -p -4.00003 -2.3063e-007 0 -p -3.860228 1.034189 0 -p -3.460875 1.998311 0 -p -2.828448 2.82845 0 -p -1.998312 3.460872 0 -p -1.034188 3.860232 0 -p 0 4 0 -k 0 -k 4 -k 12.944272 -k 21.888544 -k 25.888544 -k 45.888544 -k 46.932134 -k 47.975696 -k 49.019289 -k 50.062886 -k 51.106444 -k 52.150039 -k 53.193634 -k 54.237194 -k 55.280789 -k 56.324384 -k 57.367943 -k 58.411538 -k 59.455133 -k 60.498693 -k 61.542288 -k 62.585882 -k 63.629442 -k 64.673037 -k 65.716632 -k 66.760191 -k 67.803787 -k 68.84738 -k 69.890942 -k 70.934532 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b20 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp20;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp20;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\n\tglobal proc shp21 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p 0 10.112068 0 -p -0.373493 10.162557 0 -p -0.721682 10.306782 0 -p -1.021482 10.53518 0 -p -1.24988 10.83498 0 -p -1.394105 11.183169 0 -p -1.444594 11.556662 0 -p -1.394105 11.930155 0 -p -1.24988 12.278343 0 -p -1.021482 12.578144 0 -p -0.721682 12.806541 0 -p -0.373493 12.950768 0 -p 0 13.001244 0 -p 0.373493 12.950768 0 -p 0.721682 12.806541 0 -p 1.021482 12.578144 0 -p 1.24988 12.278343 0 -p 1.394105 11.930155 0 -p 1.444594 11.556662 0 -p 1.394105 11.183169 0 -p 1.24988 10.83498 0 -p 1.021482 10.53518 0 -p 0.721682 10.306782 0 -p 0.373493 10.162557 0 -p 0 10.112068 0 -p 0 0 0 -k 0 -k 0.37689 -k 0.753767 -k 1.130657 -k 1.507546 -k 1.884423 -k 2.261313 -k 2.638203 -k 3.01508 -k 3.39197 -k 3.768859 -k 4.145737 -k 4.522625 -k 4.899513 -k 5.276391 -k 5.65328 -k 6.030171 -k 6.407047 -k 6.783937 -k 7.160827 -k 7.537704 -k 7.914594 -k 8.291484 -k 8.668361 -k 9.045251 -k 19.157319 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b21 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp21;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp21;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\n\tglobal proc shp22 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p 0 11.09967 0 -p -0.374605 10.136967 0 -p -0.217575 11.158284 0 -p -1.024621 10.510461 0 -p -0.376794 11.317503 0 -p -1.398115 11.160478 0 -p -0.435408 11.535078 0 -p -1.398115 11.909687 0 -p -0.376794 11.752654 0 -p -1.024621 12.559704 0 -p -0.217575 11.911872 0 -p -0.374605 12.9332 0 -p 0 11.970484 0 -p 0.374605 12.9332 0 -p 0.217575 11.911872 0 -p 1.024621 12.559704 0 -p 0.376794 11.752654 0 -p 1.398115 11.909687 0 -p 0.435408 11.535078 0 -p 1.398115 11.160478 0 -p 0.376794 11.317503 0 -p 1.024621 10.510461 0 -p 0.217575 11.158284 0 -p 0.374605 10.136967 0 -p 0 11.09967 0 -p 0 0 0 -k 0 -k 1.033018 -k 2.066337 -k 3.101227 -k 4.136117 -k 5.169438 -k 6.202459 -k 7.235482 -k 8.268805 -k 9.303701 -k 10.338596 -k 11.371925 -k 12.404955 -k 13.437986 -k 14.471315 -k 15.50621 -k 16.541106 -k 17.574429 -k 18.607452 -k 19.640472 -k 20.673794 -k 21.708684 -k 22.743574 -k 23.776892 -k 24.809911 -k 35.909581 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b22 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp22;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp22;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp23 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p -1.6 -6.4 0 -p -1.6 -1.6 0 -p -6.4 -1.6 0 -p -6.4 1.6 0 -p -1.6 1.6 0 -p -1.6 6.4 0 -p 1.6 6.4 0 -p 1.6 1.6 0 -p 6.4 1.6 0 -p 6.4 -1.6 0 -p 1.6 -1.6 0 -p 1.6 -6.4 0 -p -1.6 -6.4 0 -k 0 -k 4.8 -k 9.6 -k 12.8 -k 17.6 -k 22.4 -k 25.6 -k 30.4 -k 35.2 -k 38.4 -k 43.2 -k 48 -k 51.2 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b23 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp23;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp23;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp24 ()\n\t\t\t{\n\t\tcurve -d 1 -p 2 0 2 -p -2 0 2 -p -2 0 -2 -p 2 0 -2 -p 2 0 2 -p 0 8 0 -p -2 0 2 -p -2 0 -2 -p 0 8 0 -p 2 0 -2 -p 2 0 2 -p 0 8 0 -p -2 0 2 -k 0 -k 4 -k 8 -k 12 -k 16 -k 24.485281 -k 32.970563 -k 36.970563 -k 45.455844 -k 53.941125 -k 57.941125 -k 66.426407 -k 74.911688 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b24 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp24;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp24;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp25 ()\n\t\t\t{\n\t\tcurve -d 1 -p 0.705532 22.577041 1.222018 -p -0.705533 22.577041 1.222018 -p 0 27.750632 0 -p 0.705532 22.577041 1.222018 -p 1.411065 22.577041 0 -p 0 27.750632 0 -p 1.411065 22.577041 0 -p 0.705533 22.577041 -1.222018 -p 0 27.750632 0 -p 0.705533 22.577041 -1.222018 -p -0.705532 22.577041 -1.222019 -p 0 27.750632 0 -p -0.705532 22.577041 -1.222019 -p -1.411065 22.577041 -2.24148e-007 -p 0 27.750632 0 -p -1.411065 22.577041 -2.24148e-007 -p -0.705533 22.577041 1.222018 -p 0 27.750632 0 -p 0 0 0 -p 0 0 27.750632 -p -1.222018 0.705533 22.577041 -p 0 1.411065 22.577041 -p 0 0 27.750632 -p 1.222018 0.705532 22.577041 -p 0 1.411065 22.577041 -p 1.222018 0.705532 22.577041 -p 1.222018 -0.705533 22.577041 -p 0 0 27.750632 -p 1.222018 -0.705533 22.577041 -p -2.24148e-007 -1.411065 22.577041 -p 0 0 27.750632 -p -2.24148e-007 -1.411065 22.577041 -p -1.222019 -0.705532 22.577041 -p 0 0 27.750632 -p -1.222019 -0.705532 22.577041 -p -1.222018 0.705533 22.577041 -p 0 0 27.750632 -p 0 0 5.64426 -p 0 5.64426 5.64426 -p 0 5.64426 0 -p 5.64426 5.64426 0 -p 5.64426 0 0 -p 0 0 0 -p 0 0 5.64426 -p 5.64426 0 5.64426 -p 5.64426 0 0 -p 27.750632 0 0 -p 22.577041 1.411065 0 -p 22.577041 0.705532 -1.222018 -p 27.750632 0 0 -p 22.577041 0.705532 -1.222018 -p 22.577041 -0.705533 -1.222018 -p 27.750632 0 0 -p 22.577041 -1.411065 2.24148e-007 -p 22.577041 -0.705533 -1.222018 -p 22.577041 -1.411065 2.24148e-007 -p 22.577041 -0.705532 1.222019 -p 27.750632 0 0 -p 22.577041 -0.705532 1.222019 -p 22.577041 0.705533 1.222018 -p 22.577041 1.411065 0 -p 27.750632 0 0 -p 22.577041 0.705533 1.222018 -k 0 -k 1.411065 -k 6.773634 -k 12.136203 -k 13.547268 -k 18.909838 -k 24.272407 -k 25.683471 -k 31.046041 -k 36.40861 -k 37.819675 -k 43.182244 -k 48.544813 -k 49.955878 -k 55.318448 -k 60.681017 -k 62.092082 -k 67.454651 -k 95.205283 -k 122.955915 -k 128.318484 -k 129.729549 -k 135.092118 -k 140.454687 -k 141.865752 -k 143.276817 -k 144.687883 -k 150.050452 -k 155.413021 -k 156.824086 -k 162.186655 -k 167.549224 -k 168.96029 -k 174.322859 -k 179.685428 -k 181.096493 -k 186.459062 -k 208.565434 -k 214.209694 -k 219.853955 -k 225.498215 -k 231.142475 -k 236.786735 -k 242.430996 -k 248.075256 -k 253.719516 -k 275.825888 -k 281.188457 -k 282.599522 -k 287.962091 -k 293.32466 -k 294.735726 -k 300.098295 -k 305.460864 -k 306.871929 -k 308.282994 -k 309.69406 -k 315.056629 -k 320.419198 -k 321.830263 -k 323.241328 -k 328.603897 -k 333.966466 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b25 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp25;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp25;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp26 ()\n\t\t\t{\n\t\tcurve -d 1 -p 0 4.525483 4.525483 -p -0.8 4.525483 4.525483 -p 0 6.22254 6.22254 -p 0.8 4.525483 4.525483 -p 0 4.525483 4.525483 -p 0 0 0 -p 3.2 3.2 4.525483 -p 2.634315 3.765685 4.525483 -p 4.4 4.4 6.22254 -p 3.765685 2.634315 4.525483 -p 3.2 3.2 4.525483 -p 0 0 0 -p 4.525483 0 4.525483 -p 4.525483 0.8 4.525483 -p 6.22254 0 6.22254 -p 4.525483 -0.8 4.525483 -p 4.525483 0 4.525483 -p 0 0 0 -p 3.2 -3.2 4.525483 -p 3.765685 -2.634315 4.525483 -p 4.4 -4.4 6.22254 -p 2.634315 -3.765685 4.525483 -p 3.2 -3.2 4.525483 -p 0 0 0 -p 0 -4.525483 4.525483 -p 0.8 -4.525483 4.525483 -p 0 -6.22254 6.22254 -p -0.8 -4.525483 4.525483 -p 0 -4.525483 4.525483 -p 0 0 0 -p -3.2 -3.2 4.525483 -p -2.634315 -3.765685 4.525483 -p -4.4 -4.4 6.22254 -p -3.765685 -2.634315 4.525483 -p -3.2 -3.2 4.525483 -p 0 0 0 -p -4.525483 0 4.525483 -p -4.525483 -0.8 4.525483 -p -6.22254 0 6.22254 -p -4.525483 0.8 4.525483 -p -4.525483 0 4.525483 -p 0 0 0 -p -3.2 3.2 4.525483 -p -3.765685 2.634315 4.525483 -p -4.4 4.4 6.22254 -p -2.634315 3.765685 4.525483 -p -3.2 3.2 4.525483 -p 0 0 0 -p 0 0 12.090965 -p 0 1.511371 12.090965 -p 0 0 16.625077 -p 0 -1.511371 12.090965 -p 0 0 12.090965 -p -1.511371 0 12.090965 -p 0 1.511371 12.090965 -p 1.511371 0 12.090965 -p 0 -1.511371 12.090965 -p -1.511371 0 12.090965 -p 0 0 16.625077 -p 1.511371 0 12.090965 -p 0 0 12.090965 -k 0 -k 0.8 -k 3.329822 -k 5.859644 -k 6.659644 -k 13.059644 -k 19.459644 -k 20.259644 -k 22.789466 -k 25.319289 -k 26.119289 -k 32.519289 -k 38.919289 -k 39.719289 -k 42.249111 -k 44.778933 -k 45.578933 -k 51.978933 -k 58.378933 -k 59.178933 -k 61.708755 -k 64.238577 -k 65.038577 -k 71.438577 -k 77.838577 -k 78.638577 -k 81.168399 -k 83.698221 -k 84.498221 -k 90.898221 -k 97.298221 -k 98.098221 -k 100.628043 -k 103.157866 -k 103.957866 -k 110.357866 -k 116.757866 -k 117.557866 -k 120.087688 -k 122.61751 -k 123.41751 -k 129.81751 -k 136.21751 -k 137.01751 -k 139.547332 -k 142.077154 -k 142.877154 -k 149.277154 -k 161.368119 -k 162.87949 -k 167.658864 -k 172.438237 -k 173.949608 -k 175.460979 -k 177.59838 -k 179.73578 -k 181.873181 -k 184.010582 -k 188.789956 -k 193.56933 -k 195.0807 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b26 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp26;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp26;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp27 ()\n\t\t\t{\n\t\tcurve -d 1 -p 0 0 -6 -p 0 0 -8 -p 2.06834 0 -7.720474 -p 3.996656 0 -6.921725 -p 5.656898 0 -5.656901 -p 6.921731 0 -3.996654 -p 7.720465 0 -2.068341 -p 8.000062 0 5.15532e-007 -p 7.720465 0 2.06834 -p 6.921731 0 3.996656 -p 5.656898 0 5.656898 -p 3.996656 0 6.921731 -p 2.06834 0 7.720465 -p 0 0 8.000062 -p -2.06834 0 7.720465 -p -3.996656 0 6.921731 -p -5.656898 0 5.656898 -p -6.921731 0 3.996656 -p -7.720465 0 2.06834 -p -8.000062 0 5.15532e-007 -p -10.117476 0 0 -p -6.959211 0 -6.31653 -p -3.800946 0 0 -p -6.000046 0 3.86931e-007 -p -5.790349 0 1.551256 -p -5.191298 0 2.997491 -p -4.242674 0 4.242673 -p -2.997491 0 5.191298 -p -1.551256 0 5.790349 -p 0 0 6.000046 -p 1.551256 0 5.790349 -p 2.997491 0 5.191298 -p 4.242674 0 4.242673 -p 5.191298 0 2.997491 -p 5.790349 0 1.551256 -p 6.000046 0 3.86931e-007 -p 5.790349 0 -1.551257 -p 5.191298 0 -2.99749 -p 4.242674 0 -4.242676 -p 2.997491 0 -5.191294 -p 1.551256 0 -5.790355 -p 0 0 -6 -k 0 -k 2 -k 4.087143 -k 6.174343 -k 8.261489 -k 10.348646 -k 12.435838 -k 14.522991 -k 16.610143 -k 18.697338 -k 20.78449 -k 22.871642 -k 24.958836 -k 27.045989 -k 29.133141 -k 31.220335 -k 33.307488 -k 35.394639 -k 37.481834 -k 39.568986 -k 41.6864 -k 48.748496 -k 55.810591 -k 58.009692 -k 59.575056 -k 61.140451 -k 62.705816 -k 64.271181 -k 65.836575 -k 67.40194 -k 68.967305 -k 70.532699 -k 72.098064 -k 73.663429 -k 75.228823 -k 76.794188 -k 78.359554 -k 79.924946 -k 81.490314 -k 83.055675 -k 84.621073 -k 86.186431 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b27 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp27;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp27;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\n\tglobal proc shp28 ()\n\t\t\t{\n\t\tcurve -d 1 -p 6.000046 0 3.86931e-007 -p 5.790349 0 -1.551257 -p 5.191298 0 -2.99749 -p 4.242674 0 -4.242676 -p 2.997491 0 -5.191294 -p 1.551256 0 -5.790355 -p 0 0 -6 -p 0 6 -6 -p 1.551256 6 -5.790355 -p 2.997491 6 -5.191294 -p 4.242674 6 -4.242676 -p 5.191298 6 -2.99749 -p 5.790349 6 -1.551257 -p 6.000046 6 3.86931e-007 -p 6.000046 0 3.86931e-007 -p 5.790349 0 1.551256 -p 5.191298 0 2.997491 -p 4.242674 0 4.242673 -p 2.997491 0 5.191298 -p 1.551256 0 5.790349 -p 0 0 6.000046 -p -1.551256 0 5.790349 -p -2.997491 0 5.191298 -p -4.242674 0 4.242673 -p -5.191298 0 2.997491 -p -5.790349 0 1.551256 -p -6.000046 0 3.86931e-007 -p -6.000046 6 3.86931e-007 -p -5.790349 6 -1.551257 -p -5.191298 6 -2.99749 -p -4.242674 6 -4.242676 -p -2.997491 6 -5.191294 -p -1.551256 6 -5.790355 -p 0 6 -6 -p 0 0 -6 -p -1.551256 0 -5.790355 -p -2.997491 0 -5.191294 -p -4.242674 0 -4.242676 -p -5.191298 0 -2.99749 -p -5.790349 0 -1.551257 -p -6.000046 0 3.86931e-007 -p -6.000046 6 3.86931e-007 -p -5.790349 6 1.551256 -p -5.191298 6 2.997491 -p -4.242674 6 4.242673 -p -2.997491 6 5.191298 -p -1.551256 6 5.790349 -p 0 6 6.000046 -p 0 0 6.000046 -p 0 6 6.000046 -p 1.551256 6 5.790349 -p 2.997491 6 5.191298 -p 4.242674 6 4.242673 -p 5.191298 6 2.997491 -p 5.790349 6 1.551256 -p 6.000046 6 3.86931e-007 -k 0 -k 1.565366 -k 3.130758 -k 4.696126 -k 6.261487 -k 7.826885 -k 9.392244 -k 15.392244 -k 16.957602 -k 18.523 -k 20.088361 -k 21.653729 -k 23.219121 -k 24.784487 -k 30.784487 -k 32.349852 -k 33.915246 -k 35.480611 -k 37.045976 -k 38.61137 -k 40.176735 -k 41.7421 -k 43.307494 -k 44.872859 -k 46.438224 -k 48.003618 -k 49.568983 -k 55.568983 -k 57.134349 -k 58.699741 -k 60.265109 -k 61.83047 -k 63.395868 -k 64.961226 -k 70.961226 -k 72.526584 -k 74.091982 -k 75.657343 -k 77.222712 -k 78.788104 -k 80.35347 -k 86.35347 -k 87.918834 -k 89.484229 -k 91.049594 -k 92.614959 -k 94.180353 -k 95.745718 -k 101.745718 -k 107.745718 -k 109.311083 -k 110.876477 -k 112.441842 -k 114.007207 -k 115.572601 -k 117.137966 ;\n\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\t\t\t}\n\tglobal proc b28 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp28;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp28;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\n\t\tset;\n\t\tlockhide;\n\t\t}\n// get and set color ....................................................................................................................................................................................................\n\tglobal proc  h_off ()\n\t{\n\tstring $panel = `getPanel  -withFocus`;\n\t\tmodelEditor -e -sel 0 -manipulators 0 $panel;\n\t\tset;\n\t}\n\tglobal proc  h_on ()\n\t{\n\tstring $panel = `getPanel  -withFocus`;\n\t\tmodelEditor -e -sel 1 -manipulators 1 $panel;\n\t}\n\n\tglobal proc set ()\n\t\t{\n\t\t$color = `colorIndexSliderGrp -q -value cis01`;\n\t\tstring $sl [] = `ls -sl`;\n\t\tstring $obj ;\n\n\t\tfor ($obj in $sl)\n\t\t{\n\t\tsetAttr ($obj+\".overrideEnabled\") 1;\n\t\tsetAttr ($obj+\".overrideColor\") ($color -1);\n\t\t}\n\n\t\t}\n// Mirror ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n\n\n\nglobal proc mirrorX()\n{\nstring $copy = `checkBox -q -value cb01`;\n\tget;\n\tmirrorunlock;\nif ($copy == 1)\n\t{\n\tduplicate;\n\t}\n\n\tgroup -n \"controllers_mirror_grp\";\n\t\txform -os -piv 0 0 0;\n\n\tscale -1 1 1 ;\n\t\n\t\tungroup controllers_mirror_grp;\n\n//makeIdentity -apply true -t 1 -r 1 -s 1 -n 0;\nlockhide;\n}\n\n\n\nglobal proc mirrorY()\n{\nstring $copy = `checkBox -q -value cb01`;\n\tget;\n\tmirrorunlock;\nif ($copy == 1)\n\t{\n\tduplicate;\n\t}\n\n\tgroup -n \"controllers_mirror_grp\";\n\t\txform -os -piv 0 0 0;\n\n\tscale 1 -1 1 ;\n\t\n\t\tungroup controllers_mirror_grp;\n\n//makeIdentity -apply true -t 1 -r 1 -s 1 -n 0;\nlockhide;\n}\n\nglobal proc mirrorZ()\n{\nstring $copy = `checkBox -q -value cb01`;\n\tget;\n\tmirrorunlock;\nif ($copy == 1)\n\t{\n\tduplicate;\n\t}\n\n\tgroup -n \"controllers_mirror_grp\";\n\t\txform -os -piv 0 0 0;\n\n\tscale 1 1 -1 ;\n\t\n\t\tungroup controllers_mirror_grp;\n\n//makeIdentity -apply true -t 1 -r 1 -s 1 -n 0;\nlockhide;\n}\n\n\nglobal proc mirrorunlock ()\n\n{\nstring $sel[] = `ls -sl`; \nfor ($obj in $sel)\n\nsetAttr -keyable true  -lock false ($obj +\".tx\");\nsetAttr -keyable true  -lock false ($obj +\".ty\");\nsetAttr -keyable true  -lock false ($obj +\".tz\");\n\nsetAttr -keyable true  -lock false ($obj +\".rx\");\nsetAttr -keyable true  -lock false ($obj +\".ry\");\nsetAttr -keyable true  -lock false ($obj +\".rz\");\n\nsetAttr -keyable true  -lock false ($obj +\".sx\");\nsetAttr -keyable true  -lock false ($obj +\".sy\");\nsetAttr -keyable true  -lock false ($obj +\".sz\");\n\n}\n\n\n// lock and hide ..........................................................................................................................................................................................................\n\nglobal proc lockhide ()\n\n{\nstring $tx = `checkBox -q -value tx`;\nstring $ty = `checkBox -q -value ty`;\nstring $tz = `checkBox -q -value tz`;\n\nstring $rx = `checkBox -q -value rx`;\nstring $ry = `checkBox -q -value ry`;\nstring $rz = `checkBox -q -value rz`;\n\nstring $sx = `checkBox -q -value sx`;\nstring $sy = `checkBox -q -value sy`;\nstring $sz = `checkBox -q -value sz`;\n\nstring $v = `checkBox -q  -value v`;\n\nstring $sel [] = `ls -sl`;\nstring $obj;\n\nif ($tx == 1)\n{\n\nfor ($obj in $sel)\n{\nsetAttr -keyable false  -lock true ($obj +\".tx\");\n}\n}\nelse\n{\nfor ($obj in $sel)\n{\nsetAttr -keyable true  -lock false ($obj +\".tx\");\n}\n}\n\nif ($ty == 1)\n{\n\nfor ($obj in $sel)\n{\nsetAttr -keyable false  -lock true ($obj +\".ty\");\n}\n}\nelse\n{\nfor ($obj in $sel)\n{\nsetAttr -keyable true  -lock false ($obj +\".ty\");\n}\n}\n\nif ($tz == 1)\n{\n\nfor ($obj in $sel)\n{\nsetAttr -keyable false  -lock true ($obj +\".tz\");\n}\n}\nelse\n{\nfor ($obj in $sel)\n{\nsetAttr -keyable true  -lock false ($obj +\".tz\");\n}\n}\n\n\nif ($rx == 1)\n{\n\nfor ($obj in $sel)\n{\nsetAttr -keyable false  -lock true ($obj +\".rx\");\n}\n}\nelse\n{\nfor ($obj in $sel)\n{\nsetAttr -keyable true  -lock false ($obj +\".rx\");\n}\n}\n\nif ($ry == 1)\n{\n\nfor ($obj in $sel)\n{\nsetAttr -keyable false  -lock true ($obj +\".ry\");\n}\n}\nelse\n{\nfor ($obj in $sel)\n{\nsetAttr -keyable true  -lock false ($obj +\".ry\");\n}\n}\n\n\nif ($rz == 1)\n{\n\nfor ($obj in $sel)\n{\nsetAttr -keyable false  -lock true ($obj +\".rz\");\n}\n}\nelse\n{\nfor ($obj in $sel)\n{\nsetAttr -keyable true  -lock false ($obj +\".rz\");\n}\n}\n\n\nif ($sx == 1)\n{\n\nfor ($obj in $sel)\n{\nsetAttr -keyable false  -lock true ($obj +\".sx\");\n}\n}\nelse\n{\nfor ($obj in $sel)\n{\nsetAttr -keyable true  -lock false ($obj +\".sx\");\n}\n}\n\n\nif ($sy == 1)\n{\n\nfor ($obj in $sel)\n{\nsetAttr -keyable false  -lock true ($obj +\".sy\");\n}\n}\nelse\n{\nfor ($obj in $sel)\n{\nsetAttr -keyable true  -lock false ($obj +\".sy\");\n}\n}\n\n\nif ($sz == 1)\n{\n\nfor ($obj in $sel)\n{\nsetAttr -keyable false  -lock true ($obj +\".sz\");\n}\n}\nelse\n{\nfor ($obj in $sel)\n{\nsetAttr -keyable true  -lock false ($obj +\".sz\");\n}\n}\n\n\n\nif ($v == 1)\n\n{\nfor ($obj in $sel)\n{\nsetAttr -keyable false  -lock true ($obj +\".v\");\n}\n}\nelse\n{\nfor ($obj in $sel)\n{\nsetAttr -keyable true  -lock false ($obj +\".v\");\n}\nedit_t;\nedit_r;\nedit_s;\n\n}\n\n\n\n\n\n}\n\n\n// ----------------------------------------------------------------------------------------------------------------------------------\n// freeze transformations\n\n\nglobal proc freeze ()\n{\nget;\nstring $selfr [] =`ls  -sl`;\nstring $freeze;\nfor ($freeze in $selfr)\n{\nsetAttr -lock false ($freeze +\".tx\");\nsetAttr -lock false ($freeze +\".ty\");\nsetAttr -lock false ($freeze +\".tz\");\nsetAttr -lock false ($freeze +\".rx\");\nsetAttr -lock false ($freeze +\".ry\");\nsetAttr -lock false ($freeze +\".rz\");\nsetAttr -lock false ($freeze +\".sx\");\nsetAttr -lock false ($freeze +\".sy\");\nsetAttr -lock false ($freeze +\".sz\");\nsetAttr -lock false ($freeze +\".v\");\n}\nmakeIdentity -apply true -t 1 -r 1 -s 1 -n 0;\nlockhide;\n}\n\n// slidr maker\n\n\nglobal proc make()\n{\n\tif (`window -exists sm`)\n\tdeleteUI -window sm;\n\nwindow -title \"slider maker\" -rtf 1  sm;\ncolumnLayout -adjustableColumn true sm;\nframeLayout -w 180 -label \" Border\" -borderStyle \"etchedIn\" Border;\n\ncolumnLayout -adjustableColumn true;\nseparator -h 10  -style \"none\";\nintSliderGrp -field true -label \"Height\"  -value 5  -maxValue 10 -fieldMaxValue 100 -columnWidth3 50 30 50 -adjustableColumn 3 height;\nintSliderGrp -field true -label \"Width \"  -value 5  -maxValue 10 -fieldMaxValue 100 -columnWidth3 50 30 50 -adjustableColumn 3 width;\n\nsetParent..;\nsetParent..;\nseparator -h 5  -style \"none\";\nframeLayout -w 180  -label \" Handle\" -borderStyle \"etchedIn\" Handle;\ncolumnLayout -adjustableColumn true;\nseparator -h 10  -style \"none\";\nfloatSliderGrp -field true -label \"Size\" -value 1 -maxValue 10 -fieldMaxValue 100 -columnWidth3 50 30 50 -adjustableColumn 3 size;\nsetParent..;\nsetParent..;\nseparator -h 5  -style \"none\";\nbutton -label \"Make Slider \"  -h 30  -c s ;\n\nshowWindow sm;\n}\n\nglobal proc s ()\n{\nstring $h = `intSliderGrp -q -value height`;\nstring $w = `intSliderGrp -q -value width`;\nint $fh = $h;\nint $fw = $w;\nstring $bor = `curve -d 1 -p -1 1 0 -p 1 1 0 -p 1 -1 0 -p -1 -1 0 -p -1 1 0 -k 0 -k 8 -k 16 -k 24 -k 32`  ;\n\n\n\nscale $fw $fh 0;\nmakeIdentity -apply true -t 1 -r 1 -s 1 -n 0;\n\t\tsetAttr ($bor+\".overrideEnabled\") 1;\n\t\tsetAttr ($bor+\".overrideColor\") 6;\nstring $size = `floatSliderGrp -q -value size`;\ncircle -c 0 0 0 -nr 0 0 1 -sw 360 -r $size -d 3 -ut 0 -tol 0.01 -s 8 -ch 1  ;\n\n\nmakeIdentity -apply true -t 1 -r 1 -s 1 -n 0;\n\t\tsetAttr  \".overrideEnabled\" 1;\n\t\tsetAttr \".overrideColor\" 17;\n\ndelete -ch;\n\nstring $selbor [] = `ls -sl`;\nfor ($objbor in $selbor)\n{\nif ($fw == 0  )\n{\nsetAttr -lock true -keyable false ($objbor+\".tx\");\n}\nif ($fh == 0  )\n{\nsetAttr -lock true -keyable false ($objbor+\".ty\");\n}\nsetAttr -lock true -keyable false ($objbor+\".tz\");\nsetAttr -lock true -keyable false ($objbor+\".rx\");\nsetAttr -lock true -keyable false ($objbor+\".ry\");\nsetAttr -lock true -keyable false ($objbor+\".rz\");\nsetAttr -lock true -keyable false ($objbor+\".sx\");\nsetAttr -lock true -keyable false ($objbor+\".sy\");\nsetAttr -lock true -keyable false ($objbor+\".sz\");\nsetAttr -lock true -keyable false ($objbor+\".v\");\nparent $selbor $bor;\ntransformLimits -tx (-($fw)) $fw -etx 1 1 $objbor;\ntransformLimits -ty (-($fh)) $fh -ety 1 1 $objbor;\nselect -cl  ;\n}\n}\n\n// combine\n\nglobal proc combine ()\n{\nstring $sl[] = `ls -sl`;\nmakeIdentity -apply true -t 1 -r 1 -s 1 -n 0;\ndelete -ch;\nstring $sh []= `listRelatives -s $sl[0]`;\nparent -add -shape $sh $sl[1];\ndelete $sl[0];\n\n}\n\nkk_controllers;\n" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "\n\nglobal proc kk_controllers ()\n\n{\n\tif (`window -exists mc`)\n\tde..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Controls" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "bevel.png" 
        -image1 "bevel.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "\n\nglobal proc kk_controllers ()\n\n{\n\tif (`window -exists mc`)\n\tdeleteUI -window mc;\n\n// making GUI ................................................................................................................................................................................................\n\nstring $window = `window -title \"kk_Controllers\"  -rtf 1  -s 0 -w 1 -h 300  mc`;\n\tstring $mco = `columnLayout -adjustableColumn true `;\n\t\tframeLayout -label \" Color\" -borderStyle \"etchedIn\";\n\t\t\tcolumnLayout -adjustableColumn true -columnAttach \"left\" 10  -rowSpacing 10;\n\t\t\t\tcolorIndexSliderGrp -minValue 1 -maxValue 31 -value 16 -columnWidth 1 25 -columnWidth 2 140  -dc h_off  -cc h_on cis01 ;\n\nsetParent $mco;\n\n\tframeLayout -label \" Lock & Hide\" -borderStyle \"etchedIn\"   -h 220 ;\n\t\tstring $lh_c = `columnLayout -adjustableColumn 1  `;\n\t\tseparator -h 10 -style \"none\";\n\t\tbutton -c \"get\" -label \"Get from selected\";\n\t\tbutton -c \"lockhide\" -label \"Apply to selected\";\n\t\tseparator -h 5 -style \"none\";\n\t\tstring $mc = `rowLayout -nc 3 -columnWidth3 61 61 61 `;\n\n\t\tframeLayout -borderStyle \"etchedIn\" -h 110 -w 60 -label \"\";\n\t\t\tstring $mf = `formLayout`;\n\n\t\tcheckBox  -label \"T\" -onc \"ont\" -ofc \"oft\"    t;\n\t\tcheckBox  -label \"X\" -cc \"lockhide\" tx;\n\t\tcheckBox  -label \"Y\" -cc \"lockhide\" ty;\n\t\tcheckBox  -label \"Z\" -cc \"lockhide\" tz;\n\t\tpicture -image \"kk_icons/x.XPM\" px;\n              picture -image \"kk_icons/y.XPM\" py;\n              picture -image \"kk_icons/z.XPM\" pz;\n\n\tformLayout -e\n\t\t-attachForm t \"left\" 5\n\n\t\t-attachForm tx \"top\" 30\n\t\t-attachForm tx \"left\" 17\n\n\t\t-attachForm ty \"top\" 45\n\t\t-attachForm ty \"left\" 17\n\n\t\t-attachForm tz \"top\" 60\n\t\t-attachForm tz \"left\" 17\n\n\t\t-attachForm px \"top\" 32\n\t\t-attachForm px \"left\" 10\n\n\t\t-attachForm py \"top\" 47\n\t\t-attachForm py \"left\" 10\n\n\t\t-attachForm pz \"top\" 62\n\t\t-attachForm pz \"left\" 10\n\n\t\t$mf;\n\n\n\n\nsetParent $mc;\n\n\t\tframeLayout -borderStyle \"etchedIn\" -h 110 -w 60 -label \"\";\n\t\t\tstring $mf = `formLayout`;\n\n\t\tcheckBox  -onc \"onr\" -ofc \"ofr\" -label \" R \"  r;\n\t\tcheckBox  -label \"X\" -cc \"lockhide\" rx;\n\t\tcheckBox  -label \"Y\" -cc \"lockhide\" ry;\n\t\tcheckBox  -label \"Z\" -cc \"lockhide\" rz;\n\t\tpicture -image \"x.XPM\" px;\n        picture -image \"y.XPM\" py;\n        picture -image \"z.XPM\" pz;\n\tformLayout -e\n\t\t-attachForm r \"left\" 5\n\n\t\t-attachForm rx \"top\" 30\n\t\t-attachForm rx \"left\" 17\n\n\t\t-attachForm ry \"top\" 45\n\t\t-attachForm ry \"left\" 17\n\n\t\t-attachForm rz \"top\" 60\n\t\t-attachForm rz \"left\" 17\n\n\t\t-attachForm px \"top\" 32\n\t\t-attachForm px \"left\" 10\n\n\t\t-attachForm py \"top\" 47\n\t\t-attachForm py \"left\" 10\n\n\t\t-attachForm pz \"top\" 62\n\t\t-attachForm pz \"left\" 10\n\n\t\t$mf;\n\nsetParent $mc;\n\n\t\tframeLayout -borderStyle \"etchedIn\" -h 110 -w 60 -label \"\" ;\n\t\t\tstring $mf = `formLayout`;\n\n\t\tcheckBox  -onc \"ons\" -ofc \"ofs\" -label \" S \"  s;\n\t\tcheckBox  -label \"X\" -cc \"lockhide\" sx;\n\t\tcheckBox  -label \"Y\" -cc \"lockhide\" sy;\n\t\tcheckBox  -label \"Z\" -cc \"lockhide\" sz;\n\t\tpicture -image \"x.XPM\" px;\n        \tpicture -image \"y.XPM\" py;\n        \tpicture -image \"z.XPM\" pz;\n\tformLayout -e\n\t\t-attachForm s \"left\" 5\n\n\t\t-attachForm sx \"top\" 30\n\t\t-attachForm sx \"left\" 17\n\n\t\t-attachForm sy \"top\" 45\n\t\t-attachForm sy \"left\" 17\n\n\t\t-attachForm sz \"top\" 60\n\t\t-attachForm sz \"left\" 17\n\n\t\t-attachForm px \"top\" 32\n\t\t-attachForm px \"left\" 10\n\n\t\t-attachForm py \"top\" 47\n\t\t-attachForm py \"left\" 10\n\n\t\t-attachForm pz \"top\" 62\n\t\t-attachForm pz \"left\" 10\n\n\t\t$mf;\n\nsetParent $lh_c;\n\n\t\tseparator -style \"none\";\n\t\tcheckBox -label \"Visibility\" -align \"left\"  -cc \"lockhide\" v;\n\t\tseparator -style \"none\";\n\nsetParent $mco;\n\nframeLayout -label \" Mirror\" -borderStyle \"etchedIn\";\n\tcolumnLayout;\n\t\tseparator -style \"none\";\n\t\trowLayout -nc 4 -columnWidth4 60 40 40 40;\n\t\t\tcheckBox -label \"Copy\" cb01;\n\t\t\tbutton -label \"   X   \" -c mirrorX;\n\t\t\tbutton -label \"   Y   \" -c mirrorY;\n\t\t\tbutton -label \"   Z   \" -c mirrorZ;\n\tsetParent..;\n\t\tseparator -style \"none\";\n\nsetParent $mco;\n\n\n\n    frameLayout -h 350 -label \"Controllers\" -borderStyle \"etchedIn\";\n\n// WIP ------------------------------------------------------\n\tcolumnLayout;\n\t\t\tseparator -h 5 -style \"none\";\n\t\t    checkBox -v 0 -label \"Create Up Node\"  upNodeCB;\nsetParent..;\n// WIP ------------------------------------------------------\n\n\n\t\t    scrollLayout -cr 1   ;\n\t\t\tgridLayout -numberOfColumns 4 -cellWidthHeight 40 40 ;\n\n\n\n\n\n\t\t\t\tsymbolButton -image \"kk_icons/b01.XPM\"    -c b01   b01;\n\t\t\t\tsymbolButton -image \"kk_icons/b02.XPM\"    -c b02   b02;\n\t\t\t\tsymbolButton -image \"kk_icons/b03.XPM\"    -c b03   b03;\n\t\t\t\tsymbolButton -image \"kk_icons/b04.XPM\"    -c b04   b04;\n\t\t\t\tsymbolButton -image \"kk_icons/b05.XPM\"    -c b05   b05;\n\t\t\t\tsymbolButton -image \"kk_icons/b06.XPM\"    -c b06   b06;\n\t\t\t\tsymbolButton -image \"kk_icons/b07.XPM\"    -c b07   b07;\n\t\t\t\tsymbolButton -image \"kk_icons/b08.XPM\"    -c b08   b08;\n\t\t\t\tsymbolButton -image \"kk_icons/b09.XPM\"    -c b09   b09;\n\t\t\t\tsymbolButton -image \"kk_icons/b10.XPM\"    -c b10   b10;\n\t\t\t\tsymbolButton -image \"kk_icons/b11.XPM\"    -c b11   b11;\n\t\t\t\tsymbolButton -image \"kk_icons/b12.XPM\"    -c b12   b12;\n\t\t\t\tsymbolButton -image \"kk_icons/b13.XPM\"    -c b13   b13;\n\t\t\t\tsymbolButton -image \"kk_icons/b14.XPM\"    -c b14   b14;\n\t\t\t\tsymbolButton -image \"kk_icons/b15.XPM\"    -c b15   b15;\n\t\t\t\tsymbolButton -image \"kk_icons/b16.XPM\"    -c b16   b16;\n\t\t\t\tsymbolButton -image \"kk_icons/b17.XPM\"    -c b17   b17;\n\t\t\t\tsymbolButton -image \"kk_icons/b18.XPM\"    -c b18   b18;\n\t\t\t\tsymbolButton -image \"kk_icons/b19.XPM\"    -c b19   b19;\n\t\t\t\tsymbolButton -image \"kk_icons/b20.XPM\"    -c b20   b20;\n\t\t\t\tsymbolButton -image \"kk_icons/b21.XPM\"    -c b21   b21;\n\t\t\t\tsymbolButton -image \"kk_icons/b22.XPM\"    -c b22   b22;\n\t\t\t\tsymbolButton -image \"kk_icons/b23.XPM\"    -c b23   b23;\n\t\t\t\tsymbolButton -image \"kk_icons/b24.XPM\"    -c b24   b24;\n\t\t\t\tsymbolButton -image \"kk_icons/b25.XPM\"    -c b25   b25;\n\t\t\t\tsymbolButton -image \"kk_icons/b26.XPM\"    -c b26   b26;\n\t\t\t\tsymbolButton -image \"kk_icons/b27.XPM\"    -c b27   b27;\n\t\t\t\tsymbolButton -image \"kk_icons/b28.XPM\"    -c b28   b28;\n\nsetParent $mco;\n\n\n\n                \t\tcolumnLayout -adjustableColumn true  ;\n\t\t\t\t\tbutton -h 30   -label \"Slider Maker\" -c make ;\n\t\t\t\t\tbutton -h 30   -label \" Combine Shapes \"   -c combine;\n\t\t\t\t\tbutton -h 30   -label \"Freeze Transformations\"    -c freeze  ft;\n\t\t\t\t\ttextField -visible 0 text01;\n\n\n\n\nshowWindow mc;\n\n\n\t// end of GUI ..........................................................................................................................................................................................................\n\n\t// Procedure for \"making controllers\" ....................................................................................................................................................................\n\n\t//buttons ....................................................................................................................................\n\n}\n\n////////////////////////////////////////////////////////////////////////////////////\n\n//snap\n\nglobal proc snap() \t{\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\t\n\t\t\tstring $text = `textField -q -text text01`;\n\t\n\tif ($text == \"\")\n\t\t\t{\n\t\t\tsphere;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\tsphere;\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\t\n\t\t\t}\n\n// get\n\nglobal proc get ()\n{\n\nstring $sele [] = `ls -sl`;\nstring $gtx = `getAttr -lock $sele.tx`;\nstring $gty = `getAttr -lock $sele.ty`;\nstring $gtz = `getAttr -lock $sele.tz`;\n\nstring $grx = `getAttr -lock $sele.rx`;\nstring $gry = `getAttr -lock $sele.ry`;\nstring $grz = `getAttr -lock $sele.rz`;\n\nstring $gsx = `getAttr -lock $sele.sx`;\nstring $gsy = `getAttr -lock $sele.sy`;\nstring $gsz = `getAttr -lock $sele.sz`;\n\nstring $gv =  `getAttr -lock $sele.visibility`;\n\n\nif ($gtx == 1)\n{\ncheckBox -e -value 1 tx;\n}\nelse\n{\ncheckBox -e -value 0 tx;\n}\n\n\nif ($gty == 1)\n{\ncheckBox -e -value 1 ty;\n}\nelse\n{\ncheckBox -e -value 0 ty;\n}\n\n\nif ($gtz == 1)\n{\ncheckBox -e -value 1 tz;\n}\nelse\n{\ncheckBox -e -value 0 tz;\n}\n\nif ($grx == 1)\n{\ncheckBox -e -value 1 rx;\n}\nelse\n{\ncheckBox -e -value 0 rx;\n}\n\nif ($gry == 1)\n{\ncheckBox -e -value 1 ry;\n}\nelse\n{\ncheckBox -e -value 0 ry;\n}\n\nif ($grz == 1)\n{\ncheckBox -e -value 1 rz;\n}\nelse\n{\ncheckBox -e -value 0 rz;\n}\n\nif ($gsx == 1)\n{\ncheckBox -e -value 1 sx;\n}\nelse\n{\ncheckBox -e -value 0 sx;\n}\n\nif ($gsy == 1)\n{\ncheckBox -e -value 1 sy;\n}\nelse\n{\ncheckBox -e -value 0 sy;\n}\n\nif ($gsz == 1)\n{\ncheckBox -e -value 1 sz;\n}\nelse\n{\ncheckBox -e -value 0 sz;\n}\n\nif ($gv == 1)\n{\ncheckBox -e -value 1 v;\n}\nelse\n{\ncheckBox -e -value 0 v;\n}\nedit_t;\nedit_r;\nedit_s;\n}\n\n\n\n\n//t\nglobal proc ont ()\n\t{\n\tcheckBox -e -value 1 tx;\n       checkBox -e -value 1 ty;\n       checkBox -e -value 1 tz;\n\tlockhide;\n\t}\nglobal proc oft ()\n\t{\n\tcheckBox -e -value 0 tx;\n       checkBox -e -value 0 ty;\n       checkBox -e -value 0 tz;\n\tlockhide;\n        }\n///////////////////////////////////////////\n//r\nglobal proc onr ()\n\t{\n\tcheckBox -e -value 1 rx;\n       checkBox -e -value 1 ry;\n       checkBox -e -value 1 rz;\n\tlockhide;\n\t}\nglobal proc ofr ()\n\t{\n\tcheckBox -e -value 0 rx;\n       checkBox -e -value 0 ry;\n       checkBox -e -value 0 rz;\n\tlockhide;\n       }\n///////////////////////////////////////////\n//s\n\nglobal proc ons ()\n\t{\n\tcheckBox -e -value 1 sx;\n       checkBox -e -value 1 sy;\n       checkBox -e -value 1 sz;\n\tlockhide;\n\t}\nglobal proc ofs ()\n\t{\n\tcheckBox -e -value 0 sx;\n       checkBox -e -value 0 sy;\n       checkBox -e -value 0 sz;\n\tlockhide;\n       }\n\n\n/////////////////////////////////////////////\n\n// edit lockhide\n\n\nglobal proc edit_t()\n{\nint $tx = `checkBox -q -value tx`;\nint $ty = `checkBox -q -value ty`;\nint $tz = `checkBox -q -value tz`;\n\nif ($tx + $ty + $tz == 3)\n{\ncheckBox -e -value 1 t;\n}\nelse\n{\nif ($tx + $ty + $tz == 0)\n{\ncheckBox -e -value 0 t;\n}\n}\n}\n\n\nglobal proc edit_r()\n{\nint $rx = `checkBox -q -value rx`;\nint $ry = `checkBox -q -value ry`;\nint $rz = `checkBox -q -value rz`;\n\nif ($rx + $ry + $rz == 3)\n{\ncheckBox -e -value 1 r;\n}\nelse\n{\nif ($rx + $ry + $rz == 0)\n{\ncheckBox -e -value 0 r;\n}\n}\n}\n\n\nglobal proc edit_s()\n{\nint $sx = `checkBox -q -value sx`;\nint $sy = `checkBox -q -value sy`;\nint $sz = `checkBox -q -value sz`;\n\nif ($sx + $sy + $sz == 3)\n{\ncheckBox -e -value 1 s;\n}\nelse\n{\nif ($sx + $sy + $sz == 0)\n{\ncheckBox -e -value 0 s;\n}\n}\n}\n\n\n\tglobal proc shp01 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p -1 1 1 -p -1 1 -1 -p 1 1 -1 -p 1 1 1 -p -1 1 1 -p -1 -1 1 -p -1 -1 -1 -p -1 1 -1 -p -1 1 1 -p -1 -1 1 -p 1 -1 1 -p 1 1 1 -p 1 1 -1 -p 1 -1 -1 -p 1 -1 1 -p 1 -1 -1 -p -1 -1 -1 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\t\t\t}\n\n\tglobal proc b01 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp01;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp01;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\t\n\t\t\t\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\tglobal proc shp02 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p 2.57253 0 0 -p 3.235575 0 -0.738488 -p 2.552484 0 -0.738488 -p 2 0 -0.105773 -p -2.457426 0 -0.102784 -p -2 0 -1 -p -4 0 0 -p -2 0 1 -p -2.457426 0 0.0956313 -p 2 0 0.0956313 -p 2.552484 0 0.738488 -p 3.235575 0 0.738488 -p 2.57253 0 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 ;\n\n\n\t\t\n$UpNCB = `checkBox -q -v  upNodeCB`;\nif ($UpNCB == 1)\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\t\t\t\n\t\t\n\t\t\t}\n\tglobal proc b02 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp02;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp02;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\t\n\t\t\t\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\tglobal proc shp03 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p -2.12132 0 2.12132 -p -2.427589 0 1.760219 -p -2.671383 0 1.358164 -p -2.852888 0 0.917653 -p -2.959949 0 0.479631-p -2.999992 0 0.00653153 -p -2.964176 0 -0.453565 -p -2.839141 0 -0.959046-p -2.671717 0 -1.357504 -p -2.4336 0 -1.751819 -p -2.130993 0 -2.111601-p -1.792857 0 -2.403811 -p -1.387964 0 -2.656114 -p -0.942438 0 -2.844735 -p -0.465425 0 -2.962282 -p 0.00840032 0 -2.999988 -p 0.454939 0 -2.963959 -p 0.941699 0 -2.844981 -p 1.349441 0 -2.675776 -p 1.757329 0 -2.429662 -p 2.128882 0 -2.11373 -p 2.411311 0 -1.782662 -p 2.661389 0 -1.377759 -p 2.847929 0 -0.932812 -p 2.960853 0 -0.474177 -p 2.999999 0 0.00169319 -p 2.964737 0 0.449986 -p 2.852196 0 0.919787 -p 2.675184 0 1.35062 -p 2.431628 0 1.754581 -p 2.124565 0 2.11807 -p 1.773918 0 2.417691 -p 1.372686 0 2.663993 -p 0.923801 0 2.850887 -p 0.409006 0 2.970854 -p 0 0 3 -p 0.620223 0.592945 3 -p -1 0 3 -p 0.620223 -0.592945 3 -p 0 0 3 -p 0.620223 0 2.407055 -p -1 0 3 -p 0.620223 0 3.592945 -p 0 0 3 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\t\t\t}\n\tglobal proc b03 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp03;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp03;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\t\n\t\t\t\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\n\tglobal proc shp04 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p -3.686735 0 1.930981 -p -3.925376 0.23864 0.305307 -p -3.448095 0.23864 0.305307 -p -3.686735 0 1.930981 -p -3.448095 0.23864 0.305307 -p -3.448095 -0.23864 0.305307 -p -3.686735 0 1.930981 -p -3.448095 -0.23864 0.305307 -p -3.925376 -0.23864 0.305307 -p -3.686735 0 1.930981 -p -3.925376 0.23864 0.305307 -p -3.925376 -0.23864 0.305307 -p -3.686735 0 1.930981 -p -3.686735 0 0 -p -3.594301 0 -0.820376 -p -3.321634 0 -1.599615 -p -2.882406 0 -2.298642 -p -2.298642 0 -2.882406 -p -1.599615 0 -3.321634 -p -0.820376 0 -3.594301 -p 0 0 -3.686735 -p 1.930981 0 -3.686735 -p 0.305307 0.23864 -3.448095 -p 0.305307 0.23864 -3.925376 -p 1.930981 0 -3.686735 -p 0.305307 0.23864 -3.925376 -p 0.305307 -0.23864 -3.925376 -p 1.930981 0 -3.686735 -p 0.305307 -0.23864 -3.448095 -p 0.305307 -0.23864 -3.925376 -p 0.305307 -0.23864 -3.448095 -p 0.305307 0.23864 -3.448095 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\t\t\t}\n\tglobal proc b04 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp04;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp04;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\t\n\tglobal proc shp05 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p -5.38171 -0.5 -0.5 -p -5.38171 -0.5 0.5 -p -5.38171 0.5 0.5 -p -5.38171 0.5 -0.5 -p -5.38171 -0.5 -0.5 -p -7.007384 0 0 -p -5.38171 -0.5 0.5 -p -5.38171 0.5 0.5 -p -7.007384 0 0 -p -5.38171 0.5 -0.5 -p -7.007384 0 0 -p 0 0 0 -p 7.007384 0 0 -p 5.38171 0.5 0.5 -p 5.38171 0.5 -0.5 -p 7.007384 0 0 -p 5.38171 0.5 -0.5 -p 5.38171 -0.5 -0.5 -p 7.007384 0 0 -p 5.38171 -0.5 -0.5 -p 5.38171 -0.5 0.5 -p 7.007384 0 0 -p 5.38171 -0.5 0.5 -p 5.38171 0.5 0.5 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\t\t\t}\n\tglobal proc b05 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp05;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp05;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\n\tglobal proc shp06 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p 0 0 2 -p 0 0 1.001092 -p 0 0.383101 0.924889 -p 0 0.707879 0.707879 -p 0 0.924889 0.383101 -p 0 1.001092 0 -p 0 2 0 -p 0 1.001092 0 -p 0 0.924889 -0.383101 -p 0 0.707879 -0.707879 -p 0 0.383101 -0.924889 -p 0 0 -1.001092 -p 0 0 -2 -p 0 0 -1.001092 -p 0 -0.383101 -0.924889 -p 0 -0.707879 -0.707879 -p 0 -0.924889 -0.383101 -p 0 -1.001092 0 -p 0 -2 0 -p 0 -1.001092 0 -p 0 -0.924889 0.383101 -p 0 -0.707879 0.707879 -p 0 -0.383101 0.924889 -p 0 0 1.001092 -p -0.383101 0 0.924889 -p -0.707879 0 0.707879 -p -0.924889 0 0.383101 -p -1.001092 0 0 -p -2 0 0 -p -1.001092 0 0 -p -0.924889 0 -0.383101 -p -0.707879 0 -0.707879 -p -0.383101 0 -0.924889 -p 0 0 -1.001092 -p 0.383101 0 -0.924889 -p 0.707879 0 -0.707879 -p 0.924889 0 -0.383101 -p 1.001092 0 0 -p 2 0 0 -p 1.001092 0 0 -p 0.924889 0.383101 0 -p 0.707879 0.707879 0 -p 0.383101 0.924889 0 -p 0 1.001092 0 -p -0.383101 0.924889 0 -p -0.707879 0.707879 0 -p -0.924889 0.383101 0 -p -1.001092 0 0 -p -0.924889 -0.383101 0 -p -0.707879 -0.707879 0 -p -0.383101 -0.924889 0 -p 0 -1.001092 0 -p 0.383101 -0.924889 0 -p 0.707879 -0.707879 0 -p 0.924889 -0.383101 0 -p 1.001092 0 0 -p 0.924889 0 0.383101 -p 0.707879 0 0.707879 -p 0.383101 0 0.924889 -p 0 0 1.001092 -p 0 0 0 -p 0 0 -1.001092 -p 0 0 0 -p 1.001092 0 0 -p 0 0 0 -p -1.001092 0 0 -p 0 0 0 -p 0 -1.001092 0 -p 0 0 0 -p 0 1.001092 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 48 -k 49 -k 50 -k 51 -k 52 -k 53 -k 54 -k 55 -k 56 -k 57 -k 58 -k 59 -k 60 -k 61 -k 62 -k 63 -k 64 -k 65 -k 66 -k 67 -k 68 -k 69 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\t\t\t}\n\tglobal proc b06 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp06;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp06;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp07 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p -2 0 0 -p 1 0 1 -p 1 0 -1 -p -2 0 0 -p 1 1 0 -p 1 0 0 -p 1 -1 0 -p -2 0 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b07 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp07;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp07;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp08 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p 0.934487 1.275837 2.01658e-008 -p 0.932697 1.247176 -0.35686 -p 0.920752 1.172835 -0.686003 -p 0.891476 1.068829 -0.978435 -p 0.840076 0.946678 -1.231929 -p 0.763591 0.814991 -1.445766 -p 0.661715 0.681111 -1.621424 -p 0.537155 0.551427 -1.765671 -p 0.387617 0.433133 -1.880322 -p 0.209586 0.33878 -1.961541 -p 0 0.297363 -1.993747 -p -0.209586 0.33878 -1.961541 -p -0.387617 0.433133 -1.880322 -p -0.537155 0.551427 -1.765671 -p -0.661715 0.681111 -1.621424 -p -0.763591 0.814991 -1.445766 -p -0.840076 0.946678 -1.231929 -p -0.891476 1.068829 -0.978435 -p -0.920752 1.172835 -0.686003 -p -0.932697 1.247176 -0.35686 -p -0.934487 1.275837 2.01658e-008 -p -0.917572 1.470617 0 -p -0.856971 1.657129 0 -p -0.758916 1.826965 0 -p -0.627692 1.972704 0 -p -0.469036 2.087974 0 -p -0.28988 2.167739 0 -p -0.0980551 2.208513 0 -p 0.0980551 2.208513 0 -p 0.28988 2.167739 0 -p 0.469036 2.087974 0 -p 0.627692 1.972704 0 -p 0.758916 1.826965 0 -p 0.856971 1.657129 0 -p 0.917572 1.470617 0 -p 0.934487 1.275837 2.01658e-008 -p 0.932697 1.247176 0.35686 -p 0.920752 1.172834 0.686003 -p 0.891476 1.06883 0.978435 -p 0.840076 0.946678 1.23193 -p 0.763591 0.814992 1.445765 -p 0.661715 0.68111 1.621426 -p 0.537155 0.55143 1.765669 -p 0.387617 0.433127 1.880326 -p 0.209586 0.338788 1.961536 -p 0 0.297318 1.993775 -p -0.209586 0.338788 1.961536 -p -0.387617 0.433127 1.880326 -p -0.537155 0.55143 1.765669 -p -0.661715 0.68111 1.621426 -p -0.763591 0.814992 1.445765 -p -0.840076 0.946678 1.23193 -p -0.891476 1.06883 0.978435 -p -0.920752 1.172834 0.686003 -p -0.932697 1.247176 0.35686 -p -0.934487 1.275837 2.01658e-008 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 48 -k 49 -k 50 -k 51 -k 52 -k 53 -k 54 -k 55 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b08 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp08;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp08;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp09 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p -5 0 0 -p -3 0 -2 -p -3 0 -1 -p 3 0 -1 -p 3 0 -2 -p 5 0 0 -p 3 0 2 -p 3 0 1 -p -3 0 1 -p -3 0 2 -p -5 0 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b09 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp09;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp09;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp10 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p -1.34734 1.079737 0 -p -1.44224 1.524319 0 -p -1.664328 2.405765 0 -p -1.950005 3.338975 0 -p -2.026185 3.76749 0 -p -2.00714 4.157914 0 -p -1.911915 4.481681 0 -p -1.711941 4.719745 0 -p -1.454742 4.823697 0 -p -1.178678 4.748313 0 -p -0.978704 4.605474 0 -p -0.762282 4.305811 0 -p -0.625918 3.874188 0 -p -0.582821 3.418809 0 -p -0.537404 2.504382 0 -p -0.497941 2.074195 0 -p -0.435919 1.853457 0 -p -0.27968 1.671979 0 -p -0.112152 1.748709 0 -p 0.0181145 1.93818 0 -p 0.0631399 2.393048 0 -p 0.0309841 3.299414 0 -p 0.00884164 4.206964 0 -p 0.118751 4.647229 0 -p 0.259227 4.910196 0 -p 0.516336 5.11017 0 -p 0.783868 5.183232 0 -p 0.982941 5.11017 0 -p 1.161548 4.946641 0 -p 1.268618 4.757835 0 -p 1.339346 4.534125 0 -p 1.366566 4.080178 0 -p 1.18691 3.188703 0 -p 0.962236 2.303209 0 -p 0.871335 1.872813 0 -p 0.887716 1.643961 0 -p 0.972904 1.454826 0 -p 1.173392 1.520168 0 -p 1.333545 1.689809 0 -p 1.703036 2.510079 0 -p 1.804024 2.951195 0 -p 1.993722 3.363069 0 -p 2.163738 3.596084 0 -p 2.439892 3.719877 0 -p 2.746698 3.70583 0 -p 2.887452 3.538949 0 -p 2.961806 3.310347 0 -p 2.923079 2.868041 0 -p 2.734645 2.450959 0 -p 2.319855 1.644199 0 -p 2.098659 0.763906 0 -p 1.924326 -0.588646 0 -p 1.675939 -1.460628 0 -p 1.433159 -1.843999 0 -p 1.10277 -2.155313 0 -p 0.711811 -2.38603 0 -p 0.281957 -2.532393 0 -p -0.168824 -2.585124 0 -p -0.618393 -2.524033 0 -p -1.03629 -2.347311 0 -p -1.40311 -2.079606 0 -p -1.992964 -1.390367 0 -p -2.408387 -0.583148 0 -p -2.561783 -0.156678 0 -p -2.789956 0.234865 0 -p -3.166494 0.485898 0 -p -3.566608 0.701746 0 -p -3.872971 1.032209 0 -p -3.987831 1.272581 0 -p -4.025921 1.539213 0 -p -3.968786 1.748709 0 -p -3.806902 1.958205 0 -p -3.521226 2.043908 0 -p -3.273639 2.034385 0 -p -3.023745 1.975496 0 -p -2.644437 1.72963 0 -p -2.324835 1.399893 0 -p -2.049032 1.049876 0 -p -1.873824 0.844066 0 -p -1.689234 0.796519 0 -p -1.473877 0.901202 0 -p -1.34734 1.079737 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 48 -k 49 -k 50 -k 51 -k 52 -k 53 -k 54 -k 55 -k 56 -k 57 -k 58 -k 59 -k 60 -k 61 -k 62 -k 63 -k 64 -k 65 -k 66 -k 67 -k 68 -k 69 -k 70 -k 71 -k 72 -k 73 -k 74 -k 75 -k 76 -k 77 -k 78 -k 79 -k 80 -k 81 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b10 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp10;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp10;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp11 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p 0.365446 0 -1.737246 -p 0 0 -1.979341 -p -0.365446 0 -1.737246 -p 0 0 -3.272918 -p 0.365446 0 -1.737246 -p 0 0 -1.979341 -p 0 0.365446 -1.737246 -p 0 0 -3.272918 -p 0 -0.365446 -1.737246 -p 0 0 -1.979341 -p 0 0 0 -p 0 0 1.979341 -p -0.365446 0 1.737246 -p 0 0 3.272918 -p 0.365446 0 1.737246 -p 0 0 1.979341 -p 0 -0.365446 1.737246 -p 0 0 3.272918 -p 0 0.365446 1.737246 -p 0 0 1.979341 -p 0 0 0 -p 1.979341 0 0 -p 1.737246 0 0.365446 -p 3.272918 0 0 -p 1.737246 0 -0.365446 -p 1.979341 0 0 -p 1.737246 0.365446 0 -p 3.272918 0 0 -p 1.737246 -0.365446 0 -p 1.979341 0 0 -p 0 0 0 -p -1.979341 0 0 -p -1.737246 0 0.365446 -p -3.272918 0 0 -p -1.737246 0 -0.365446 -p -1.979341 0 0 -p -1.737246 0.365446 0 -p -3.272918 0 0 -p -1.737246 -0.365446 0 -p -1.979341 0 0 -p 0 0 0 -p 0 1.979341 0 -p -0.365446 1.737246 0 -p 0 3.272918 0 -p 0.365446 1.737246 0 -p 0 1.979341 0 -p 0 1.737246 0.365446 -p 0 3.272918 0 -p 0 1.737246 -0.365446 -p 0 1.979341 0 -p 0 0 0 -p 0 -1.979341 0 -p -0.365446 -1.737246 0 -p 0 -3.272918 0 -p 0.365446 -1.737246 0 -p 0 -1.979341 0 -p 0 -1.737246 -0.365446 -p 0 -3.272918 0 -p 0 -1.737246 0.365446 -p 0 -1.979341 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 48 -k 49 -k 50 -k 51 -k 52 -k 53 -k 54 -k 55 -k 56 -k 57 -k 58 -k 59 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\t\t\t}\n\tglobal proc b11 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp11;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp11;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp12 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p 0 1 0 -p 0 0.92388 0.382683 -p 0 0.707107 0.707107 -p 0 0.382683 0.92388 -p 0 0 1 -p 0 -0.382683 0.92388 -p 0 -0.707107 0.707107 -p 0 -0.92388 0.382683 -p 0 -1 0 -p 0 -0.92388 -0.382683 -p 0 -0.707107 -0.707107 -p 0 -0.382683 -0.92388 -p 0 0 -1 -p 0 0.382683 -0.92388 -p 0 0.707107 -0.707107 -p 0 0.92388 -0.382683 -p 0 1 0 -p 0.382683 0.92388 0 -p 0.707107 0.707107 0 -p 0.92388 0.382683 0 -p 1 0 0 -p 0.92388 -0.382683 0 -p 0.707107 -0.707107 0 -p 0.382683 -0.92388 0 -p 0 -1 0 -p -0.382683 -0.92388 0 -p -0.707107 -0.707107 0 -p -0.92388 -0.382683 0 -p -1 0 0 -p -0.92388 0.382683 0 -p -0.707107 0.707107 0 -p -0.382683 0.92388 0 -p 0 1 0 -p 0 0.92388 -0.382683 -p 0 0.707107 -0.707107 -p 0 0.382683 -0.92388 -p 0 0 -1 -p -0.382683 0 -0.92388 -p -0.707107 0 -0.707107 -p -0.92388 0 -0.382683 -p -1 0 0 -p -0.92388 0 0.382683 -p -0.707107 0 0.707107 -p -0.382683 0 0.92388 -p 0 0 1 -p 0.382683 0 0.92388 -p 0.707107 0 0.707107 -p 0.92388 0 0.382683 -p 1 0 0 -p 0.92388 0 -0.382683 -p 0.707107 0 -0.707107 -p 0.382683 0 -0.92388 -p 0 0 -1 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 48 -k 49 -k 50 -k 51 -k 52 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\t\t\t}\n\tglobal proc b12 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp12;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp12;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp13 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p -5 0 0 -p -3 0 -2 -p -3 0 -1 -p -1 0 -1 -p -1 0 -3 -p -2 0 -3 -p 0 0 -5 -p 2 0 -3 -p 1 0 -3 -p 1 0 -1 -p 3 0 -1 -p 3 0 -2 -p 5 0 0 -p 3 0 2 -p 3 0 1 -p 1 0 1 -p 1 0 3 -p 2 0 3 -p 0 0 5 -p -2 0 3 -p -1 0 3 -p -1 0 1 -p -3 0 1 -p -3 0 2 -p -5 0 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b13 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp13;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp13;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp14 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p -6.283766 0 9.1204e-010 -p -6.203579 0 -0.982165 -p -5.969952 0 -1.939507 -p -5.592832 0 -2.849955 -p -5.081088 0 -3.692098 -p -4.443293 0 -4.443293 -p -3.692098 0 -5.081088 -p -2.849955 0 -5.592832 -p -1.939507 0 -5.969952 -p -0.982165 0 -6.20358 -p 0 0 -6.283764 -p 0 0.982162 -6.20358 -p 0 1.939508 -5.969952 -p 0 2.849954 -5.592832 -p 0 3.692098 -5.081088 -p 0 4.443293 -4.443293 -p 0 5.081089 -3.692098 -p 0 5.592832 -2.849955 -p 0 5.969952 -1.939507 -p 0 6.203579 -0.982165 -p 0 6.283766 0 -p 0 6.203579 0.982165 -p 0 5.969952 1.939507 -p 0 5.592832 2.849955 -p 0 5.081089 3.692098 -p 0 4.443293 4.443293 -p 0 3.692098 5.081088 -p 0 2.849954 5.592832 -p 0 1.939508 5.969952 -p 0 0.982162 6.20358 -p 0 0 6.283766 -p -0.982165 0 6.203579 -p -1.939507 0 5.969952 -p -2.849955 0 5.592832 -p -3.692098 0 5.081088 -p -4.443293 0 4.443293 -p -5.081088 0 3.692098 -p -5.592832 0 2.849955 -p -5.969952 0 1.939507 -p -6.203579 0 0.982165 -p -6.283766 0 9.1204e-010 -p -6.20358 0.982162 0 -p -5.969952 1.939508 0 -p -5.592832 2.849954 0 -p -5.081088 3.692098 0 -p -4.443293 4.443293 0 -p -3.692098 5.081089 0 -p -2.849955 5.592832 0 -p -1.939507 5.969952 0 -p -0.982165 6.203579 0 -p 0 6.283766 0 -p 0.982165 6.203579 0 -p 1.939507 5.969952 0 -p 2.849955 5.592832 0 -p 3.692098 5.081089 0 -p 4.443293 4.443293 0 -p 5.081088 3.692098 0 -p 5.592832 2.849954 0 -p 5.969952 1.939508 0 -p 6.20358 0.982162 0 -p 6.283766 0 9.12045e-010 -p 6.203579 0 0.982165 -p 5.969952 0 1.939507 -p 5.592832 0 2.849955 -p 5.081088 0 3.692098 -p 4.443293 0 4.443293 -p 3.692098 0 5.081088 -p 2.849955 0 5.592832 -p 1.939507 0 5.969952 -p 0.982165 0 6.203579 -p 0 0 6.283766 -p 0.982165 0 6.203579 -p 1.939507 0 5.969952 -p 2.849955 0 5.592832 -p 3.692098 0 5.081088 -p 4.443293 0 4.443293 -p 5.081088 0 3.692098 -p 5.592832 0 2.849955 -p 5.969952 0 1.939507 -p 6.203579 0 0.982165 -p 6.283766 0 9.12045e-010 -p 6.203579 0 -0.982165 -p 5.969952 0 -1.939507 -p 5.592832 0 -2.849955 -p 5.081088 0 -3.692098 -p 4.443293 0 -4.443293 -p 3.692098 0 -5.081088 -p 2.849955 0 -5.592832 -p 1.939507 0 -5.969952 -p 0.982165 0 -6.20358 -p 0 0 -6.283764 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 48 -k 49 -k 50 -k 51 -k 52 -k 53 -k 54 -k 55 -k 56 -k 57 -k 58 -k 59 -k 60 -k 61 -k 62 -k 63 -k 64 -k 65 -k 66 -k 67 -k 68 -k 69 -k 70 -k 71 -k 72 -k 73 -k 74 -k 75 -k 76 -k 77 -k 78 -k 79 -k 80 -k 81 -k 82 -k 83 -k 84 -k 85 -k 86 -k 87 -k 88 -k 89 -k 90 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b14 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp14;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp14;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\n\tglobal proc shp15 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p 0 1.195249 0.555115 -p 0 1.180393 0.832049 -p 0 1.133567 1.105407 -p 0 1.048732 1.369346 -p 0 0.917923 1.613767 -p 0 0.738447 1.825003 -p 0 0.520555 1.996316 -p 0 0.271934 2.118642 -p -1.67422e-006 0 2.182925 -p -0.13416 0 2.16342 -p -0.266779 0 2.095529 -p -0.395472 0 1.99807 -p -0.518993 0 1.858632 -p -0.636496 0 1.679268 -p -0.737632 0 1.452024 -p -0.819474 0 1.166445 -p -0.846144 0 0.821387 -p -0.824602 0 0.556128 -p -0.749206 0 0.167213 -p -0.673656 0 -0.127237 -p -0.597808 0 -0.419587 -p -0.545054 0 -0.746104 -p -0.544891 0 -1.097217 -p -0.571904 0 -1.448294 -p -0.512279 0 -1.753435 -p -0.393271 0 -1.92306 -p -0.266839 0 -2.035747 -p -0.133965 0 -2.097731 -p 0 0 -2.120128 -p 0.133965 0 -2.097731 -p 0.266839 0 -2.035747 -p 0.393271 0 -1.92306 -p 0.512279 0 -1.753435 -p 0.571904 0 -1.448294 -p 0.544891 0 -1.097217 -p 0.545054 0 -0.746104 -p 0.597807 0 -0.419586 -p 0.673656 0 -0.127237 -p 0.749207 0 0.167214 -p 0.824602 0 0.556128 -p 0.793719 0.309015 0.555115 -p 0.711605 0.597122 0.555115 -p 0.58157 0.845165 0.555115 -p 0.410881 1.034146 0.555115 -p 0.212644 1.153473 0.555115 -p 0 1.195249 0.555115 -p -0.212644 1.153473 0.555115 -p -0.410881 1.034146 0.555115 -p -0.58157 0.845165 0.555115 -p -0.711605 0.597122 0.555115 -p -0.793719 0.309015 0.555115 -p -0.822457 0 0.555115 -p -0.846144 0 0.821387 -p -0.819474 0 1.166445 -p -0.737632 0 1.452024 -p -0.636496 0 1.679268 -p -0.518993 0 1.858632 -p -0.395472 0 1.99807 -p -0.266779 0 2.095529 -p -0.13416 0 2.16342 -p -1.67422e-006 0 2.182925 -p 0.134293 0 2.163449 -p 0.266596 0 2.09545 -p 0.395504 0 1.9981 -p 0.519008 0 1.858641 -p 0.636486 0 1.679267 -p 0.737631 0 1.452029 -p 0.819474 0 1.166447 -p 0.846144 0 0.82139 -p 0.824602 0 0.556128 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 48 -k 49 -k 50 -k 51 -k 52 -k 53 -k 54 -k 55 -k 56 -k 57 -k 58 -k 59 -k 60 -k 61 -k 62 -k 63 -k 64 -k 65 -k 66 -k 67 -k 68 -k 69 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b15 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp15;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp15;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp16 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p -2.513058 -0.000789387 0 -p -2.465186 0.0739742 0 -p -2.152997 0.192227 0 -p -1.82693 0.391554 0 -p -1.507944 0.627928 0 -p -1.184955 0.849308 0 -p -0.832559 1.021739 0 -p -0.449719 1.138051 0 -p 0 1.191496 0 -p 0.247442 1.154017 0 -p 0.47812 1.058465 0 -p 0.676741 0.90715 0 -p 0.828056 0.70853 0 -p 0.923606 0.477852 0 -p 0.957056 0.230409 0 -p 0.923606 -0.0170326 0 -p 0.828056 -0.247711 0 -p 0.676741 -0.446331 0 -p 0.47812 -0.597647 0 -p 0.247442 -0.693197 0 -p 0 -0.726646 0 -p -0.247442 -0.693197 0 -p -0.47812 -0.597647 0 -p -0.676741 -0.446331 0 -p -0.828056 -0.247711 0 -p -0.923606 -0.0170326 0 -p -0.957056 0.230409 0 -p -0.923606 0.477852 0 -p -0.828056 0.70853 0 -p -0.676741 0.90715 0 -p -0.47812 1.058465 0 -p -0.247442 1.154017 0 -p 0 1.191496 0 -p 0.452245 1.134262 0 -p 0.845189 1.004057 0 -p 1.195059 0.840467 0 -p 1.491525 0.656977 0 -p 1.77641 0.45723 0 -p 2.093635 0.264219 0 -p 2.452556 0.0891304 0 -p 2.511637 0.000631505 0 -p 2.458871 -0.0840784 0 -p 2.123947 -0.242747 0 -p 1.802933 -0.447126 0 -p 1.496577 -0.655714 0 -p 1.195059 -0.840467 0 -p 0.845189 -1.004057 0 -p 0.452245 -1.134263 0 -p 0 -1.191489 0 -p -0.452245 -1.134263 0 -p -0.845189 -1.004057 0 -p -1.200111 -0.834152 0 -p -1.520575 -0.622876 0 -p -1.821878 -0.40671 0 -p -2.122684 -0.220013 0 -p -2.457608 -0.0802893 0 -p -2.513058 -0.000789387 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 48 -k 49 -k 50 -k 51 -k 52 -k 53 -k 54 -k 55 -k 56 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b16 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp16;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp16;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp17 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p 0 8.70951 -8.113749 -p 1.637134 8.441733 -6.501093 -p 3.274268 7.878044 -4.966615 -p 4.911403 7.038203 -3.564106 -p 3.274268 7.038203 -3.564106 -p 1.637134 7.038203 -3.564106 -p 1.637134 5.951649 -2.342727 -p 1.637134 4.65647 -1.345292 -p 1.637134 3.198066 -0.606765 -p 1.627559 1.637134 -0.153032 -p 3.198066 1.637134 -0.606765 -p 4.65647 1.637134 -1.345292 -p 5.951649 1.637134 -2.342727 -p 7.038203 1.637134 -3.564106 -p 7.038203 3.274268 -3.564106 -p 7.038203 4.911403 -3.564106 -p 7.878044 3.274268 -4.966615 -p 8.441733 1.637134 -6.501093 -p 8.70951 0 -8.113749 -p 8.441733 -1.637134 -6.501093 -p 7.878044 -3.274268 -4.966615 -p 7.038203 -4.911403 -3.564106 -p 7.038203 -3.274268 -3.564106 -p 7.038203 -1.637134 -3.564106 -p 5.951649 -1.637134 -2.342727 -p 4.65647 -1.637134 -1.345292 -p 3.198066 -1.637134 -0.606765 -p 1.627559 -1.637134 -0.153032 -p 1.637134 -3.198066 -0.606765 -p 1.637134 -4.65647 -1.345292 -p 1.637134 -5.951649 -2.342727 -p 1.637134 -7.038203 -3.564106 -p 3.274268 -7.038203 -3.564106 -p 4.911403 -7.038203 -3.564106 -p 3.274268 -7.878044 -4.966615 -p 1.637134 -8.441733 -6.501093 -p 0 -8.70951 -8.113749 -p -1.637134 -8.441733 -6.501093 -p -3.274268 -7.878044 -4.966615 -p -4.911403 -7.038203 -3.564106 -p -3.274268 -7.038203 -3.564106 -p -1.637134 -7.038203 -3.564106 -p -1.637134 -5.951649 -2.342727 -p -1.637134 -4.65647 -1.345292 -p -1.637134 -3.198066 -0.606765 -p -1.627559 -1.637134 -0.153032 -p -3.198066 -1.637134 -0.606765 -p -4.65647 -1.637134 -1.345292 -p -5.951649 -1.637134 -2.342727 -p -7.038203 -1.637134 -3.564106 -p -7.038203 -3.274268 -3.564106 -p -7.038203 -4.911403 -3.564106 -p -7.878044 -3.274268 -4.966615 -p -8.441733 -1.637134 -6.501093 -p -8.70951 0 -8.113749 -p -8.441733 1.637134 -6.501093 -p -7.878044 3.274268 -4.966615 -p -7.038203 4.911403 -3.564106 -p -7.038203 3.274268 -3.564106 -p -7.038203 1.637134 -3.564106 -p -5.951649 1.637134 -2.342727 -p -4.65647 1.637134 -1.345292 -p -3.198066 1.637134 -0.606765 -p -1.637134 1.627559 -0.153032 -p -1.637134 3.198066 -0.606765 -p -1.637134 4.65647 -1.345292 -p -1.637134 5.951649 -2.342727 -p -1.637134 7.038203 -3.564106 -p -3.274268 7.038203 -3.564106 -p -4.911403 7.038203 -3.564106 -p -3.274268 7.878044 -4.966615 -p -1.637134 8.441733 -6.501093 -p 0 8.70951 -8.113749 -k 0 -k 2.313563 -k 4.627126 -k 6.940689 -k 8.577823 -k 10.214958 -k 11.849695 -k 13.484432 -k 15.119169 -k 16.744737 -k 18.379474 -k 20.014211 -k 21.648949 -k 23.283686 -k 24.92082 -k 26.557954 -k 28.871517 -k 31.18508 -k 33.498643 -k 35.812206 -k 38.12577 -k 40.439333 -k 42.076467 -k 43.713601 -k 45.348338 -k 46.983075 -k 48.617812 -k 50.25255 -k 51.878118 -k 53.512855 -k 55.147592 -k 56.782329 -k 58.419463 -k 60.056598 -k 62.370161 -k 64.683724 -k 66.997287 -k 69.31085 -k 71.624413 -k 73.937976 -k 75.57511 -k 77.212244 -k 78.846982 -k 80.481719 -k 82.116456 -k 83.742024 -k 85.376761 -k 87.011498 -k 88.646235 -k 90.280972 -k 91.918107 -k 93.555241 -k 95.868804 -k 98.182367 -k 100.49593 -k 102.809493 -k 105.123056 -k 107.436619 -k 109.073754 -k 110.710888 -k 112.345625 -k 113.980362 -k 115.615099 -k 117.240667 -k 118.875404 -k 120.510142 -k 122.144879 -k 123.779616 -k 125.41675 -k 127.053884 -k 129.367447 -k 131.68101 -k 133.994574 ;\n\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b17 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp17;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp17;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp18 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p 0 0 0 -p -9.99923 0 -2.2236e-005 -p -9.22886 0 3.822731 -p -7.070523 0 7.070516 -p -3.822719 0 9.228864 -p 0 0 9.999226 -p 0 0 0 -p 0 0 9.999226 -p 3.822719 0 9.228864 -p 7.070523 0 7.070516 -p 9.22886 0 3.822731 -p 9.99923 0 -2.2236e-005 -p 0 0 0 -p 9.99923 0 -2.2236e-005 -p 9.22886 0 -3.822678 -p 7.070523 0 -7.070596 -p 3.822719 0 -9.228749 -p 0 0 -10 -p 0 0 0 -p 0 0 -10 -p -3.822719 0 -9.228749 -p -7.070523 0 -7.070596 -p -9.22886 0 -3.822678 -p -9.99923 0 -2.2236e-005 -p 0 0 0 -p 0 20 0 -p 0 20 4 -p 0 28 0 -p 0 20 -4 -p 0 20 0 -p 4 20 0 -p 0 28 0 -p -4 20 0 -p 0 20 4 -p 4 20 0 -p 0 20 -4 -p -4 20 0 -p 0 20 0 -k 0 -k 9.99923 -k 13.898834 -k 17.798388 -k 21.697965 -k 25.597534 -k 35.59676 -k 45.595986 -k 49.495555 -k 53.395131 -k 57.294686 -k 61.19429 -k 71.19352 -k 81.192749 -k 85.092258 -k 88.991923 -k 92.891392 -k 96.791136 -k 106.791136 -k 116.791136 -k 120.690881 -k 124.59035 -k 128.490015 -k 132.389524 -k 142.388753 -k 162.388753 -k 166.388753 -k 175.333025 -k 184.277297 -k 188.277297 -k 192.277297 -k 201.221569 -k 210.165841 -k 215.822695 -k 221.479549 -k 227.136403 -k 232.793258 -k 236.793258 ;\n\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b18 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp18;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp18;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp19 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p -0.501812 -8.720681 0 -p 0.545838 -8.720681 0 -p 0.545838 -7.387514 0 -p 2.260467 -7.387514 0 -p 2.260467 -5.716921 0 -p 0.545838 -5.716921 0 -p 0.545838 -5.565796 0 -p 2.260467 -5.565796 0 -p 2.260467 -3.895204 0 -p 0.545838 -3.895204 0 -p 0.537417 4.927337 0 -p 1.592993 5.037761 0 -p 2.352876 5.285438 0 -p 2.963694 5.794448 0 -p 3.277409 6.527621 0 -p 3.358018 7.32238 0 -p 3.277409 8.117117 0 -p 2.963694 8.850319 0 -p 2.352876 9.359281 0 -p 1.592993 9.607047 0 -p 0.800517 9.71732 0 -p 0 9.745124 0 -p 0 8.812327 0 -p 0.570106 8.795228 0 -p 1.134486 8.727412 0 -p 1.675653 8.57504 0 -p 2.110661 8.262036 0 -p 2.33408 7.811128 0 -p 2.391488 7.322378 0 -p 2.33408 6.833614 0 -p 2.110661 6.382724 0 -p 1.675653 6.069691 0 -p 1.134486 5.917373 0 -p 0.570106 5.849464 0 -p 0 5.832846 0 -p -0.570106 5.849464 0 -p -1.134486 5.917373 0 -p -1.675653 6.069691 0 -p -2.110661 6.382724 0 -p -2.33408 6.833614 0 -p -2.391488 7.322378 0 -p -2.33408 7.811128 0 -p -2.110661 8.262036 0 -p -1.675653 8.57504 0 -p -1.134486 8.727412 0 -p -0.570106 8.795228 0 -p 0 8.812327 0 -p 0 9.745124 0 -p -0.800517 9.71732 0 -p -1.592993 9.607047 0 -p -2.352876 9.359281 0 -p -2.963694 8.850319 0 -p -3.277409 8.117117 0 -p -3.358018 7.32238 0 -p -3.277409 6.527621 0 -p -2.963694 5.794448 0 -p -2.352876 5.285438 0 -p -1.592993 5.037761 0 -p -0.49919 4.927337 0 -p -0.501812 -8.720681 0 -k 0 -k 1.04765 -k 2.380817 -k 4.095446 -k 5.766038 -k 7.480667 -k 7.631793 -k 9.346421 -k 11.017014 -k 12.731643 -k 21.554187 -k 22.615522 -k 23.41475 -k 24.209854 -k 25.007325 -k 25.806161 -k 26.604975 -k 27.402473 -k 28.197547 -k 28.996802 -k 29.796914 -k 30.597913 -k 31.53071 -k 32.101072 -k 32.669511 -k 33.231721 -k 33.767635 -k 34.270858 -k 34.762969 -k 35.255093 -k 35.7583 -k 36.294231 -k 36.856426 -k 37.424877 -k 37.995225 -k 38.565573 -k 39.134023 -k 39.696218 -k 40.232149 -k 40.735357 -k 41.22748 -k 41.719591 -k 42.222815 -k 42.758728 -k 43.320938 -k 43.889377 -k 44.45974 -k 45.392536 -k 46.193535 -k 46.993647 -k 47.792903 -k 48.587976 -k 49.385474 -k 50.184288 -k 50.983124 -k 51.780595 -k 52.575699 -k 53.374927 -k 54.474289 -k 68.122307 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\n\t\t\t}\n\tglobal proc b19 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp19;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp19;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp20 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p 0 24 0 -p -4 24 0 -p 0 32 0 -p 4 24 0 -p 0 24 0 -p 0 4 0 -p 1.034188 3.860232 0 -p 1.998312 3.460872 0 -p 2.828448 2.82845 0 -p 3.460875 1.998311 0 -p 3.860228 1.034189 0 -p 4.00003 -2.3063e-007 0 -p 3.860228 -1.034188 0 -p 3.460875 -1.998312 0 -p 2.828448 -2.828448 0 -p 1.998312 -3.460875 0 -p 1.034188 -3.860228 0 -p 0 -4.00003 0 -p -1.034188 -3.860228 0 -p -1.998312 -3.460875 0 -p -2.828448 -2.828448 0 -p -3.460875 -1.998312 0 -p -3.860228 -1.034188 0 -p -4.00003 -2.3063e-007 0 -p -3.860228 1.034189 0 -p -3.460875 1.998311 0 -p -2.828448 2.82845 0 -p -1.998312 3.460872 0 -p -1.034188 3.860232 0 -p 0 4 0 -k 0 -k 4 -k 12.944272 -k 21.888544 -k 25.888544 -k 45.888544 -k 46.932134 -k 47.975696 -k 49.019289 -k 50.062886 -k 51.106444 -k 52.150039 -k 53.193634 -k 54.237194 -k 55.280789 -k 56.324384 -k 57.367943 -k 58.411538 -k 59.455133 -k 60.498693 -k 61.542288 -k 62.585882 -k 63.629442 -k 64.673037 -k 65.716632 -k 66.760191 -k 67.803787 -k 68.84738 -k 69.890942 -k 70.934532 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b20 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp20;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp20;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\n\tglobal proc shp21 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p 0 10.112068 0 -p -0.373493 10.162557 0 -p -0.721682 10.306782 0 -p -1.021482 10.53518 0 -p -1.24988 10.83498 0 -p -1.394105 11.183169 0 -p -1.444594 11.556662 0 -p -1.394105 11.930155 0 -p -1.24988 12.278343 0 -p -1.021482 12.578144 0 -p -0.721682 12.806541 0 -p -0.373493 12.950768 0 -p 0 13.001244 0 -p 0.373493 12.950768 0 -p 0.721682 12.806541 0 -p 1.021482 12.578144 0 -p 1.24988 12.278343 0 -p 1.394105 11.930155 0 -p 1.444594 11.556662 0 -p 1.394105 11.183169 0 -p 1.24988 10.83498 0 -p 1.021482 10.53518 0 -p 0.721682 10.306782 0 -p 0.373493 10.162557 0 -p 0 10.112068 0 -p 0 0 0 -k 0 -k 0.37689 -k 0.753767 -k 1.130657 -k 1.507546 -k 1.884423 -k 2.261313 -k 2.638203 -k 3.01508 -k 3.39197 -k 3.768859 -k 4.145737 -k 4.522625 -k 4.899513 -k 5.276391 -k 5.65328 -k 6.030171 -k 6.407047 -k 6.783937 -k 7.160827 -k 7.537704 -k 7.914594 -k 8.291484 -k 8.668361 -k 9.045251 -k 19.157319 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b21 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp21;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp21;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\n\tglobal proc shp22 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p 0 11.09967 0 -p -0.374605 10.136967 0 -p -0.217575 11.158284 0 -p -1.024621 10.510461 0 -p -0.376794 11.317503 0 -p -1.398115 11.160478 0 -p -0.435408 11.535078 0 -p -1.398115 11.909687 0 -p -0.376794 11.752654 0 -p -1.024621 12.559704 0 -p -0.217575 11.911872 0 -p -0.374605 12.9332 0 -p 0 11.970484 0 -p 0.374605 12.9332 0 -p 0.217575 11.911872 0 -p 1.024621 12.559704 0 -p 0.376794 11.752654 0 -p 1.398115 11.909687 0 -p 0.435408 11.535078 0 -p 1.398115 11.160478 0 -p 0.376794 11.317503 0 -p 1.024621 10.510461 0 -p 0.217575 11.158284 0 -p 0.374605 10.136967 0 -p 0 11.09967 0 -p 0 0 0 -k 0 -k 1.033018 -k 2.066337 -k 3.101227 -k 4.136117 -k 5.169438 -k 6.202459 -k 7.235482 -k 8.268805 -k 9.303701 -k 10.338596 -k 11.371925 -k 12.404955 -k 13.437986 -k 14.471315 -k 15.50621 -k 16.541106 -k 17.574429 -k 18.607452 -k 19.640472 -k 20.673794 -k 21.708684 -k 22.743574 -k 23.776892 -k 24.809911 -k 35.909581 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b22 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp22;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp22;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp23 ()\n\t\t\t{\n\t\t\tcurve -d 1 -p -1.6 -6.4 0 -p -1.6 -1.6 0 -p -6.4 -1.6 0 -p -6.4 1.6 0 -p -1.6 1.6 0 -p -1.6 6.4 0 -p 1.6 6.4 0 -p 1.6 1.6 0 -p 6.4 1.6 0 -p 6.4 -1.6 0 -p 1.6 -1.6 0 -p 1.6 -6.4 0 -p -1.6 -6.4 0 -k 0 -k 4.8 -k 9.6 -k 12.8 -k 17.6 -k 22.4 -k 25.6 -k 30.4 -k 35.2 -k 38.4 -k 43.2 -k 48 -k 51.2 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b23 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp23;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp23;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp24 ()\n\t\t\t{\n\t\tcurve -d 1 -p 2 0 2 -p -2 0 2 -p -2 0 -2 -p 2 0 -2 -p 2 0 2 -p 0 8 0 -p -2 0 2 -p -2 0 -2 -p 0 8 0 -p 2 0 -2 -p 2 0 2 -p 0 8 0 -p -2 0 2 -k 0 -k 4 -k 8 -k 12 -k 16 -k 24.485281 -k 32.970563 -k 36.970563 -k 45.455844 -k 53.941125 -k 57.941125 -k 66.426407 -k 74.911688 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b24 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp24;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp24;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp25 ()\n\t\t\t{\n\t\tcurve -d 1 -p 0.705532 22.577041 1.222018 -p -0.705533 22.577041 1.222018 -p 0 27.750632 0 -p 0.705532 22.577041 1.222018 -p 1.411065 22.577041 0 -p 0 27.750632 0 -p 1.411065 22.577041 0 -p 0.705533 22.577041 -1.222018 -p 0 27.750632 0 -p 0.705533 22.577041 -1.222018 -p -0.705532 22.577041 -1.222019 -p 0 27.750632 0 -p -0.705532 22.577041 -1.222019 -p -1.411065 22.577041 -2.24148e-007 -p 0 27.750632 0 -p -1.411065 22.577041 -2.24148e-007 -p -0.705533 22.577041 1.222018 -p 0 27.750632 0 -p 0 0 0 -p 0 0 27.750632 -p -1.222018 0.705533 22.577041 -p 0 1.411065 22.577041 -p 0 0 27.750632 -p 1.222018 0.705532 22.577041 -p 0 1.411065 22.577041 -p 1.222018 0.705532 22.577041 -p 1.222018 -0.705533 22.577041 -p 0 0 27.750632 -p 1.222018 -0.705533 22.577041 -p -2.24148e-007 -1.411065 22.577041 -p 0 0 27.750632 -p -2.24148e-007 -1.411065 22.577041 -p -1.222019 -0.705532 22.577041 -p 0 0 27.750632 -p -1.222019 -0.705532 22.577041 -p -1.222018 0.705533 22.577041 -p 0 0 27.750632 -p 0 0 5.64426 -p 0 5.64426 5.64426 -p 0 5.64426 0 -p 5.64426 5.64426 0 -p 5.64426 0 0 -p 0 0 0 -p 0 0 5.64426 -p 5.64426 0 5.64426 -p 5.64426 0 0 -p 27.750632 0 0 -p 22.577041 1.411065 0 -p 22.577041 0.705532 -1.222018 -p 27.750632 0 0 -p 22.577041 0.705532 -1.222018 -p 22.577041 -0.705533 -1.222018 -p 27.750632 0 0 -p 22.577041 -1.411065 2.24148e-007 -p 22.577041 -0.705533 -1.222018 -p 22.577041 -1.411065 2.24148e-007 -p 22.577041 -0.705532 1.222019 -p 27.750632 0 0 -p 22.577041 -0.705532 1.222019 -p 22.577041 0.705533 1.222018 -p 22.577041 1.411065 0 -p 27.750632 0 0 -p 22.577041 0.705533 1.222018 -k 0 -k 1.411065 -k 6.773634 -k 12.136203 -k 13.547268 -k 18.909838 -k 24.272407 -k 25.683471 -k 31.046041 -k 36.40861 -k 37.819675 -k 43.182244 -k 48.544813 -k 49.955878 -k 55.318448 -k 60.681017 -k 62.092082 -k 67.454651 -k 95.205283 -k 122.955915 -k 128.318484 -k 129.729549 -k 135.092118 -k 140.454687 -k 141.865752 -k 143.276817 -k 144.687883 -k 150.050452 -k 155.413021 -k 156.824086 -k 162.186655 -k 167.549224 -k 168.96029 -k 174.322859 -k 179.685428 -k 181.096493 -k 186.459062 -k 208.565434 -k 214.209694 -k 219.853955 -k 225.498215 -k 231.142475 -k 236.786735 -k 242.430996 -k 248.075256 -k 253.719516 -k 275.825888 -k 281.188457 -k 282.599522 -k 287.962091 -k 293.32466 -k 294.735726 -k 300.098295 -k 305.460864 -k 306.871929 -k 308.282994 -k 309.69406 -k 315.056629 -k 320.419198 -k 321.830263 -k 323.241328 -k 328.603897 -k 333.966466 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b25 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp25;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp25;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp26 ()\n\t\t\t{\n\t\tcurve -d 1 -p 0 4.525483 4.525483 -p -0.8 4.525483 4.525483 -p 0 6.22254 6.22254 -p 0.8 4.525483 4.525483 -p 0 4.525483 4.525483 -p 0 0 0 -p 3.2 3.2 4.525483 -p 2.634315 3.765685 4.525483 -p 4.4 4.4 6.22254 -p 3.765685 2.634315 4.525483 -p 3.2 3.2 4.525483 -p 0 0 0 -p 4.525483 0 4.525483 -p 4.525483 0.8 4.525483 -p 6.22254 0 6.22254 -p 4.525483 -0.8 4.525483 -p 4.525483 0 4.525483 -p 0 0 0 -p 3.2 -3.2 4.525483 -p 3.765685 -2.634315 4.525483 -p 4.4 -4.4 6.22254 -p 2.634315 -3.765685 4.525483 -p 3.2 -3.2 4.525483 -p 0 0 0 -p 0 -4.525483 4.525483 -p 0.8 -4.525483 4.525483 -p 0 -6.22254 6.22254 -p -0.8 -4.525483 4.525483 -p 0 -4.525483 4.525483 -p 0 0 0 -p -3.2 -3.2 4.525483 -p -2.634315 -3.765685 4.525483 -p -4.4 -4.4 6.22254 -p -3.765685 -2.634315 4.525483 -p -3.2 -3.2 4.525483 -p 0 0 0 -p -4.525483 0 4.525483 -p -4.525483 -0.8 4.525483 -p -6.22254 0 6.22254 -p -4.525483 0.8 4.525483 -p -4.525483 0 4.525483 -p 0 0 0 -p -3.2 3.2 4.525483 -p -3.765685 2.634315 4.525483 -p -4.4 4.4 6.22254 -p -2.634315 3.765685 4.525483 -p -3.2 3.2 4.525483 -p 0 0 0 -p 0 0 12.090965 -p 0 1.511371 12.090965 -p 0 0 16.625077 -p 0 -1.511371 12.090965 -p 0 0 12.090965 -p -1.511371 0 12.090965 -p 0 1.511371 12.090965 -p 1.511371 0 12.090965 -p 0 -1.511371 12.090965 -p -1.511371 0 12.090965 -p 0 0 16.625077 -p 1.511371 0 12.090965 -p 0 0 12.090965 -k 0 -k 0.8 -k 3.329822 -k 5.859644 -k 6.659644 -k 13.059644 -k 19.459644 -k 20.259644 -k 22.789466 -k 25.319289 -k 26.119289 -k 32.519289 -k 38.919289 -k 39.719289 -k 42.249111 -k 44.778933 -k 45.578933 -k 51.978933 -k 58.378933 -k 59.178933 -k 61.708755 -k 64.238577 -k 65.038577 -k 71.438577 -k 77.838577 -k 78.638577 -k 81.168399 -k 83.698221 -k 84.498221 -k 90.898221 -k 97.298221 -k 98.098221 -k 100.628043 -k 103.157866 -k 103.957866 -k 110.357866 -k 116.757866 -k 117.557866 -k 120.087688 -k 122.61751 -k 123.41751 -k 129.81751 -k 136.21751 -k 137.01751 -k 139.547332 -k 142.077154 -k 142.877154 -k 149.277154 -k 161.368119 -k 162.87949 -k 167.658864 -k 172.438237 -k 173.949608 -k 175.460979 -k 177.59838 -k 179.73578 -k 181.873181 -k 184.010582 -k 188.789956 -k 193.56933 -k 195.0807 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b26 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp26;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp26;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\tglobal proc shp27 ()\n\t\t\t{\n\t\tcurve -d 1 -p 0 0 -6 -p 0 0 -8 -p 2.06834 0 -7.720474 -p 3.996656 0 -6.921725 -p 5.656898 0 -5.656901 -p 6.921731 0 -3.996654 -p 7.720465 0 -2.068341 -p 8.000062 0 5.15532e-007 -p 7.720465 0 2.06834 -p 6.921731 0 3.996656 -p 5.656898 0 5.656898 -p 3.996656 0 6.921731 -p 2.06834 0 7.720465 -p 0 0 8.000062 -p -2.06834 0 7.720465 -p -3.996656 0 6.921731 -p -5.656898 0 5.656898 -p -6.921731 0 3.996656 -p -7.720465 0 2.06834 -p -8.000062 0 5.15532e-007 -p -10.117476 0 0 -p -6.959211 0 -6.31653 -p -3.800946 0 0 -p -6.000046 0 3.86931e-007 -p -5.790349 0 1.551256 -p -5.191298 0 2.997491 -p -4.242674 0 4.242673 -p -2.997491 0 5.191298 -p -1.551256 0 5.790349 -p 0 0 6.000046 -p 1.551256 0 5.790349 -p 2.997491 0 5.191298 -p 4.242674 0 4.242673 -p 5.191298 0 2.997491 -p 5.790349 0 1.551256 -p 6.000046 0 3.86931e-007 -p 5.790349 0 -1.551257 -p 5.191298 0 -2.99749 -p 4.242674 0 -4.242676 -p 2.997491 0 -5.191294 -p 1.551256 0 -5.790355 -p 0 0 -6 -k 0 -k 2 -k 4.087143 -k 6.174343 -k 8.261489 -k 10.348646 -k 12.435838 -k 14.522991 -k 16.610143 -k 18.697338 -k 20.78449 -k 22.871642 -k 24.958836 -k 27.045989 -k 29.133141 -k 31.220335 -k 33.307488 -k 35.394639 -k 37.481834 -k 39.568986 -k 41.6864 -k 48.748496 -k 55.810591 -k 58.009692 -k 59.575056 -k 61.140451 -k 62.705816 -k 64.271181 -k 65.836575 -k 67.40194 -k 68.967305 -k 70.532699 -k 72.098064 -k 73.663429 -k 75.228823 -k 76.794188 -k 78.359554 -k 79.924946 -k 81.490314 -k 83.055675 -k 84.621073 -k 86.186431 ;\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\n\t\t\t}\n\tglobal proc b27 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp27;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp27;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\n\t\tset;\n\t\tlockhide;\n\t\t}\n\n\n\n\n\tglobal proc shp28 ()\n\t\t\t{\n\t\tcurve -d 1 -p 6.000046 0 3.86931e-007 -p 5.790349 0 -1.551257 -p 5.191298 0 -2.99749 -p 4.242674 0 -4.242676 -p 2.997491 0 -5.191294 -p 1.551256 0 -5.790355 -p 0 0 -6 -p 0 6 -6 -p 1.551256 6 -5.790355 -p 2.997491 6 -5.191294 -p 4.242674 6 -4.242676 -p 5.191298 6 -2.99749 -p 5.790349 6 -1.551257 -p 6.000046 6 3.86931e-007 -p 6.000046 0 3.86931e-007 -p 5.790349 0 1.551256 -p 5.191298 0 2.997491 -p 4.242674 0 4.242673 -p 2.997491 0 5.191298 -p 1.551256 0 5.790349 -p 0 0 6.000046 -p -1.551256 0 5.790349 -p -2.997491 0 5.191298 -p -4.242674 0 4.242673 -p -5.191298 0 2.997491 -p -5.790349 0 1.551256 -p -6.000046 0 3.86931e-007 -p -6.000046 6 3.86931e-007 -p -5.790349 6 -1.551257 -p -5.191298 6 -2.99749 -p -4.242674 6 -4.242676 -p -2.997491 6 -5.191294 -p -1.551256 6 -5.790355 -p 0 6 -6 -p 0 0 -6 -p -1.551256 0 -5.790355 -p -2.997491 0 -5.191294 -p -4.242674 0 -4.242676 -p -5.191298 0 -2.99749 -p -5.790349 0 -1.551257 -p -6.000046 0 3.86931e-007 -p -6.000046 6 3.86931e-007 -p -5.790349 6 1.551256 -p -5.191298 6 2.997491 -p -4.242674 6 4.242673 -p -2.997491 6 5.191298 -p -1.551256 6 5.790349 -p 0 6 6.000046 -p 0 0 6.000046 -p 0 6 6.000046 -p 1.551256 6 5.790349 -p 2.997491 6 5.191298 -p 4.242674 6 4.242673 -p 5.191298 6 2.997491 -p 5.790349 6 1.551256 -p 6.000046 6 3.86931e-007 -k 0 -k 1.565366 -k 3.130758 -k 4.696126 -k 6.261487 -k 7.826885 -k 9.392244 -k 15.392244 -k 16.957602 -k 18.523 -k 20.088361 -k 21.653729 -k 23.219121 -k 24.784487 -k 30.784487 -k 32.349852 -k 33.915246 -k 35.480611 -k 37.045976 -k 38.61137 -k 40.176735 -k 41.7421 -k 43.307494 -k 44.872859 -k 46.438224 -k 48.003618 -k 49.568983 -k 55.568983 -k 57.134349 -k 58.699741 -k 60.265109 -k 61.83047 -k 63.395868 -k 64.961226 -k 70.961226 -k 72.526584 -k 74.091982 -k 75.657343 -k 77.222712 -k 78.788104 -k 80.35347 -k 86.35347 -k 87.918834 -k 89.484229 -k 91.049594 -k 92.614959 -k 94.180353 -k 95.745718 -k 101.745718 -k 107.745718 -k 109.311083 -k 110.876477 -k 112.441842 -k 114.007207 -k 115.572601 -k 117.137966 ;\n\n\n    $UpNCB = `checkBox -q -v  upNodeCB`;\n    if ($UpNCB == 1)\n\n{\n\n\t\t\tgroup; \n            xform -os -piv 0 0 0;\n}\n\n\t\t\t}\n\tglobal proc b28 ()\n\t\t{\n\n\t\t\tstring $sel_1[] = `ls -sl`;\n\t\t\ttextField -e -text $sel_1 text01;\n\t\t\tstring $text = `textField -q -text text01`;\n\t\t\t\n\t\tif ($text == \"\")\n\n\t\t\t{\n\t\t\tshp28;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\tshp28;\t\t\t\n\t\t\tstring $sel_2[] = `ls -sl`;\n\t\t\tstring $cons [] = `parentConstraint $sel_1 $sel_2`;\n\t\t\tdelete $cons;\n\t\t\t}\n\n\t\tset;\n\t\tlockhide;\n\t\t}\n// get and set color ....................................................................................................................................................................................................\n\tglobal proc  h_off ()\n\t{\n\tstring $panel = `getPanel  -withFocus`;\n\t\tmodelEditor -e -sel 0 -manipulators 0 $panel;\n\t\tset;\n\t}\n\tglobal proc  h_on ()\n\t{\n\tstring $panel = `getPanel  -withFocus`;\n\t\tmodelEditor -e -sel 1 -manipulators 1 $panel;\n\t}\n\n\tglobal proc set ()\n\t\t{\n\t\t$color = `colorIndexSliderGrp -q -value cis01`;\n\t\tstring $sl [] = `ls -sl`;\n\t\tstring $obj ;\n\n\t\tfor ($obj in $sl)\n\t\t{\n\t\tsetAttr ($obj+\".overrideEnabled\") 1;\n\t\tsetAttr ($obj+\".overrideColor\") ($color -1);\n\t\t}\n\n\t\t}\n// Mirror ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n\n\n\nglobal proc mirrorX()\n{\nstring $copy = `checkBox -q -value cb01`;\n\tget;\n\tmirrorunlock;\nif ($copy == 1)\n\t{\n\tduplicate;\n\t}\n\n\tgroup -n \"controllers_mirror_grp\";\n\t\txform -os -piv 0 0 0;\n\n\tscale -1 1 1 ;\n\t\n\t\tungroup controllers_mirror_grp;\n\n//makeIdentity -apply true -t 1 -r 1 -s 1 -n 0;\nlockhide;\n}\n\n\n\nglobal proc mirrorY()\n{\nstring $copy = `checkBox -q -value cb01`;\n\tget;\n\tmirrorunlock;\nif ($copy == 1)\n\t{\n\tduplicate;\n\t}\n\n\tgroup -n \"controllers_mirror_grp\";\n\t\txform -os -piv 0 0 0;\n\n\tscale 1 -1 1 ;\n\t\n\t\tungroup controllers_mirror_grp;\n\n//makeIdentity -apply true -t 1 -r 1 -s 1 -n 0;\nlockhide;\n}\n\nglobal proc mirrorZ()\n{\nstring $copy = `checkBox -q -value cb01`;\n\tget;\n\tmirrorunlock;\nif ($copy == 1)\n\t{\n\tduplicate;\n\t}\n\n\tgroup -n \"controllers_mirror_grp\";\n\t\txform -os -piv 0 0 0;\n\n\tscale 1 1 -1 ;\n\t\n\t\tungroup controllers_mirror_grp;\n\n//makeIdentity -apply true -t 1 -r 1 -s 1 -n 0;\nlockhide;\n}\n\n\nglobal proc mirrorunlock ()\n\n{\nstring $sel[] = `ls -sl`; \nfor ($obj in $sel)\n\nsetAttr -keyable true  -lock false ($obj +\".tx\");\nsetAttr -keyable true  -lock false ($obj +\".ty\");\nsetAttr -keyable true  -lock false ($obj +\".tz\");\n\nsetAttr -keyable true  -lock false ($obj +\".rx\");\nsetAttr -keyable true  -lock false ($obj +\".ry\");\nsetAttr -keyable true  -lock false ($obj +\".rz\");\n\nsetAttr -keyable true  -lock false ($obj +\".sx\");\nsetAttr -keyable true  -lock false ($obj +\".sy\");\nsetAttr -keyable true  -lock false ($obj +\".sz\");\n\n}\n\n\n// lock and hide ..........................................................................................................................................................................................................\n\nglobal proc lockhide ()\n\n{\nstring $tx = `checkBox -q -value tx`;\nstring $ty = `checkBox -q -value ty`;\nstring $tz = `checkBox -q -value tz`;\n\nstring $rx = `checkBox -q -value rx`;\nstring $ry = `checkBox -q -value ry`;\nstring $rz = `checkBox -q -value rz`;\n\nstring $sx = `checkBox -q -value sx`;\nstring $sy = `checkBox -q -value sy`;\nstring $sz = `checkBox -q -value sz`;\n\nstring $v = `checkBox -q  -value v`;\n\nstring $sel [] = `ls -sl`;\nstring $obj;\n\nif ($tx == 1)\n{\n\nfor ($obj in $sel)\n{\nsetAttr -keyable false  -lock true ($obj +\".tx\");\n}\n}\nelse\n{\nfor ($obj in $sel)\n{\nsetAttr -keyable true  -lock false ($obj +\".tx\");\n}\n}\n\nif ($ty == 1)\n{\n\nfor ($obj in $sel)\n{\nsetAttr -keyable false  -lock true ($obj +\".ty\");\n}\n}\nelse\n{\nfor ($obj in $sel)\n{\nsetAttr -keyable true  -lock false ($obj +\".ty\");\n}\n}\n\nif ($tz == 1)\n{\n\nfor ($obj in $sel)\n{\nsetAttr -keyable false  -lock true ($obj +\".tz\");\n}\n}\nelse\n{\nfor ($obj in $sel)\n{\nsetAttr -keyable true  -lock false ($obj +\".tz\");\n}\n}\n\n\nif ($rx == 1)\n{\n\nfor ($obj in $sel)\n{\nsetAttr -keyable false  -lock true ($obj +\".rx\");\n}\n}\nelse\n{\nfor ($obj in $sel)\n{\nsetAttr -keyable true  -lock false ($obj +\".rx\");\n}\n}\n\nif ($ry == 1)\n{\n\nfor ($obj in $sel)\n{\nsetAttr -keyable false  -lock true ($obj +\".ry\");\n}\n}\nelse\n{\nfor ($obj in $sel)\n{\nsetAttr -keyable true  -lock false ($obj +\".ry\");\n}\n}\n\n\nif ($rz == 1)\n{\n\nfor ($obj in $sel)\n{\nsetAttr -keyable false  -lock true ($obj +\".rz\");\n}\n}\nelse\n{\nfor ($obj in $sel)\n{\nsetAttr -keyable true  -lock false ($obj +\".rz\");\n}\n}\n\n\nif ($sx == 1)\n{\n\nfor ($obj in $sel)\n{\nsetAttr -keyable false  -lock true ($obj +\".sx\");\n}\n}\nelse\n{\nfor ($obj in $sel)\n{\nsetAttr -keyable true  -lock false ($obj +\".sx\");\n}\n}\n\n\nif ($sy == 1)\n{\n\nfor ($obj in $sel)\n{\nsetAttr -keyable false  -lock true ($obj +\".sy\");\n}\n}\nelse\n{\nfor ($obj in $sel)\n{\nsetAttr -keyable true  -lock false ($obj +\".sy\");\n}\n}\n\n\nif ($sz == 1)\n{\n\nfor ($obj in $sel)\n{\nsetAttr -keyable false  -lock true ($obj +\".sz\");\n}\n}\nelse\n{\nfor ($obj in $sel)\n{\nsetAttr -keyable true  -lock false ($obj +\".sz\");\n}\n}\n\n\n\nif ($v == 1)\n\n{\nfor ($obj in $sel)\n{\nsetAttr -keyable false  -lock true ($obj +\".v\");\n}\n}\nelse\n{\nfor ($obj in $sel)\n{\nsetAttr -keyable true  -lock false ($obj +\".v\");\n}\nedit_t;\nedit_r;\nedit_s;\n\n}\n\n\n\n\n\n}\n\n\n// ----------------------------------------------------------------------------------------------------------------------------------\n// freeze transformations\n\n\nglobal proc freeze ()\n{\nget;\nstring $selfr [] =`ls  -sl`;\nstring $freeze;\nfor ($freeze in $selfr)\n{\nsetAttr -lock false ($freeze +\".tx\");\nsetAttr -lock false ($freeze +\".ty\");\nsetAttr -lock false ($freeze +\".tz\");\nsetAttr -lock false ($freeze +\".rx\");\nsetAttr -lock false ($freeze +\".ry\");\nsetAttr -lock false ($freeze +\".rz\");\nsetAttr -lock false ($freeze +\".sx\");\nsetAttr -lock false ($freeze +\".sy\");\nsetAttr -lock false ($freeze +\".sz\");\nsetAttr -lock false ($freeze +\".v\");\n}\nmakeIdentity -apply true -t 1 -r 1 -s 1 -n 0;\nlockhide;\n}\n\n// slidr maker\n\n\nglobal proc make()\n{\n\tif (`window -exists sm`)\n\tdeleteUI -window sm;\n\nwindow -title \"slider maker\" -rtf 1  sm;\ncolumnLayout -adjustableColumn true sm;\nframeLayout -w 180 -label \" Border\" -borderStyle \"etchedIn\" Border;\n\ncolumnLayout -adjustableColumn true;\nseparator -h 10  -style \"none\";\nintSliderGrp -field true -label \"Height\"  -value 5  -maxValue 10 -fieldMaxValue 100 -columnWidth3 50 30 50 -adjustableColumn 3 height;\nintSliderGrp -field true -label \"Width \"  -value 5  -maxValue 10 -fieldMaxValue 100 -columnWidth3 50 30 50 -adjustableColumn 3 width;\n\nsetParent..;\nsetParent..;\nseparator -h 5  -style \"none\";\nframeLayout -w 180  -label \" Handle\" -borderStyle \"etchedIn\" Handle;\ncolumnLayout -adjustableColumn true;\nseparator -h 10  -style \"none\";\nfloatSliderGrp -field true -label \"Size\" -value 1 -maxValue 10 -fieldMaxValue 100 -columnWidth3 50 30 50 -adjustableColumn 3 size;\nsetParent..;\nsetParent..;\nseparator -h 5  -style \"none\";\nbutton -label \"Make Slider \"  -h 30  -c s ;\n\nshowWindow sm;\n}\n\nglobal proc s ()\n{\nstring $h = `intSliderGrp -q -value height`;\nstring $w = `intSliderGrp -q -value width`;\nint $fh = $h;\nint $fw = $w;\nstring $bor = `curve -d 1 -p -1 1 0 -p 1 1 0 -p 1 -1 0 -p -1 -1 0 -p -1 1 0 -k 0 -k 8 -k 16 -k 24 -k 32`  ;\n\n\n\nscale $fw $fh 0;\nmakeIdentity -apply true -t 1 -r 1 -s 1 -n 0;\n\t\tsetAttr ($bor+\".overrideEnabled\") 1;\n\t\tsetAttr ($bor+\".overrideColor\") 6;\nstring $size = `floatSliderGrp -q -value size`;\ncircle -c 0 0 0 -nr 0 0 1 -sw 360 -r $size -d 3 -ut 0 -tol 0.01 -s 8 -ch 1  ;\n\n\nmakeIdentity -apply true -t 1 -r 1 -s 1 -n 0;\n\t\tsetAttr  \".overrideEnabled\" 1;\n\t\tsetAttr \".overrideColor\" 17;\n\ndelete -ch;\n\nstring $selbor [] = `ls -sl`;\nfor ($objbor in $selbor)\n{\nif ($fw == 0  )\n{\nsetAttr -lock true -keyable false ($objbor+\".tx\");\n}\nif ($fh == 0  )\n{\nsetAttr -lock true -keyable false ($objbor+\".ty\");\n}\nsetAttr -lock true -keyable false ($objbor+\".tz\");\nsetAttr -lock true -keyable false ($objbor+\".rx\");\nsetAttr -lock true -keyable false ($objbor+\".ry\");\nsetAttr -lock true -keyable false ($objbor+\".rz\");\nsetAttr -lock true -keyable false ($objbor+\".sx\");\nsetAttr -lock true -keyable false ($objbor+\".sy\");\nsetAttr -lock true -keyable false ($objbor+\".sz\");\nsetAttr -lock true -keyable false ($objbor+\".v\");\nparent $selbor $bor;\ntransformLimits -tx (-($fw)) $fw -etx 1 1 $objbor;\ntransformLimits -ty (-($fh)) $fh -ety 1 1 $objbor;\nselect -cl  ;\n}\n}\n\n// combine\n\nglobal proc combine ()\n{\nstring $sl[] = `ls -sl`;\nmakeIdentity -apply true -t 1 -r 1 -s 1 -n 0;\ndelete -ch;\nstring $sh []= `listRelatives -s $sl[0]`;\nparent -add -shape $sh $sl[1];\ndelete $sl[0];\n\n}\n\nkk_controllers;\n" 
        -sourceType "mel" 
        -doubleClickCommand "\nimport curveRecreator\n\ncurveRecreator.StartUI()" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Increment the current file name by one, save the file with this new name and keep it open. The original file will be unchanged." 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Increment and Save" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "IaS" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconFile.png" 
        -image1 "menuIconFile.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "IncrementAndSave" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Create Locator" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Create Locator" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "locator.png" 
        -image1 "locator.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "CreateLocator" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "NURBS Plane" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "NURBS Plane" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "plane.png" 
        -image1 "plane.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "CreateNURBSPlane" 
        -sourceType "mel" 
        -doubleClickCommand "CreateNURBSPlaneOptions" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Create a curve on the grid or live surface specifying control vertices" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "CV Curve Tool" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "curveCV.png" 
        -image1 "curveCV.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "CVCurveTool" 
        -sourceType "mel" 
        -doubleClickCommand "CVCurveToolOptions" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "NURBS Circle" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "NURBS Circle" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "circle.png" 
        -image1 "circle.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "CreateNURBSCircle" 
        -sourceType "mel" 
        -doubleClickCommand "CreateNURBSCircleOptions" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Grab Tool: Pull a single vertex along a surface in any direction" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Grab Tool" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "Grab.png" 
        -image1 "Grab.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "SetMeshGrabTool" 
        -sourceType "mel" 
        -doubleClickCommand "ShowMeshGrabToolOptions" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select an object(s)" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Freeze Transformations" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "FT" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconModify.png" 
        -image1 "menuIconModify.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "FreezeTransformations" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "asd" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "asd" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "out_particle.png" 
        -image1 "out_particle.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "asd" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select an object(s)" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Center Pivot" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "CP" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconModify.png" 
        -image1 "menuIconModify.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "CenterPivot" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Rename objects in scene" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Search and Replace Names..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "SaRN" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconModify.png" 
        -image1 "menuIconModify.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "performSearchReplaceNames 1" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select all NURBS curves" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "NURBS Curves" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "NC" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconSelect.png" 
        -image1 "menuIconSelect.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "SelectAllNURBSCurves" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select all polygon geometry" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Polygon Geometry" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "PG" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconSelect.png" 
        -image1 "menuIconSelect.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "SelectAllPolygonGeometry" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select hierarchy" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Hierarchy" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Hier" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconSelect.png" 
        -image1 "menuIconSelect.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "SelectHierarchy" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Delete construction history on the selected object(s)" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "History" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Hist" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconEdit.png" 
        -image1 "menuIconEdit.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "DeleteHistory" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Delete constraints on the selected object(s)" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Constraints" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Cons" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconEdit.png" 
        -image1 "menuIconEdit.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "DeleteConstraints" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Make a set containing the selected object(s)" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Set" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Set" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconEdit.png" 
        -image1 "menuIconEdit.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "CreateSet" 
        -sourceType "mel" 
        -doubleClickCommand "CreateSetOptions" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select object(s)" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Cluster" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "cluster.png" 
        -image1 "cluster.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "CreateCluster" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 1
        -flexibleWidthValue 32
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Parent constraint options" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "parentConstraintOptionItem" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "parentConstraint.png" 
        -image1 "parentConstraint.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "ParentConstraint" 
        -sourceType "mel" 
        -doubleClickCommand "ParentConstraintOptions" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select one or more targets followed by the object to constrain." 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Scale" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "scaleConstraint.png" 
        -image1 "scaleConstraint.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "doCreateScaleConstraintArgList 1 { \"1\",\"1\",\"1\",\"1\",\"0\",\"0\",\"0\",\"1\",\"\",\"1\" };" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Point constraint options" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "pointConstraintOptionItem" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "posConstraint.png" 
        -image1 "posConstraint.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "PointConstraint" 
        -sourceType "mel" 
        -doubleClickCommand "PointConstraintOptions" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 33
        -enable 1
        -width 36
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Orient Constraint" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Orient Constraint" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "orientConstraint.png" 
        -image1 "orientConstraint.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "OrientConstraint" 
        -sourceType "mel" 
        -doubleClickCommand "OrientConstraintOptions" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Create Joints" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Create Joints" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "kinJoint.png" 
        -image1 "kinJoint.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "JointTool" 
        -sourceType "mel" 
        -doubleClickCommand "joint" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Create IK handle on joint chain" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Create IK Handle" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "kinHandle.png" 
        -image1 "kinHandle.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "IKHandleTool" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Blend shape options" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "blendShapeDialogItem" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "blendShape.png" 
        -image1 "blendShape.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "CreateBlendShapeOptions" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Mirror skin weights options" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "mirrorSkinWeightsDialog" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "mirrorSkinWeight.png" 
        -image1 "mirrorSkinWeight.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "MirrorSkinWeightsOptions" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Orient joint options" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "orientJointOptionItem" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "orientJoint.png" 
        -image1 "orientJoint.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "OrientJointOptions" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Weight hammer: fix vertices that have bad weights (select them and use the hammer)" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Hammer Skin Weights" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "HSW" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconSkinning.png" 
        -image1 "menuIconSkinning.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "weightHammerVerts" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Prune small weights options" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "pruneSkinWeightsDialog" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Pswo" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconSkinning.png" 
        -image1 "menuIconSkinning.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "PruneSmallWeightsOptions" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Set Driven Key" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Set Driven Key" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "setDrivenKeyframe.png" 
        -image1 "setDrivenKeyframe.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "SetDrivenKeyOptions" 
        -sourceType "mel" 
        -doubleClickCommand "SetDrivenKeyOptions" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "delete`parentConstraint`;" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "delete`parentConstraint`;" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "traxFrameSelected.png" 
        -image1 "traxFrameSelected.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "delete`parentConstraint`;" 
        -sourceType "mel" 
        -doubleClickCommand "delete`pointConstraint`;" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "string $a[] = `ls -sl`;\nstring $cl[] = `newCluster \" -envelope 1\"`;\nselect -cl;\nstring $jnate = `joint`;\nselect -cl;\ndelete`parentConstraint $cl $jnate  `;\nprint $jnt;" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "string $a[] = `ls -sl`;\nstring $cl[] = `newCluster \" -envelope 1..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "activeDeselectedAnimLayer.png" 
        -image1 "activeDeselectedAnimLayer.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "string $a[] = `ls -sl`;\nstring $cl[] = `newCluster \" -envelope 1\"`;\nselect -cl;\nstring $jnate = `joint`;\nselect -cl;\ndelete`parentConstraint $cl $jnate  `;\nprint $jnt;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "ParentConstraint;\nScaleConstraint;" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "ParentConstraint;\nScaleConstraint;" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "P.Cn+S.Cn" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "arealight.png" 
        -image1 "arealight.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "parentConstraint -mo;\nscaleConstraint -mo;" 
        -sourceType "mel" 
        -doubleClickCommand "pointConstraint -mo;\n" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "\nglobal proc string rivet ( )\n{\n \nstring $nameObject;\nstring $namePOSI;\n \nstring $parts[];\nstring $list[] = `filterExpand -sm 32`;\nint $size = size($list);\nif ($size > 0)\n{\n            \tif ($size != 2)\n            \t{          \terror(\"No two edges selected\");\n                            \treturn \"\";\n            \t}\n \n            \ttokenize($list[0],\".\",$parts);\n            \t$nameObject = $parts[0];\n            \ttokenize($list[0],\"[]\",$parts);\n            \tfloat $e1 = $parts[1];\n            \ttokenize($list[1],\"[]\",$parts);\n            \tfloat $e2 = $parts[1];\n \n            \tstring $nameCFME1 = `createNode curveFromMeshEdge -n \"rivetCurveFromMeshEdge1\"`;\n                            \tsetAttr \".ihi\" 1;\n                            \tsetAttr \".ei[0]\"  $e1;\n            \tstring $nameCFME2 = `createNode curveFromMeshEdge -n \"rivetCurveFromMeshEdge2\"`;\n                            \tsetAttr \".ihi\" 1;\n                            \tsetAttr \".ei[0]\"  $e2;\n            \tstring $nameLoft = `createNode loft -n \"rivetLoft1\"`;\n                            \tsetAttr -s 2 \".ic\";\n                            \tsetAttr \".u\" yes;\n                            \tsetAttr \".rsn\" yes;\n \n            \t$namePOSI = `createNode pointOnSurfaceInfo -n \"rivetPointOnSurfaceInfo1\"`;\n                            \tsetAttr \".turnOnPercentage\" 1;\n                            \tsetAttr \".parameterU\" 0.5;\n                            \tsetAttr \".parameterV\" 0.5;\n \n            \tconnectAttr -f ($nameLoft + \".os\") ($namePOSI + \".is\");\n            \tconnectAttr ($nameCFME1 + \".oc\") ($nameLoft + \".ic[0]\");\n            \tconnectAttr ($nameCFME2 + \".oc\") ($nameLoft + \".ic[1]\");\n            \tconnectAttr ($nameObject + \".w\") ($nameCFME1 + \".im\");\n            \tconnectAttr ($nameObject + \".w\") ($nameCFME2 + \".im\");\n}\nelse\n{          \t$list = `filterExpand -sm 41`;\n            \t$size = size($list);\n \n            \tif ($size > 0)\n            \t{\n                            \tif ($size != 1)\n                            \t{          \terror(\"No one point selected\");\n                                            \treturn \"\";\n                            \t}\n                            \ttokenize($list[0],\".\",$parts);\n                            \t$nameObject = $parts[0];\n                            \ttokenize($list[0],\"[]\",$parts);\n                            \tfloat $u = $parts[1];\n                            \tfloat $v = $parts[2];\n                            \t$namePOSI = `createNode pointOnSurfaceInfo -n \"rivetPointOnSurfaceInfo1\"`;\n                                                            \tsetAttr \".turnOnPercentage\" 0;\n                                                            \tsetAttr \".parameterU\" $u;\n                                                            \tsetAttr \".parameterV\" $v;\n                            \tconnectAttr -f ($nameObject + \".ws\") ($namePOSI + \".is\");\n            \t}\n            \telse\n            \t{          \terror(\"No edges or point selected\");\n                            \treturn \"\";\n            \t}\n}\n \nstring $nameLocator = `createNode transform -n \"rivet1\"`;\ncreateNode locator -n ($nameLocator + \"Shape\") -p $nameLocator;\n \nstring $nameAC = `createNode aimConstraint -p $nameLocator -n ($nameLocator + \"_rivetAimConstraint1\")`;\n            \tsetAttr \".tg[0].tw\" 1;\n            \tsetAttr \".a\" -type \"double3\" 0 1 0;\n            \tsetAttr \".u\" -type \"double3\" 0 0 1;\n            \tsetAttr -k off \".v\";\n            \tsetAttr -k off \".tx\";\n            \tsetAttr -k off \".ty\";\n            \tsetAttr -k off \".tz\";\n            \tsetAttr -k off \".rx\";\n            \tsetAttr -k off \".ry\";\n            \tsetAttr -k off \".rz\";\n            \tsetAttr -k off \".sx\";\n            \tsetAttr -k off \".sy\";\n            \tsetAttr -k off \".sz\";\n \nconnectAttr ($namePOSI + \".position\") ($nameLocator + \".translate\");\nconnectAttr ($namePOSI + \".n\") ($nameAC + \".tg[0].tt\");\nconnectAttr ($namePOSI + \".tv\") ($nameAC + \".wu\");\nconnectAttr ($nameAC + \".crx\") ($nameLocator + \".rx\");\nconnectAttr ($nameAC + \".cry\") ($nameLocator + \".ry\");\nconnectAttr ($nameAC + \".crz\") ($nameLocator + \".rz\");\n \nselect -r $nameLocator;\nreturn ($nameLocator);\n \n}\n \nrivet;" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "\nglobal proc string rivet ( )\n{\n \nstring $nameObject;\nstring $na..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Rivet" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "\nglobal proc string rivet ( )\n{\n \nstring $nameObject;\nstring $namePOSI;\n \nstring $parts[];\nstring $list[] = `filterExpand -sm 32`;\nint $size = size($list);\nif ($size > 0)\n{\n            \tif ($size != 2)\n            \t{          \terror(\"No two edges selected\");\n                            \treturn \"\";\n            \t}\n \n            \ttokenize($list[0],\".\",$parts);\n            \t$nameObject = $parts[0];\n            \ttokenize($list[0],\"[]\",$parts);\n            \tfloat $e1 = $parts[1];\n            \ttokenize($list[1],\"[]\",$parts);\n            \tfloat $e2 = $parts[1];\n \n            \tstring $nameCFME1 = `createNode curveFromMeshEdge -n \"rivetCurveFromMeshEdge1\"`;\n                            \tsetAttr \".ihi\" 1;\n                            \tsetAttr \".ei[0]\"  $e1;\n            \tstring $nameCFME2 = `createNode curveFromMeshEdge -n \"rivetCurveFromMeshEdge2\"`;\n                            \tsetAttr \".ihi\" 1;\n                            \tsetAttr \".ei[0]\"  $e2;\n            \tstring $nameLoft = `createNode loft -n \"rivetLoft1\"`;\n                            \tsetAttr -s 2 \".ic\";\n                            \tsetAttr \".u\" yes;\n                            \tsetAttr \".rsn\" yes;\n \n            \t$namePOSI = `createNode pointOnSurfaceInfo -n \"rivetPointOnSurfaceInfo1\"`;\n                            \tsetAttr \".turnOnPercentage\" 1;\n                            \tsetAttr \".parameterU\" 0.5;\n                            \tsetAttr \".parameterV\" 0.5;\n \n            \tconnectAttr -f ($nameLoft + \".os\") ($namePOSI + \".is\");\n            \tconnectAttr ($nameCFME1 + \".oc\") ($nameLoft + \".ic[0]\");\n            \tconnectAttr ($nameCFME2 + \".oc\") ($nameLoft + \".ic[1]\");\n            \tconnectAttr ($nameObject + \".w\") ($nameCFME1 + \".im\");\n            \tconnectAttr ($nameObject + \".w\") ($nameCFME2 + \".im\");\n}\nelse\n{          \t$list = `filterExpand -sm 41`;\n            \t$size = size($list);\n \n            \tif ($size > 0)\n            \t{\n                            \tif ($size != 1)\n                            \t{          \terror(\"No one point selected\");\n                                            \treturn \"\";\n                            \t}\n                            \ttokenize($list[0],\".\",$parts);\n                            \t$nameObject = $parts[0];\n                            \ttokenize($list[0],\"[]\",$parts);\n                            \tfloat $u = $parts[1];\n                            \tfloat $v = $parts[2];\n                            \t$namePOSI = `createNode pointOnSurfaceInfo -n \"rivetPointOnSurfaceInfo1\"`;\n                                                            \tsetAttr \".turnOnPercentage\" 0;\n                                                            \tsetAttr \".parameterU\" $u;\n                                                            \tsetAttr \".parameterV\" $v;\n                            \tconnectAttr -f ($nameObject + \".ws\") ($namePOSI + \".is\");\n            \t}\n            \telse\n            \t{          \terror(\"No edges or point selected\");\n                            \treturn \"\";\n            \t}\n}\n \nstring $nameLocator = `createNode transform -n \"rivet1\"`;\ncreateNode locator -n ($nameLocator + \"Shape\") -p $nameLocator;\n \nstring $nameAC = `createNode aimConstraint -p $nameLocator -n ($nameLocator + \"_rivetAimConstraint1\")`;\n            \tsetAttr \".tg[0].tw\" 1;\n            \tsetAttr \".a\" -type \"double3\" 0 1 0;\n            \tsetAttr \".u\" -type \"double3\" 0 0 1;\n            \tsetAttr -k off \".v\";\n            \tsetAttr -k off \".tx\";\n            \tsetAttr -k off \".ty\";\n            \tsetAttr -k off \".tz\";\n            \tsetAttr -k off \".rx\";\n            \tsetAttr -k off \".ry\";\n            \tsetAttr -k off \".rz\";\n            \tsetAttr -k off \".sx\";\n            \tsetAttr -k off \".sy\";\n            \tsetAttr -k off \".sz\";\n \nconnectAttr ($namePOSI + \".position\") ($nameLocator + \".translate\");\nconnectAttr ($namePOSI + \".n\") ($nameAC + \".tg[0].tt\");\nconnectAttr ($namePOSI + \".tv\") ($nameAC + \".wu\");\nconnectAttr ($nameAC + \".crx\") ($nameLocator + \".rx\");\nconnectAttr ($nameAC + \".cry\") ($nameLocator + \".ry\");\nconnectAttr ($nameAC + \".crz\") ($nameLocator + \".rz\");\n \nselect -r $nameLocator;\nreturn ($nameLocator);\n \n}\n \nrivet;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "string $selec[] = `ls -sl`;\n \ngroup -n $selec;\n" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "string $selec[] = `ls -sl`;\n \ngroup -n $selec;\n" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Group" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "string $selec[] = `ls -sl`;\nselect -cl ;\nfor ($each in $selec) \n{\ngroup -n ($each + \"_Grp\") $each;\nselect -cl;\n}" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "string $sec1[] = `ls -sl`;\ngroup -n \"Geo\";\ncurve -n \"GlobalCtrl\" -d 1 -p -5 0 0 -p -3 0 -2 -p -3 0 -1 -p -1 0 -1 -p -1 0 -3 -p -2 0 -3 -p 0 0 -5 -p 2 0 -3 -p 1 0 -3 -p 1 0 -1 -p 3 0 -1 -p 3 0 -2 -p 5 0 0 -p 3 0 2 -p 3 0 1 -p 1 0 1 -p 1 0 3 -p 2 0 3 -p 0 0 5 -p -2 0 3 -p -1 0 3 -p -1 0 1 -p -3 0 1 -p -3 0 2 -p -5 0 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24  ;\naddAttr  -longName \"GlobalScale\" -at \"float\"  -defaultValue 1.0 -minValue 0 -k 1 ;\nselect -cl;\ncurve -n \"Placement_ctrl\" -d 1 -p 0 1 0 -p 0 0.92388 0.382683 -p 0 0.707107 0.707107 -p 0 0.382683 0.92388 -p 0 0 1 -p 0 -0.382683 0.92388 -p 0 -0.707107 0.707107 -p 0 -0.92388 0.382683 -p 0 -1 0 -p 0 -0.92388 -0.382683 -p 0 -0.707107 -0.707107 -p 0 -0.382683 -0.92388 -p 0 0 -1 -p 0 0.382683 -0.92388 -p 0 0.707107 -0.707107 -p 0 0.92388 -0.382683 -p 0 1 0 -p 0.382683 0.92388 0 -p 0.707107 0.707107 0 -p 0.92388 0.382683 0 -p 1 0 0 -p 0.92388 -0.382683 0 -p 0.707107 -0.707107 0 -p 0.382683 -0.92388 0 -p 0 -1 0 -p -0.382683 -0.92388 0 -p -0.707107 -0.707107 0 -p -0.92388 -0.382683 0 -p -1 0 0 -p -0.92388 0.382683 0 -p -0.707107 0.707107 0 -p -0.382683 0.92388 0 -p 0 1 0 -p 0 0.92388 -0.382683 -p 0 0.707107 -0.707107 -p 0 0.382683 -0.92388 -p 0 0 -1 -p -0.382683 0 -0.92388 -p -0.707107 0 -0.707107 -p -0.92388 0 -0.382683 -p -1 0 0 -p -0.92388 0 0.382683 -p -0.707107 0 0.707107 -p -0.382683 0 0.92388 -p 0 0 1 -p 0.382683 0 0.92388 -p 0.707107 0 0.707107 -p 0.92388 0 0.382683 -p 1 0 0 -p 0.92388 0 -0.382683 -p 0.707107 0 -0.707107 -p 0.382683 0 -0.92388 -p 0 0 -1 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 48 -k 49 -k 50 -k 51 -k 52 ;\ngroup -n \"placement_grp\";\ngroup -n \"Ctrl_Grp\";\n\nconnectAttr -f GlobalCtrl.GlobalScale Geo.scaleX;\nconnectAttr -f GlobalCtrl.GlobalScale Geo.scaleY;\nconnectAttr -f GlobalCtrl.GlobalScale Geo.scaleZ;\n\nconnectAttr -f GlobalCtrl.GlobalScale GlobalCtrl.scaleX;\nconnectAttr -f GlobalCtrl.GlobalScale GlobalCtrl.scaleY;\nconnectAttr -f GlobalCtrl.GlobalScale GlobalCtrl.scaleZ;\n\nconnectAttr -f GlobalCtrl.GlobalScale Ctrl_Grp.scaleZ;\nconnectAttr -f GlobalCtrl.GlobalScale Ctrl_Grp.scaleY;\nconnectAttr -f GlobalCtrl.GlobalScale Ctrl_Grp.scaleX;\n\n\nsetAttr -keyable false -channelBox false \"GlobalCtrl.sx\";\nsetAttr -keyable false -channelBox false \"GlobalCtrl.sy\";\nsetAttr -keyable false -channelBox false \"GlobalCtrl.sz\";\n\n//parent placement_grp GlobalCtrl;\nselect -cl;\nparentConstraint \"*GlobalCtrl*\"  \"*placement_grp*\";\nparentConstraint \"*Placement_ctrl*\"  Geo;\n" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Prop" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Prop" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "string $selc[] = `ls -sl -tr`;\n\n\nfor ($eachGeo in $selc){\n    select -cl;\n    select $eachGeo;\n    string $GeoGrp = `group -n ($eachGeo + \"_geo\")`;\n    select -cl;\n    setAttr ($GeoGrp+\".overrideEnabled\" ) 1 ;\n    \n    string $GblCtrl = `curve -n \"GlobalCtrl\" -d 1 -p -5 0 0 -p -3 0 -2 -p -3 0 -1 -p -1 0 -1 -p -1 0 -3 -p -2 0 -3 -p 0 0 -5 -p 2 0 -3 -p 1 0 -3 -p 1 0 -1 -p 3 0 -1 -p 3 0 -2 -p 5 0 0 -p 3 0 2 -p 3 0 1 -p 1 0 1 -p 1 0 3 -p 2 0 3 -p 0 0 5 -p -2 0 3 -p -1 0 3 -p -1 0 1 -p -3 0 1 -p -3 0 2 -p -5 0 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24  `;\n    addAttr  -longName \"GlobalScale\" -at \"float\"  -defaultValue 1.0 -minValue 0 -k 1;\n    addAttr  -longName \"Mesh_Display\" -at \"enum\" -en \"Normal:Template:Reference\" ;\n    addAttr  -longName \"Ctrl_Visibility\" -at \"bool\" -k 1 ;\n    addAttr  -longName \"Mesh_Visibility\" -at \"bool\" -k 1 ;\n    \n    setAttr -keyable false -channelBox true \"GlobalCtrl.Mesh_Display\";\n    \n    string $GblCtrlGrp = `group -n ($eachGeo + \"_GlobalCtrl_grp\")`;\n    select -cl;\n    string $PlCtrl = `curve -n \"Placement_ctrl\" -d 1 -p 0 1 0 -p 0 0.92388 0.382683 -p 0 0.707107 0.707107 -p 0 0.382683 0.92388 -p 0 0 1 -p 0 -0.382683 0.92388 -p 0 -0.707107 0.707107 -p 0 -0.92388 0.382683 -p 0 -1 0 -p 0 -0.92388 -0.382683 -p 0 -0.707107 -0.707107 -p 0 -0.382683 -0.92388 -p 0 0 -1 -p 0 0.382683 -0.92388 -p 0 0.707107 -0.707107 -p 0 0.92388 -0.382683 -p 0 1 0 -p 0.382683 0.92388 0 -p 0.707107 0.707107 0 -p 0.92388 0.382683 0 -p 1 0 0 -p 0.92388 -0.382683 0 -p 0.707107 -0.707107 0 -p 0.382683 -0.92388 0 -p 0 -1 0 -p -0.382683 -0.92388 0 -p -0.707107 -0.707107 0 -p -0.92388 -0.382683 0 -p -1 0 0 -p -0.92388 0.382683 0 -p -0.707107 0.707107 0 -p -0.382683 0.92388 0 -p 0 1 0 -p 0 0.92388 -0.382683 -p 0 0.707107 -0.707107 -p 0 0.382683 -0.92388 -p 0 0 -1 -p -0.382683 0 -0.92388 -p -0.707107 0 -0.707107 -p -0.92388 0 -0.382683 -p -1 0 0 -p -0.92388 0 0.382683 -p -0.707107 0 0.707107 -p -0.382683 0 0.92388 -p 0 0 1 -p 0.382683 0 0.92388 -p 0.707107 0 0.707107 -p 0.92388 0 0.382683 -p 1 0 0 -p 0.92388 0 -0.382683 -p 0.707107 0 -0.707107 -p 0.382683 0 -0.92388 -p 0 0 -1 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 48 -k 49 -k 50 -k 51 -k 52 `;\n    scale 1.2 1.2 1.2;\n    string $PlCtrlGrp = `group -n ($eachGeo + \"_Placement_grp\")`;\n    string $CtGrp = `group -n ($eachGeo + \"_Ctrl_Grp\")`;\n    \n    \n    connectAttr -f ($GblCtrlGrp + \"|\" + $GblCtrl + \".GlobalScale\") ($GeoGrp + \".scaleX\");\n    connectAttr -f ($GblCtrlGrp + \"|\" + $GblCtrl + \".GlobalScale\") ($GeoGrp + \".scaleY\");\n    connectAttr -f ($GblCtrlGrp + \"|\" + $GblCtrl + \".GlobalScale\") ($GeoGrp + \".scaleZ\");\n    \n    connectAttr -f ($GblCtrlGrp + \"|\" + $GblCtrl + \".GlobalScale\") ($GblCtrlGrp + \"|\" + $GblCtrl + \".scaleX\");\n    connectAttr -f ($GblCtrlGrp + \"|\" + $GblCtrl + \".GlobalScale\") ($GblCtrlGrp + \"|\" + $GblCtrl + \".scaleY\");\n    connectAttr -f ($GblCtrlGrp + \"|\" + $GblCtrl + \".GlobalScale\") ($GblCtrlGrp + \"|\" + $GblCtrl + \".scaleZ\");\n    \n    connectAttr -f ($GblCtrlGrp + \"|\" + $GblCtrl + \".GlobalScale\") ($CtGrp+\".scaleZ\");\n    connectAttr -f ($GblCtrlGrp + \"|\" + $GblCtrl + \".GlobalScale\") ($CtGrp+\".scaleY\");\n    connectAttr -f ($GblCtrlGrp + \"|\" + $GblCtrl + \".GlobalScale\") ($CtGrp+\".scaleX\");\n        \n    \n   \n   \n    connectAttr -f ($GblCtrlGrp + \"|\" + $GblCtrl+\".Mesh_Display\") ($GeoGrp +\".overrideDisplayType\");\n    connectAttr -f ($GblCtrlGrp + \"|\" + $GblCtrl+\".Ctrl_Visibility\") ($CtGrp+ \".visibility\");\n    connectAttr -f ($GblCtrlGrp + \"|\" + $GblCtrl+\".Mesh_Visibility\") ($GeoGrp+ \".visibility\");\n\n    \n    setAttr -keyable false -channelBox false ($GblCtrlGrp + \"|\" + $GblCtrl + \".sx\");\n    setAttr -keyable false -channelBox false ($GblCtrlGrp + \"|\" + $GblCtrl + \".sy\");\n    setAttr -keyable false -channelBox false ($GblCtrlGrp + \"|\" + $GblCtrl + \".sz\");\n    select -cl;\n    delete `parentConstraint  $eachGeo ($PlCtrlGrp + \"|\" +$PlCtrl)`;\n    makeIdentity -apply true -t 1 -r 1 -s 1 -n 0 -pn 1 ($PlCtrlGrp + \"|\" +$PlCtrl);\n    parentConstraint -mo ($GblCtrlGrp + \"|\" + $GblCtrl) $PlCtrlGrp ;\n    parentConstraint -mo ($PlCtrlGrp + \"|\" +$PlCtrl) $GeoGrp;\n    setAttr ($GblCtrlGrp + \"|\" + $GblCtrl+\".Mesh_Visibility\",1);\n    group($GeoGrp, $GblCtrlGrp,$CtGrp);\n    rename ( \"World_\"+$eachGeo);\n    }" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "string $selc[] = `ls -sl`;\n\nfor ($objj in $selc) \n\n{\n\nselect -cl;\nstring $cir= `curve -n ($objj + \"_Ctrl\") -d 1 -p 0 1 0 -p 0 0.92388 0.382683 -p 0 0.707107 0.707107 -p 0 0.382683 0.92388 -p 0 0 1 -p 0 -0.382683 0.92388 -p 0 -0.707107 0.707107 -p 0 -0.92388 0.382683 -p 0 -1 0 -p 0 -0.92388 -0.382683 -p 0 -0.707107 -0.707107 -p 0 -0.382683 -0.92388 -p 0 0 -1 -p 0 0.382683 -0.92388 -p 0 0.707107 -0.707107 -p 0 0.92388 -0.382683 -p 0 1 0 -p 0.382683 0.92388 0 -p 0.707107 0.707107 0 -p 0.92388 0.382683 0 -p 1 0 0 -p 0.92388 -0.382683 0 -p 0.707107 -0.707107 0 -p 0.382683 -0.92388 0 -p 0 -1 0 -p -0.382683 -0.92388 0 -p -0.707107 -0.707107 0 -p -0.92388 -0.382683 0 -p -1 0 0 -p -0.92388 0.382683 0 -p -0.707107 0.707107 0 -p -0.382683 0.92388 0 -p 0 1 0 -p 0 0.92388 -0.382683 -p 0 0.707107 -0.707107 -p 0 0.382683 -0.92388 -p 0 0 -1 -p -0.382683 0 -0.92388 -p -0.707107 0 -0.707107 -p -0.92388 0 -0.382683 -p -1 0 0 -p -0.92388 0 0.382683 -p -0.707107 0 0.707107 -p -0.382683 0 0.92388 -p 0 0 1 -p 0.382683 0 0.92388 -p 0.707107 0 0.707107 -p 0.92388 0 0.382683 -p 1 0 0 -p 0.92388 0 -0.382683 -p 0.707107 0 -0.707107 -p 0.382683 0 -0.92388 -p 0 0 -1 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 48 -k 49 -k 50 -k 51 -k 52 `;\nscale .5 .5 .5;\nFreezeTransformations;\nselect -cl;\n\n    \ndelete `parentConstraint  $objj $cir`;\nparentConstraint -mo $cir $objj;\n}" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "SecProp" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "SecProp" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "string $selc[] = `ls -sl`;\n\nfor ($objj in $selc) \n\n{\n\nselect -cl;\nstring $cir= `curve -n ($objj + \"_Ctrl\") -d 1 -p 0 1 0 -p 0 0.92388 0.382683 -p 0 0.707107 0.707107 -p 0 0.382683 0.92388 -p 0 0 1 -p 0 -0.382683 0.92388 -p 0 -0.707107 0.707107 -p 0 -0.92388 0.382683 -p 0 -1 0 -p 0 -0.92388 -0.382683 -p 0 -0.707107 -0.707107 -p 0 -0.382683 -0.92388 -p 0 0 -1 -p 0 0.382683 -0.92388 -p 0 0.707107 -0.707107 -p 0 0.92388 -0.382683 -p 0 1 0 -p 0.382683 0.92388 0 -p 0.707107 0.707107 0 -p 0.92388 0.382683 0 -p 1 0 0 -p 0.92388 -0.382683 0 -p 0.707107 -0.707107 0 -p 0.382683 -0.92388 0 -p 0 -1 0 -p -0.382683 -0.92388 0 -p -0.707107 -0.707107 0 -p -0.92388 -0.382683 0 -p -1 0 0 -p -0.92388 0.382683 0 -p -0.707107 0.707107 0 -p -0.382683 0.92388 0 -p 0 1 0 -p 0 0.92388 -0.382683 -p 0 0.707107 -0.707107 -p 0 0.382683 -0.92388 -p 0 0 -1 -p -0.382683 0 -0.92388 -p -0.707107 0 -0.707107 -p -0.92388 0 -0.382683 -p -1 0 0 -p -0.92388 0 0.382683 -p -0.707107 0 0.707107 -p -0.382683 0 0.92388 -p 0 0 1 -p 0.382683 0 0.92388 -p 0.707107 0 0.707107 -p 0.92388 0 0.382683 -p 1 0 0 -p 0.92388 0 -0.382683 -p 0.707107 0 -0.707107 -p 0.382683 0 -0.92388 -p 0 0 -1 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 48 -k 49 -k 50 -k 51 -k 52 `;\nscale .5 .5 .5;\nFreezeTransformations;\nselect -cl;\n\n    \ndelete `parentConstraint  $objj $cir`;\nparentConstraint -mo $cir $objj;\nscaleConstraint -mo $cir $objj;\n}" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Display relationships among nodes in your scene graphically" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Node Editor" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "NODEedt" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "nodeEditorHypershadePerspLayout.png" 
        -image1 "nodeEditorHypershadePerspLayout.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "NodeEditorWindow" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "window -e -bgc .13 .1 .16 $gMainWindow;" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "window -e -bgc .13 .1 .16 $gMainWindow;" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "colorPresetBlackRedYellow.png" 
        -image1 "colorPresetBlackRedYellow.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "window -e -bgc .12 .1 .13 $gMainWindow;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Make connections between object attributes" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Connection Editor" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "CE" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconWindow.png" 
        -image1 "menuIconWindow.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "ConnectionEditor" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "string $ct[] = `ls -sl`;\n\nfor ($each in $ct){\n\n        int $tx = `getAttr -l ($each + \".translateX\")`;\n        int $ty = `getAttr -l ($each + \".translateY\")`;\n        int $tz = `getAttr -l ($each + \".translateZ\")`;\n        \n        int $rx = `getAttr -l ($each + \".rotateX\")`;\n        int $ry = `getAttr -l ($each + \".rotateY\")`;\n        int $rz = `getAttr -l ($each + \".rotateZ\")`;\n\n\n            if ($tx==0) { setAttr ($each + \".translateX\") 0; }\n            \n            if ($ty==0) { setAttr ($each + \".translateY\") 0; }\n            \n            if ($tz==0) { setAttr ($each + \".translateZ\") 0; }\n            \n            if ($rx==0) { setAttr ($each + \".rotateX\") 0; }\n            \n            if ($ry==0) { setAttr ($each + \".rotateY\") 0; } \n            \n            if ($rz==0) { setAttr ($each + \".rotateZ\") 0; }    \n                \n                \n          \n            \n            };" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "string $ct[] = `ls -sl`;\n\nfor ($each in $ct){\n\n        int $tx =..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Rest" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "string $ct[] = `ls -an \"*_Ctrl\"`;\n\nfor ($each in $ct){\n\n        int $tx = `getAttr -l ($each + \".translateX\")`;\n        int $ty = `getAttr -l ($each + \".translateY\")`;\n        int $tz = `getAttr -l ($each + \".translateZ\")`;\n        \n        int $rx = `getAttr -l ($each + \".rotateX\")`;\n        int $ry = `getAttr -l ($each + \".rotateY\")`;\n        int $rz = `getAttr -l ($each + \".rotateZ\")`;\n\n\n            if ($tx==0) { setAttr ($each + \".translateX\") 0; }\n            \n            if ($ty==0) { setAttr ($each + \".translateY\") 0; }\n            \n            if ($tz==0) { setAttr ($each + \".translateZ\") 0; }\n            \n            if ($rx==0) { setAttr ($each + \".rotateX\") 0; }\n            \n            if ($ry==0) { setAttr ($each + \".rotateY\") 0; } \n            \n            if ($rz==0) { setAttr ($each + \".rotateZ\") 0; }    \n                \n                \n          \n            \n            };" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 2
        -flexibleWidthValue 30
        -enable 1
        -width 30
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import maya.cmds as mc\nimport maya.OpenMaya as om\n\ndef softSelection():\n    selection = om.MSelectionList()\n    softSelection = om.MRichSelection()\n    om.MGlobal.getRichSelection(softSelection)\n    softSelection.getSelection(selection)\n    \n    dagPath = om.MDagPath()\n    component = om.MObject()\n    \n    iter = om.MItSelectionList( selection,om.MFn.kMeshVertComponent )\n    elements = []\n    while not iter.isDone(): \n        iter.getDagPath( dagPath, component )\n        dagPath.pop()\n        node = dagPath.fullPathName()\n        fnComp = om.MFnSingleIndexedComponent(component)   \n                \n        for i in range(fnComp.elementCount()):\n            elements.append([node, fnComp.element(i), fnComp.weight(i).influence()] )\n        iter.next()\n    return elements\n    \n\ndef createSoftCluster():\n    softElementData = softSelection()\n    selection = [\"%s.vtx[%d]\" % (el[0], el[1])for el in softElementData ] \n    \n    mc.select(selection, r=True)\n    cluster = mc.cluster(relative=True)\n    \n    for i in range(len(softElementData)):\n        mc.percent(cluster[0], selection[i], v=softElementData[i][2])\n    mc.select(cluster[1], r=True)\n    \ncreateSoftCluster()" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "SoftCluster" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "SoftCluster" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "SoftSelect.png" 
        -image1 "SoftSelect.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import maya.cmds as mc\nimport maya.OpenMaya as om\n\ndef softSelection():\n    selection = om.MSelectionList()\n    softSelection = om.MRichSelection()\n    om.MGlobal.getRichSelection(softSelection)\n    softSelection.getSelection(selection)\n    \n    dagPath = om.MDagPath()\n    component = om.MObject()\n    \n    iter = om.MItSelectionList( selection,om.MFn.kMeshVertComponent )\n    elements = []\n    while not iter.isDone(): \n        iter.getDagPath( dagPath, component )\n        dagPath.pop()\n        node = dagPath.fullPathName()\n        fnComp = om.MFnSingleIndexedComponent(component)   \n                \n        for i in range(fnComp.elementCount()):\n            elements.append([node, fnComp.element(i), fnComp.weight(i).influence()] )\n        iter.next()\n    return elements\n    \n\ndef createSoftCluster():\n    softElementData = softSelection()\n    selection = [\"%s.vtx[%d]\" % (el[0], el[1])for el in softElementData ] \n    \n    mc.select(selection, r=True)\n    cluster = mc.cluster(relative=True)\n    \n    for i in range(len(softElementData)):\n        mc.percent(cluster[0], selection[i], v=softElementData[i][2])\n    mc.select(cluster[1], r=True)\n    \ncreateSoftCluster()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 1
        -flexibleWidthValue 32
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import smartDeformer_maya2018\nsmartDeformer_maya2018.show_window()" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "SDef" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "SDef" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "connectEmit.png" 
        -image1 "connectEmit.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import smartDeformer_maya2018\nsmartDeformer_maya2018.show_window()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "\n//======================================================================\n// Window Procedures\n//======================================================================\nglobal proc Quick_rename_tool ()\n  {//Quick_rename_toolWindow\n\n  if (`window -q -exists Quick_rename_toolWindow`) deleteUI Quick_rename_toolWindow;\n  \n  window -s 0 -title \"Quick_rename_tool\" -maximizeButton 0 -minimizeButton 1 Quick_rename_toolWindow;\n\n//======================================================================\n// Rename Tools\ncolumnLayout;\nrowColumnLayout -numberOfColumns 1 -columnWidth 1 313 ;\n//frameLayout -label \"Rename and Number\"  -bgc 0.25 0.25 0.25 -w 313 -fn \"tinyBoldLabelFont\" ;\n\t\n  textFieldGrp -label \"Rename:\" -text \"\" -columnWidth 1 70 -columnWidth 2 235 KK_RenameRenameTFG;\n\t\t\t\nrowColumnLayout -numberOfColumns 2 -columnWidth 1 130 -columnWidth 2 170;\n\tintFieldGrp -label \"Start #:\" -v1 1 -columnWidth 1 68 -columnWidth 2 60 KK_RenameStartIFG;\n\tintFieldGrp -label \"Padding:\" -v1 2 -columnWidth 1 64 -columnWidth 2 60 KK_RenamePaddingIFG;\nsetParent..;\n\trowColumnLayout -numberOfColumns 1 -columnWidth 1 306 ;\n\tbutton -h 23 -w 100 -l \"Rename and Number\" -bgc 0.1 0.2 0.2 -c \"Rename_KK_Kename(3)\";\nsetParent..;\nseparator -style \"in\" -w 315 ;\n\t\n\t\t\t\n//======================================================================\n// Remove\n//frameLayout -label \"Simple rename\"  -bgc 0.25 0.25 0.25 -w 313 -fn \"tinyBoldLabelFont\";\t\nrowColumnLayout -numberOfColumns 3 -cs 1 10 -cs 3 4 -columnWidth 1 84 -columnWidth 2 104 -columnWidth 3 104;\n\ttext -label \"Remove...\" -align \"left\";\n\tbutton -h 23 -w 60 -l \"First Character-->\" -bgc 0.1 0.2 0.2 -c \"remove_FirstChr()\";\n\tbutton -h 23 -w 60 -l \"<--Last Character\" -bgc 0.1 0.2 0.2 -c \"remove_LastChr()\";\nsetParent..;\n\t\t\t\t\nrowColumnLayout -numberOfColumns 3 -cs 1 10 -columnWidth 1 70 -columnWidth 2 170 -columnWidth 3 56;\n\ttext -l \" Hash Rename:\";\n\ttextFieldGrp -label \"\" -text \"name_####_suffix\" -columnWidth 1 10 -columnWidth 2 153 Rename_js_hashRenameTFG;\n\tbutton -h 23 -w 48 -l \"Rename\" -bgc 0.1 0.2 0.2 -c \"Rename_js_hashRename_MainProc()\"; \n\tsetParent..;\nseparator -style \"in\" -w 315 ;\n\t\n//======================================================================\n// Prefix - Suffix\n\t//frameLayout -label \" Add prefix or suffix\"  -bgc 0.25 0.25 0.25 -w 313 -fn \"tinyBoldLabelFont\";\n\t//text -l \"\" -h 1;\n\trowColumnLayout -numberOfColumns 3 -cs 1 10 -columnWidth 1 55 -columnWidth 2 185 -columnWidth 3 56;\n\ttext -l \"(Before)\";\n\ttextFieldGrp -label \"\" -text \"prefix_\" -columnWidth 1 10 -columnWidth 2 168 prefixTFG;\n\tbutton -h 21 -l \"Add\" -bgc 0.1 0.2 0.2 -c \"Rename_KK_Kename(1)\";\nsetParent..;\n\ntext -l \"\" -h 1;\n\trowColumnLayout -numberOfColumns 3 -cs 1 10 -columnWidth 1 55 -columnWidth 2 185 -columnWidth 3 56;\n\ttext -l \"(After)\";\n\ttextFieldGrp -label \"\" -text \"_suffix\" -columnWidth 1 10 -columnWidth 2 168 suffixTFG;\n\tbutton -h 21 -l \"Add\" -bgc 0.1 0.2 0.2 -c \"Rename_KK_Kename(2)\";\nsetParent..;\nseparator -style \"in\" -w 315 ;\n\t\n//======================================================================\n// Quick suffix\n//frameLayout -label \" Add quick suffix\"  -bgc 0.25 0.25 0.25 -w 313 -fn \"tinyBoldLabelFont\";\t\nrowColumnLayout -numberOfColumns 5 -columnWidth 1 61 -columnWidth 2 61 -columnWidth 3 61 -columnWidth 4 61 -columnWidth 5 62;\n\tbutton -l \"grp\" -bgc 0.1 0.2 0.2 -c \"quickSuffix _grp\";\n\tbutton -l \"geo\" -bgc 0.1 0.2 0.2 -c \"quickSuffix _geo\";\n\tbutton -l \"ctl\" -bgc 0.1 0.2 0.2 -c \"quickSuffix _ctl\";\n\tbutton -l \"jnt\" -bgc 0.1 0.2 0.2 -c \"quickSuffix _jnt\";\n\tbutton -l \"drv\" -bgc 0.1 0.2 0.2 -c \"quickSuffix _drv\";\n\tsetParent ..;\nseparator -style \"in\" -w 315 ;       \n        \n\n//======================================================================\n// Search and Replace \n//frameLayout -label \"Search and Replace\"  -bgc 0.25 0.25 0.25 -w 311 -fn \"tinyBoldLabelFont\";\nrowColumnLayout -numberOfColumns 1 -columnWidth 1 313 ;\t\n\ttextFieldGrp -label \"Search:\" -text \"pasted_\" -columnWidth 1 70 -columnWidth 2 233 SearchAndReplace_SearchTFG;\n\ttextFieldGrp -label \"Replace:\" -text \"\" -columnWidth 1 70 -columnWidth 2 233 SearchAndReplace_ReplaceTFG;\n\tradioButtonGrp -bgc 0.25 0.25 0.25 -numberOfRadioButtons 3 -label \"\" -sl 1 -labelArray3 \"Hierarchy\" \"Selected\" \"All\" -columnWidth 1 30 SearchAndReplace_OptionRBG;\n\trowColumnLayout -numberOfColumns 1 -columnWidth 1 305 ;\n\tbutton  -h 23 -w 40-l \"Apply\" -bgc 0.1 0.2 0.2 -c \"SearchAndRename()\";\n\tsetParent..;\nsetParent..;\n\nwindow -e -wh 313 302 Quick_rename_toolWindow;\nshowWindow Quick_rename_toolWindow;\n\n}//Quick_rename_tool_Window\n\n//======================================================================\n//======================================================================\n// ---->  Remove Last character <----\n//======================================================================\n//======================================================================\n\nglobal proc remove_LastChr()\n{//remove_LastChr\n\n\n\tstring $jointSelected[0]= `ls -sl -long`;\n\tint $jointSelectedSize = size($jointSelected);\n\n\tfor ($i=$jointSelectedSize-1; $i >= 0; $i--)\n\t{\n\t\tstring $obj = $jointSelected[$i];\n\t\n\t\tstring $pathNodes[];\n\t\tint $numTokens = tokenize($obj, \"|\", $pathNodes);\n\t\tstring $myObj = $pathNodes[$numTokens - 1];\n\t\t\n\t\tint $stringSize = size($myObj);\n\n\t\t\n\t\tif ($stringSize > 1) \n\t\t{\n\t\t\tstring $newName = `substring $myObj 1 ($stringSize - 1)`;\n\t\t\trename $obj $newName;\n\t\t}\n\t}\t\n}//remove_LastChr\n\n\n\n//======================================================================\n//======================================================================\n// ---->  Remove First character <----\n//======================================================================\n//======================================================================\n\nglobal proc remove_FirstChr()\n{//remove_FirstChr\n\n\t\n\tstring $jointSelected[0]= `ls -sl -long`;\n\tint $jointSelectedSize = size($jointSelected);\n\n\tfor ($i=$jointSelectedSize-1; $i >= 0; $i--)\n\t{\n\t\tstring $obj = $jointSelected[$i];\n\t\n\t\tstring $pathNodes[];\n\t\tint $numTokens = tokenize($obj, \"|\", $pathNodes);\n\t\tstring $myObj = $pathNodes[$numTokens - 1];\n\t\t\n\t\tint $stringSize = size($myObj);\n\t\t\n\t\tif ($stringSize > 1) \n\t\t{\n\t\t\tstring $newName = `substring $myObj 2 $stringSize`;\n\t\t\trename $obj $newName;\n\t\t}\n\t}\n}//remove_FirstChr\n\n\n\n//======================================================================\n//======================================================================\n// ---->  Rename Selected Shapes <----\n//======================================================================\n//======================================================================\n\nglobal proc KK_RenameSelectedShape()\n{//KK_RenameSelectedShape\n\tstring $objects[] = `ls -sl`;\n\n\tstring $objTransform;\n\tfor ($objTransform in $objects)\n\t{\n\t\n\t\tstring $shapes[] = `listRelatives -s -f $objTransform`;\n\t\t\n\t\tstring $pathTransNodes[];\n\t\tint $numTokens = tokenize($objTransform, \"|\", $pathTransNodes);\n\t\tstring $myTransObj = $pathTransNodes[$numTokens - 1];\n\t\t\n\t\tstring $obj;\n\t\tint $num = 1;\n\t\t\n\t\tfor ($obj in $shapes)\n\t\t{\n\t\t\tstring $newShapeName = ($myTransObj + \"_Shape\" + $num);\n\t\t\trename $obj $newShapeName;\n\t\t\t$num += 1;\n\t\t}\n\t}\n}//KK_RenameSelectedShape\n\n\n\n//======================================================================\n//======================================================================\n// ---->  Search and Rename <----\n//======================================================================\n//======================================================================\n\nglobal proc SearchAndRename()\n{\n    string $search = `textFieldGrp -q -tx SearchAndReplace_SearchTFG`;\n\tstring $replace = `textFieldGrp -q -tx SearchAndReplace_ReplaceTFG`;\n\tstring $options = `radioButtonGrp -q -sl SearchAndReplace_OptionRBG`;\n\t\n\tif ($options == 1)\n\t{\n\t\t\tsearchReplaceNames $search $replace \"hierarchy\";\n\t}\n\t\n\telse if ($options == 2)\n\t{\n\t\t\tsearchReplaceNames $search $replace \"selected\";\n\t}\n\t\n\telse if ($options == 3)\n\t{\n\t\t\tsearchReplaceNames $search $replace \"all\";\n\t}\n}\n\n\n\n//======================================================================\n//======================================================================\n// ---->  Quick suffix <----\n//======================================================================\n//======================================================================\n\nglobal proc quickSuffix(string $suffix)\n{//quickSuffix\n\n\tstring $jointSelected[0]= `ls -sl -long`;\n\tint $jointSelectedSize = size($jointSelected);\n\n\tfor ($i=$jointSelectedSize-1; $i >= 0; $i--)\n\t{\n\t\tstring $obj = $jointSelected[$i];\n\t\n\t\tstring $pathNodes[];\n\t\tint $numTokens = tokenize($obj, \"|\", $pathNodes);\n\t\tstring $myObj = $pathNodes[$numTokens - 1];\n\t\t\n\t\trename $obj ($myObj + $suffix);\n\t}\n}//quickSuffix\n\n//======================================================================\n//======================================================================\n// ---->  hashRename\n//======================================================================\n//======================================================================\n\nglobal proc Rename_js_hashRename_MainProc()\n{\n\n    string $search = `textFieldGrp -q -tx Rename_js_hashRenameTFG`;\n    \n    if ($search != \"\")\n    {\n\t\tevalEcho (\"Rename_js_hashRename \\\"\" + $search + \"\\\"\");\n    }\n}\n\n\n\nglobal proc string Rename_js_replaceHash (string $string, int $number)\n{\n\n    string $result;\n    // we want to replace the #'s in the name with the $number.\n\n    string $substring = \"#+\";\n    $substring = `match $substring $string`;\n\n    // $substring is now the number of #'s\n    string $substringNum = substituteAllString($substring, \"#\", \"0\");\n    // now add the number at the end\n    string $numString = $number;\n\n    string $newString = ($substringNum + $numString);\n\n    // now strip away the start numbers so we only have the num left\n    int $fullSize =`size($newString)`;\n    int $numSize = `size($numString)`;\n    if ($numSize < size($substringNum))\n    {\n        $numSize = $numSize+1;\n        $numString = `substring $newString $numSize $fullSize`;\n    } \n    $result = `substitute $substring $string $numString`;\n    return $result;\n}\n\n\n\nglobal proc string[] Rename_js_hashRename (string $newName)\n{\n    // this procedure will rename the selected objects with $newName, and it will replace the # with a count.  It will zero-pad with the\n    // number of hashes\n\n    string $objs[0];\n    int $count = 0;\n    string $return[0];\n\n    $objs = `ls -sl`;\n\n    if (size($objs) > 0)\n    {\n        // create a dummy node for keeping track of all the objects.  when we rename them, it may change the object's\n        // names, which could get confusing for maya.\n        $node = `createNode unknown`;\n        addAttr -ln \"selObjects\" -at message -multi -im 0;\n\n        for ($obj in $objs)\n        {\n            // connect the attributes\n            connectAttr -na ($obj + \".message\") ($node + \".selObjects\");\n        }\n        \n        $con = `listConnections ($node + \".selObjects\")`;\n       \n        for ($x = 0; $x < size($con); $x++)\n        {\n            string $tmp[0];\n            $tmp = `listConnections ($node + \".selObjects[\"+$x+\"]\")`;\n            string $object = $tmp[0];\n      \n            // check the searchString for the #'s.  Based on the number of hashes, we'll replace them with the index number\n            $name = `Rename_js_replaceHash $newName ($x + 1)`;\n\n            // rename the object\n            $result = `rename $object $name`;\n            \n            print (\"// Renamed: \" + $object + \" --> \" + $result + \"\\n\");\n        } \n        $return = `listConnections ($node + \".selObjects\")`;\n        delete $node;\n\n    }\n    if ((`size $return`) > 0)\n        select $return;\n    return $return;\n}\n\n//======================================================================\n//======================================================================\n// ---->  cometRename.mel  procedures\n//======================================================================\n//======================================================================\n\n\n/*\n \n */\nproc string getShortName(string $obj)\n{\n    string $ret = \"\";\n    \n    if ($obj == \"\")\n        return $ret;\n        \n    string $parts[];\n    int $cnt = tokenize($obj, \"|\", $parts);\n    \n    if ($cnt <= 0)\n        $ret = $obj;\n    else\n        $ret = $parts[($cnt-1)];\n    \n    return $ret;\n}\n\n// --------------------------------------------------------------------------\n\nproc string chop(string $str)\n{\n    string $ret = \"\";\n\n    int $cnt = size($str);\n    \n    if ($cnt <= 1)\n        return $ret;\n    \n    $ret = `substring $str 1 ($cnt-1)`;\n\n    return $ret;\n}\n\n// --------------------------------------------------------------------------\n\nglobal proc Rename_KK_Kename(int $mode)\n{//Rename_KK_Kename\n    string $objs[] = `ls -sl -long`;\n    int $objCnt = size($objs);\n    int $i;\n\n\t// Get all UI data...\n\t//\n    string $prefix = `textFieldGrp -q -tx prefixTFG`;\n    string $suffix = `textFieldGrp -q -tx suffixTFG`;\n    string $rename = `textFieldGrp -q -tx KK_RenameRenameTFG`;\n    int $start = `intFieldGrp -q -v1 KK_RenameStartIFG`;\n    int $padding = `intFieldGrp -q -v1 KK_RenamePaddingIFG`;\n    \n    string $shortName;\n    string $newShortName;\n    string $newName;\n\n\t// Now do it\n\t//\n    for ($i=0; $i < $objCnt; ++$i)\n        {\n\t$obj = $objs[$i];\n\t\n\t$shortName = getShortName($obj);\n\t\t\n\tswitch ($mode)\n\t    {\n\t    case 1:\n\t        if ($prefix == \"\")\n\t            {\n\t            warning -sl 0 (\"Can't add prefix, prefix entry field is blank!\");\n\t            return;\n\t    \t    }\n\t        $newShortName = ($prefix + $shortName);\n\t        break;\n\n\t    case 2:\n\t        if ($suffix == \"\")\n\t            {\n\t            warning -sl 0 (\"Can't add suffix, suffix entry field is blank!\");\n\t            return;\n\t    \t    }\n\t        $newShortName = ($shortName + $suffix);\n\t        break;\n\n\t    case 3:\n\t        if ($rename == \"\")\n\t            {\n\t            warning -sl 0 (\"Can't rename and number, rename entry field is blank!\");\n\t            return;\n\t            }\n\t    \t\t// get index of string as user wants\n\t    \tint $n = $i + $start;\n\t    \t\t// pad of 0's\n\t    \tstring $padStr = \"\";\n\t    \t\n\t    \t\t// Add padding as needed\n\t    \tfor ($p=1; $p < $padding; ++$p)\n\t    \t{\n\t\t\t\tif ($n < pow(10, $p) )\n\t\t\t\t\t$padStr += \"0\";\n\t\t    }\n\t    \t\n\t    \t$newShortName = ($rename+$padStr+$n);\n\t        break;\n\n\t    } // end of switch\n\t\n\t\n\t$newName = `rename $obj $newShortName`;\n\tselect -r $newName;\n\tstring $newLongNames[] = `ls -sl -long`;\n\tstring $newLongName = $newLongNames[0];\n\t\n\t    // Now update rest of stuff in list in case |long|names\n\t    // required it\n\tfor ($j=0; $j < $objCnt; ++$j)\n\t    {\n\t    string $tmp = $objs[$j];\n\n\t    $tmp += \"|\";\t// add to end for easy replacing\n\t    $tmp = `substitute ($obj+\"|\") $tmp (\"|\"+$newLongName+\"|\")`;\n\t    $tmp = chop($tmp);\n\t    \n\t    $objs[$j] = $tmp;\n\t    }\n\t\n\n\t}  // end of for all objs\n\n    select $objs;\n}//Rename_KK_Kename\n\n//--------------------------\n//--------------------------\nQuick_rename_tool ()\n" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "\n//=============================================================..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Rename" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "\n//======================================================================\n// Window Procedures\n//======================================================================\nglobal proc Quick_rename_tool ()\n  {//Quick_rename_toolWindow\n\n  if (`window -q -exists Quick_rename_toolWindow`) deleteUI Quick_rename_toolWindow;\n  \n  window -s 0 -title \"Quick_rename_tool\" -maximizeButton 0 -minimizeButton 1 Quick_rename_toolWindow;\n\n//======================================================================\n// Rename Tools\ncolumnLayout;\nrowColumnLayout -numberOfColumns 1 -columnWidth 1 313 ;\n//frameLayout -label \"Rename and Number\"  -bgc 0.25 0.25 0.25 -w 313 -fn \"tinyBoldLabelFont\" ;\n\t\n  textFieldGrp -label \"Rename:\" -text \"\" -columnWidth 1 70 -columnWidth 2 235 KK_RenameRenameTFG;\n\t\t\t\nrowColumnLayout -numberOfColumns 2 -columnWidth 1 130 -columnWidth 2 170;\n\tintFieldGrp -label \"Start #:\" -v1 1 -columnWidth 1 68 -columnWidth 2 60 KK_RenameStartIFG;\n\tintFieldGrp -label \"Padding:\" -v1 2 -columnWidth 1 64 -columnWidth 2 60 KK_RenamePaddingIFG;\nsetParent..;\n\trowColumnLayout -numberOfColumns 1 -columnWidth 1 306 ;\n\tbutton -h 23 -w 100 -l \"Rename and Number\" -bgc 0.1 0.2 0.2 -c \"Rename_KK_Kename(3)\";\nsetParent..;\nseparator -style \"in\" -w 315 ;\n\t\n\t\t\t\n//======================================================================\n// Remove\n//frameLayout -label \"Simple rename\"  -bgc 0.25 0.25 0.25 -w 313 -fn \"tinyBoldLabelFont\";\t\nrowColumnLayout -numberOfColumns 3 -cs 1 10 -cs 3 4 -columnWidth 1 84 -columnWidth 2 104 -columnWidth 3 104;\n\ttext -label \"Remove...\" -align \"left\";\n\tbutton -h 23 -w 60 -l \"First Character-->\" -bgc 0.1 0.2 0.2 -c \"remove_FirstChr()\";\n\tbutton -h 23 -w 60 -l \"<--Last Character\" -bgc 0.1 0.2 0.2 -c \"remove_LastChr()\";\nsetParent..;\n\t\t\t\t\nrowColumnLayout -numberOfColumns 3 -cs 1 10 -columnWidth 1 70 -columnWidth 2 170 -columnWidth 3 56;\n\ttext -l \" Hash Rename:\";\n\ttextFieldGrp -label \"\" -text \"name_####_suffix\" -columnWidth 1 10 -columnWidth 2 153 Rename_js_hashRenameTFG;\n\tbutton -h 23 -w 48 -l \"Rename\" -bgc 0.1 0.2 0.2 -c \"Rename_js_hashRename_MainProc()\"; \n\tsetParent..;\nseparator -style \"in\" -w 315 ;\n\t\n//======================================================================\n// Prefix - Suffix\n\t//frameLayout -label \" Add prefix or suffix\"  -bgc 0.25 0.25 0.25 -w 313 -fn \"tinyBoldLabelFont\";\n\t//text -l \"\" -h 1;\n\trowColumnLayout -numberOfColumns 3 -cs 1 10 -columnWidth 1 55 -columnWidth 2 185 -columnWidth 3 56;\n\ttext -l \"(Before)\";\n\ttextFieldGrp -label \"\" -text \"prefix_\" -columnWidth 1 10 -columnWidth 2 168 prefixTFG;\n\tbutton -h 21 -l \"Add\" -bgc 0.1 0.2 0.2 -c \"Rename_KK_Kename(1)\";\nsetParent..;\n\ntext -l \"\" -h 1;\n\trowColumnLayout -numberOfColumns 3 -cs 1 10 -columnWidth 1 55 -columnWidth 2 185 -columnWidth 3 56;\n\ttext -l \"(After)\";\n\ttextFieldGrp -label \"\" -text \"_suffix\" -columnWidth 1 10 -columnWidth 2 168 suffixTFG;\n\tbutton -h 21 -l \"Add\" -bgc 0.1 0.2 0.2 -c \"Rename_KK_Kename(2)\";\nsetParent..;\nseparator -style \"in\" -w 315 ;\n\t\n//======================================================================\n// Quick suffix\n//frameLayout -label \" Add quick suffix\"  -bgc 0.25 0.25 0.25 -w 313 -fn \"tinyBoldLabelFont\";\t\nrowColumnLayout -numberOfColumns 5 -columnWidth 1 61 -columnWidth 2 61 -columnWidth 3 61 -columnWidth 4 61 -columnWidth 5 62;\n\tbutton -l \"grp\" -bgc 0.1 0.2 0.2 -c \"quickSuffix _grp\";\n\tbutton -l \"Geo\" -bgc 0.1 0.2 0.2 -c \"quickSuffix _Geo\";\n\tbutton -l \"ctl\" -bgc 0.1 0.2 0.2 -c \"quickSuffix _ctl\";\n\tbutton -l \"Jnt\" -bgc 0.1 0.2 0.2 -c \"quickSuffix _Jnt\";\n\tbutton -l \"drv\" -bgc 0.1 0.2 0.2 -c \"quickSuffix _drv\";\n\tsetParent ..;\nseparator -style \"in\" -w 315 ;       \n        \n\n//======================================================================\n// Search and Replace \n//frameLayout -label \"Search and Replace\"  -bgc 0.25 0.25 0.25 -w 311 -fn \"tinyBoldLabelFont\";\nrowColumnLayout -numberOfColumns 1 -columnWidth 1 313 ;\t\n\ttextFieldGrp -label \"Search:\" -text \"pasted_\" -columnWidth 1 70 -columnWidth 2 233 SearchAndReplace_SearchTFG;\n\ttextFieldGrp -label \"Replace:\" -text \"\" -columnWidth 1 70 -columnWidth 2 233 SearchAndReplace_ReplaceTFG;\n\tradioButtonGrp -bgc 0.25 0.25 0.25 -numberOfRadioButtons 3 -label \"\" -sl 1 -labelArray3 \"Hierarchy\" \"Selected\" \"All\" -columnWidth 1 30 SearchAndReplace_OptionRBG;\n\trowColumnLayout -numberOfColumns 1 -columnWidth 1 305 ;\n\tbutton  -h 23 -w 40-l \"Apply\" -bgc 0.1 0.2 0.2 -c \"SearchAndRename()\";\n\tsetParent..;\nsetParent..;\n\nwindow -e -wh 313 302 Quick_rename_toolWindow;\nshowWindow Quick_rename_toolWindow;\n\n}//Quick_rename_tool_Window\n\n//======================================================================\n//======================================================================\n// ---->  Remove Last character <----\n//======================================================================\n//======================================================================\n\nglobal proc remove_LastChr()\n{//remove_LastChr\n\n\n\tstring $jointSelected[0]= `ls -sl -long`;\n\tint $jointSelectedSize = size($jointSelected);\n\n\tfor ($i=$jointSelectedSize-1; $i >= 0; $i--)\n\t{\n\t\tstring $obj = $jointSelected[$i];\n\t\n\t\tstring $pathNodes[];\n\t\tint $numTokens = tokenize($obj, \"|\", $pathNodes);\n\t\tstring $myObj = $pathNodes[$numTokens - 1];\n\t\t\n\t\tint $stringSize = size($myObj);\n\n\t\t\n\t\tif ($stringSize > 1) \n\t\t{\n\t\t\tstring $newName = `substring $myObj 1 ($stringSize - 1)`;\n\t\t\trename $obj $newName;\n\t\t}\n\t}\t\n}//remove_LastChr\n\n\n\n//======================================================================\n//======================================================================\n// ---->  Remove First character <----\n//======================================================================\n//======================================================================\n\nglobal proc remove_FirstChr()\n{//remove_FirstChr\n\n\t\n\tstring $jointSelected[0]= `ls -sl -long`;\n\tint $jointSelectedSize = size($jointSelected);\n\n\tfor ($i=$jointSelectedSize-1; $i >= 0; $i--)\n\t{\n\t\tstring $obj = $jointSelected[$i];\n\t\n\t\tstring $pathNodes[];\n\t\tint $numTokens = tokenize($obj, \"|\", $pathNodes);\n\t\tstring $myObj = $pathNodes[$numTokens - 1];\n\t\t\n\t\tint $stringSize = size($myObj);\n\t\t\n\t\tif ($stringSize > 1) \n\t\t{\n\t\t\tstring $newName = `substring $myObj 2 $stringSize`;\n\t\t\trename $obj $newName;\n\t\t}\n\t}\n}//remove_FirstChr\n\n\n\n//======================================================================\n//======================================================================\n// ---->  Rename Selected Shapes <----\n//======================================================================\n//======================================================================\n\nglobal proc KK_RenameSelectedShape()\n{//KK_RenameSelectedShape\n\tstring $objects[] = `ls -sl`;\n\n\tstring $objTransform;\n\tfor ($objTransform in $objects)\n\t{\n\t\n\t\tstring $shapes[] = `listRelatives -s -f $objTransform`;\n\t\t\n\t\tstring $pathTransNodes[];\n\t\tint $numTokens = tokenize($objTransform, \"|\", $pathTransNodes);\n\t\tstring $myTransObj = $pathTransNodes[$numTokens - 1];\n\t\t\n\t\tstring $obj;\n\t\tint $num = 1;\n\t\t\n\t\tfor ($obj in $shapes)\n\t\t{\n\t\t\tstring $newShapeName = ($myTransObj + \"_Shape\" + $num);\n\t\t\trename $obj $newShapeName;\n\t\t\t$num += 1;\n\t\t}\n\t}\n}//KK_RenameSelectedShape\n\n\n\n//======================================================================\n//======================================================================\n// ---->  Search and Rename <----\n//======================================================================\n//======================================================================\n\nglobal proc SearchAndRename()\n{\n    string $search = `textFieldGrp -q -tx SearchAndReplace_SearchTFG`;\n\tstring $replace = `textFieldGrp -q -tx SearchAndReplace_ReplaceTFG`;\n\tstring $options = `radioButtonGrp -q -sl SearchAndReplace_OptionRBG`;\n\t\n\tif ($options == 1)\n\t{\n\t\t\tsearchReplaceNames $search $replace \"hierarchy\";\n\t}\n\t\n\telse if ($options == 2)\n\t{\n\t\t\tsearchReplaceNames $search $replace \"selected\";\n\t}\n\t\n\telse if ($options == 3)\n\t{\n\t\t\tsearchReplaceNames $search $replace \"all\";\n\t}\n}\n\n\n\n//======================================================================\n//======================================================================\n// ---->  Quick suffix <----\n//======================================================================\n//======================================================================\n\nglobal proc quickSuffix(string $suffix)\n{//quickSuffix\n\n\tstring $jointSelected[0]= `ls -sl -long`;\n\tint $jointSelectedSize = size($jointSelected);\n\n\tfor ($i=$jointSelectedSize-1; $i >= 0; $i--)\n\t{\n\t\tstring $obj = $jointSelected[$i];\n\t\n\t\tstring $pathNodes[];\n\t\tint $numTokens = tokenize($obj, \"|\", $pathNodes);\n\t\tstring $myObj = $pathNodes[$numTokens - 1];\n\t\t\n\t\trename $obj ($myObj + $suffix);\n\t}\n}//quickSuffix\n\n//======================================================================\n//======================================================================\n// ---->  hashRename\n//======================================================================\n//======================================================================\n\nglobal proc Rename_js_hashRename_MainProc()\n{\n\n    string $search = `textFieldGrp -q -tx Rename_js_hashRenameTFG`;\n    \n    if ($search != \"\")\n    {\n\t\tevalEcho (\"Rename_js_hashRename \\\"\" + $search + \"\\\"\");\n    }\n}\n\n\n\nglobal proc string Rename_js_replaceHash (string $string, int $number)\n{\n\n    string $result;\n    // we want to replace the #'s in the name with the $number.\n\n    string $substring = \"#+\";\n    $substring = `match $substring $string`;\n\n    // $substring is now the number of #'s\n    string $substringNum = substituteAllString($substring, \"#\", \"0\");\n    // now add the number at the end\n    string $numString = $number;\n\n    string $newString = ($substringNum + $numString);\n\n    // now strip away the start numbers so we only have the num left\n    int $fullSize =`size($newString)`;\n    int $numSize = `size($numString)`;\n    if ($numSize < size($substringNum))\n    {\n        $numSize = $numSize+1;\n        $numString = `substring $newString $numSize $fullSize`;\n    } \n    $result = `substitute $substring $string $numString`;\n    return $result;\n}\n\n\n\nglobal proc string[] Rename_js_hashRename (string $newName)\n{\n    // this procedure will rename the selected objects with $newName, and it will replace the # with a count.  It will zero-pad with the\n    // number of hashes\n\n    string $objs[0];\n    int $count = 0;\n    string $return[0];\n\n    $objs = `ls -sl`;\n\n    if (size($objs) > 0)\n    {\n        // create a dummy node for keeping track of all the objects.  when we rename them, it may change the object's\n        // names, which could get confusing for maya.\n        $node = `createNode unknown`;\n        addAttr -ln \"selObjects\" -at message -multi -im 0;\n\n        for ($obj in $objs)\n        {\n            // connect the attributes\n            connectAttr -na ($obj + \".message\") ($node + \".selObjects\");\n        }\n        \n        $con = `listConnections ($node + \".selObjects\")`;\n       \n        for ($x = 0; $x < size($con); $x++)\n        {\n            string $tmp[0];\n            $tmp = `listConnections ($node + \".selObjects[\"+$x+\"]\")`;\n            string $object = $tmp[0];\n      \n            // check the searchString for the #'s.  Based on the number of hashes, we'll replace them with the index number\n            $name = `Rename_js_replaceHash $newName ($x + 1)`;\n\n            // rename the object\n            $result = `rename $object $name`;\n            \n            print (\"// Renamed: \" + $object + \" --> \" + $result + \"\\n\");\n        } \n        $return = `listConnections ($node + \".selObjects\")`;\n        delete $node;\n\n    }\n    if ((`size $return`) > 0)\n        select $return;\n    return $return;\n}\n\n//======================================================================\n//======================================================================\n// ---->  cometRename.mel  procedures\n//======================================================================\n//======================================================================\n\n\n/*\n \n */\nproc string getShortName(string $obj)\n{\n    string $ret = \"\";\n    \n    if ($obj == \"\")\n        return $ret;\n        \n    string $parts[];\n    int $cnt = tokenize($obj, \"|\", $parts);\n    \n    if ($cnt <= 0)\n        $ret = $obj;\n    else\n        $ret = $parts[($cnt-1)];\n    \n    return $ret;\n}\n\n// --------------------------------------------------------------------------\n\nproc string chop(string $str)\n{\n    string $ret = \"\";\n\n    int $cnt = size($str);\n    \n    if ($cnt <= 1)\n        return $ret;\n    \n    $ret = `substring $str 1 ($cnt-1)`;\n\n    return $ret;\n}\n\n// --------------------------------------------------------------------------\n\nglobal proc Rename_KK_Kename(int $mode)\n{//Rename_KK_Kename\n    string $objs[] = `ls -sl -long`;\n    int $objCnt = size($objs);\n    int $i;\n\n\t// Get all UI data...\n\t//\n    string $prefix = `textFieldGrp -q -tx prefixTFG`;\n    string $suffix = `textFieldGrp -q -tx suffixTFG`;\n    string $rename = `textFieldGrp -q -tx KK_RenameRenameTFG`;\n    int $start = `intFieldGrp -q -v1 KK_RenameStartIFG`;\n    int $padding = `intFieldGrp -q -v1 KK_RenamePaddingIFG`;\n    \n    string $shortName;\n    string $newShortName;\n    string $newName;\n\n\t// Now do it\n\t//\n    for ($i=0; $i < $objCnt; ++$i)\n        {\n\t$obj = $objs[$i];\n\t\n\t$shortName = getShortName($obj);\n\t\t\n\tswitch ($mode)\n\t    {\n\t    case 1:\n\t        if ($prefix == \"\")\n\t            {\n\t            warning -sl 0 (\"Can't add prefix, prefix entry field is blank!\");\n\t            return;\n\t    \t    }\n\t        $newShortName = ($prefix + $shortName);\n\t        break;\n\n\t    case 2:\n\t        if ($suffix == \"\")\n\t            {\n\t            warning -sl 0 (\"Can't add suffix, suffix entry field is blank!\");\n\t            return;\n\t    \t    }\n\t        $newShortName = ($shortName + $suffix);\n\t        break;\n\n\t    case 3:\n\t        if ($rename == \"\")\n\t            {\n\t            warning -sl 0 (\"Can't rename and number, rename entry field is blank!\");\n\t            return;\n\t            }\n\t    \t\t// get index of string as user wants\n\t    \tint $n = $i + $start;\n\t    \t\t// pad of 0's\n\t    \tstring $padStr = \"\";\n\t    \t\n\t    \t\t// Add padding as needed\n\t    \tfor ($p=1; $p < $padding; ++$p)\n\t    \t{\n\t\t\t\tif ($n < pow(10, $p) )\n\t\t\t\t\t$padStr += \"0\";\n\t\t    }\n\t    \t\n\t    \t$newShortName = ($rename+$padStr+$n);\n\t        break;\n\n\t    } // end of switch\n\t\n\t\n\t$newName = `rename $obj $newShortName`;\n\tselect -r $newName;\n\tstring $newLongNames[] = `ls -sl -long`;\n\tstring $newLongName = $newLongNames[0];\n\t\n\t    // Now update rest of stuff in list in case |long|names\n\t    // required it\n\tfor ($j=0; $j < $objCnt; ++$j)\n\t    {\n\t    string $tmp = $objs[$j];\n\n\t    $tmp += \"|\";\t// add to end for easy replacing\n\t    $tmp = `substitute ($obj+\"|\") $tmp (\"|\"+$newLongName+\"|\")`;\n\t    $tmp = chop($tmp);\n\t    \n\t    $objs[$j] = $tmp;\n\t    }\n\t\n\n\t}  // end of for all objs\n\n    select $objs;\n}//Rename_KK_Kename\n\n//--------------------------\n//--------------------------\nQuick_rename_tool ()\n" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "\nfrom skinningTool import SkinningToolsUI\n\nSkinningToolsUI.startUI()" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "SknTOolllll" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "SknTOolllll" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "\nfrom skinningTool import SkinningToolsUI\n\nSkinningToolsUI.startUI()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "RGctrl 1;\n\nglobal proc RGctrl(int $YN)\n{\n\n    if($YN == 1)\n    {\n        if(`dockControl -ex rgdock `){deleteUI rgdock; } \n        if(`window -ex RGctrl`){deleteUI RGctrl;};\n         \n        RGctrlWIN;\n        dockControl -area \"right\" -fl 0\n                -content RGctrl -l \"RGctrl\"\n                -allowedArea \"right\" rgdock;\n    }\n    else \n    {\n        if(`dockControl -ex rgdock `){deleteUI rgdock; } \n        if(`window -ex RGctrl`){deleteUI RGctrl;};\n        RGctrlWIN;\n    }\n\n}\n      \n\n//////////////////////////////////////////////////////////////////////\n////////////////////////////  RGctrlWIN  ///////////////////////////\n/////////////////////////////////////////////////////////////////////\n\n\nglobal proc RGctrlWIN()\n{\n    if(`window -ex RGctrl`){deleteUI RGctrl;};\n    window -title \"RG Controller v2.1\" -s 0 RGctrl;\n    formLayout topLayout;\n    \n        //////////////// Zone 3    \n        columnLayout  -p topLayout -adj 1 ColClm;\n            text   -al left -bgc 0 0.1 0.2 -l \"  Color :         \" cntTxt;\n            button -l \"    None    \" -c  \"overrideColor(0)\";\n            button -l \"\" -bgc 0 0 1 -c  \"overrideColor(6)\";\n            button -l \"\" -bgc 1 0 0 -c  \"overrideColor(13)\";\n            button -l \"\" -bgc 0 1 0 -c  \"overrideColor(14)\";\n            button -l \"\" -bgc 0 1 1 -c  \"overrideColor(18)\";\n            button -l \"\" -bgc 1 1 0 -c  \"overrideColor(17)\";\n            text -l \"\"; \n            text   -al left -bgc 0 0.1 0.2 -l \"  Axis :         \" axsTxt;\n            checkBox -v 1 -l \"Orient Child\" orntCB;\n            button -l \"Y UP\" -bgc 0 0.5 0.5 -c \"orientJnt YUP\" yUpBtt ;\n            button -l \"Y DN\" -bgc 0 0.5 0.5 -c \"orientJnt YDN\" yDnBtt ;\n            button -l \"Z UP\" -bgc 0 0.5 0.5 -c \"orientJnt ZUP\" zUpBtt ;\n            button -l \"Z DN\" -bgc 0 0.5 0.5 -c \"orientJnt ZDN\" zDnBtt ;\n            button -l \"None\" -bgc 0 0.5 0.5 -c \"orientJnt NONE\" nonBtt ;\n            button -l \"LRA\"  -bgc 0 0.5 0.5 -c \"\" lraBtt ;\n\n    \n    \n        //////////////// Zone 2\n        columnLayout -p topLayout -adj 1 wireCnt;\n            text   -al left -bgc 0 0.1 0.2 -l \"  Controller :              \" cntTxt;\n            button -bgc 0.2 0.2 0.3 -l \"Triangle\" -c \"cntWireNw Triangle\";\n            button -bgc 0.2 0.2 0.3 -l \"Circle\" -c \"cntWireNw Circle\";\n            button -bgc 0.2 0.2 0.3 -l \"Square\" -c \"cntWireNw Square\";\n            button -bgc 0.2 0.2 0.3 -l \"Fat Cross\" -c \"cntWireNw FatCross\";\n            button -bgc 0.2 0.2 0.3 -l \"Pyramid\" -c \"cntWireNw Pyramid\";\n            button -bgc 0.2 0.2 0.3 -l \"Cube\" -c \"cntWireNw Cube\";\n            button -bgc 0.2 0.2 0.3 -l \"Sphere\" -c \"cntWireNw Sphere\";\n            button -bgc 0.2 0.2 0.3 -l \"Cone\" -c \"cntWireNw Cone\";\n            button -bgc 0.2 0.2 0.3 -l \"Rombus\" -c \"cntWireNw Rombus\";\n            button -bgc 0.2 0.2 0.3 -l \"Single Normal\" -c \"cntWireNw SingleNormal\";\n            button -bgc 0.2 0.2 0.3 -l \"Four Normal\" -c \"cntWireNw FourNormal\";\n            button -bgc 0.2 0.2 0.3 -l \"Dumbell\" -c \"cntWireNw Dumbell\";\n            button -bgc 0.2 0.2 0.3 -l \"Arrow On Ball\" -c \"cntWireNw ArrowOnBall\";\n            button -bgc 0.3 0.5 0.2 -l \"Shape Replacer\" -c \"shpRplc\";\n        \n        \n     //////////////// Zone 1   \n    formLayout -p topLayout mainLayout;\n        text -p mainLayout -al left -bgc 0 0.1 0.2 -l \"\\t           --Rahul Gawade--\" ownTxt;\n \n        text -p mainLayout -al left -bgc 0 0.1 0.2 -l \"  Joints :\" jntTxt;\n        \n        formLayout -p mainLayout -bgc 0.4 0.4 0.4 jntgrid;\n            checkBox  -v 1 -l \"Uv Axis\" uvAxisCB;  \n            button -l \"Jnt @ Center\" -bgc 0 0.5 0.5 -c RGjntAtCntr FKCB;  \n            button -l \"Component\" -bgc 0 0.5 0.5 -c cmpntJntCreator Cmpnt ;\n            button -l \"Volume\" -bgc 0 0.5 0.5 -c  jntAtCntr Vlm ;\n                   \n        text -p mainLayout -al left -bgc 0 0.1 0.2 -l \"  Constaints :\" lbTxt;\n        \n        gridLayout -p mainLayout -bgc 0.4 0.4 0.4 -cr 1 -numberOfColumns 3 -cellWidthHeight 80 30 radiogrid;\n            radioCollection cnst;\n            radioButton -label \"Point\" pnt;\n            radioButton -label \"Orient\" ort;\n            radioButton -sl -label \"Parent\" prnt;\n            checkBox  -v 1 -l \"Scale\" sclCB;\n        \n        text -p mainLayout -bgc 0 0.1 0.2 -al left -l \"  Constaints Axis :\" lbTxt2;\n        \n        gridLayout  -bgc 0.4 0.4 0.4 -p mainLayout -cr 1 -numberOfColumns 3 -cellWidthHeight 80 30 axisGrid;\n            radioCollection ax;\n            radioButton -label \"X\" x;\n            radioButton -sl -label \"Y\" y;\n            radioButton -label \"Z\" z; \n            checkBox  -v 0 -l \"Proxy\" -cc RGprxCB pxCB; \n            text -l \"\"; \n            checkBox  -en 0 -v 0 -l \"Neg Trans\" negCB;  \n        button -p mainLayout -l \"Float\" -bgc 0 0.5 0.5 -c (\"doIt 0\") cnt ;\n        button -p mainLayout -l \"FK\" -bgc 0 0.5 0.5 -c  (\"doIt 1\") prxcnt ;\n\n\n    // Extra Layout\n    formLayout  -p topLayout  -numberOfDivisions 100 xtraLay;\n    string $columnLX = `columnLayout  -p xtraLay -adjustableColumn true`;\n    button -l \"Fk Parnt\" -bgc 0.3 0.5 0.2 -c prntFk;\n    button -l \"Folicle\" -bgc 0.3 0.5 0.2 -c RGuvFlc;\n    \n    string $columnRX = `columnLayout -p xtraLay -adjustableColumn true`;\n    button -l \"Zero Out\" -bgc 0.3 0.5 0.2 -c RGzeroOut;\n    button -l \"Re-Skin\" -bgc 0.3 0.5 0.2 -c RGreSkin;\n    \n    formLayout -edit\n        -attachForm     $columnLX     \"top\"    4\n        -attachForm     $columnLX     \"left\"   1\n        -attachForm     $columnLX     \"bottom\" 1 \n        -attachPosition $columnLX     \"right\"  1 50\n    \n        -attachForm     $columnRX     \"top\"    4\n        -attachPosition $columnRX     \"left\"   1 50\n        -attachForm     $columnRX     \"bottom\" 1 \n        -attachForm     $columnRX     \"right\"  1\n        \n        \n    xtraLay;\n    \n\n    // Dynamic Layout\n    text -p mainLayout -al left -bgc 0 0.1 0.2 -l \"  Dynamics :\" dnyTxt;\n    formLayout  -p mainLayout -bgc 0.4 0.4 0.4 -numberOfDivisions 100 shp;\n    string $columnL = `columnLayout  -p shp -adjustableColumn true`;\n    button -l \"Add Dynamic\" -bgc 0 0.5 0.5 -c dynaSetup;\n    button -l \"Add Dyna\" -bgc 0 0.5 0.5 -c addDyna;\n    checkBox -v 1 -l \"with nucleus\" -h 23 -bgc 0 0.5 0.5 Ncb;\n    string $columnR = `columnLayout -p shp -adjustableColumn true`;\n    button -l \"Remove Dynamic\" -bgc 0 0.5 0.5 -c rmDynaSetup;\n    button -l \"Add PropA\" -bgc 0 0.5 0.5 -c addPropA;\n    button -l \"Connect nucleus\" -bgc 0 0.5 0.5 -c CN;\n    string $close = `button -p shp -bgc 0.2 0.2 0.3 -l \"Transfer Attribute\" -c transAtt`;\n    \n    formLayout -edit\n        -attachForm     $columnL     \"top\"    5\n        -attachForm     $columnL     \"left\"   5\n        -attachControl  $columnL     \"bottom\" 5 $close\n        -attachPosition $columnL     \"right\"  5 50\n    \n        -attachForm     $columnR     \"top\"    5\n        -attachPosition $columnR     \"left\"   0 50\n        -attachControl  $columnR     \"bottom\" 5 $close\n        -attachForm     $columnR     \"right\"  5\n        \n        \n        -attachNone     $close       \"top\"    \n        -attachForm     $close       \"left\"   5 \n        -attachForm     $close       \"bottom\" 5 \n        -attachForm     $close       \"right\"  5\n        \n    shp;\n \n \n \n           \n    formLayout -edit\n\n        -attachForm     ownTxt       \"top\"    5\n        -attachForm     ownTxt       \"left\"   5\n        -attachControl  ownTxt       \"bottom\" 5 jntTxt\n        -attachForm     ownTxt       \"right\"  5\n                \n        -attachNone     jntTxt       \"top\"    \n        -attachForm     jntTxt       \"left\"   5\n        -attachControl  jntTxt       \"bottom\" 5 jntgrid\n        -attachForm     jntTxt       \"right\"  5\n        \n        -attachNone     jntgrid       \"top\"    \n        -attachForm     jntgrid       \"left\"   5\n        -attachControl  jntgrid       \"bottom\" 5 lbTxt\n        -attachForm     jntgrid       \"right\"  5\n          \n        -attachNone     lbTxt       \"top\"    \n        -attachForm     lbTxt       \"left\"   5\n        -attachControl  lbTxt       \"bottom\" 5 radiogrid\n        -attachForm     lbTxt       \"right\"  5\n    \n        -attachNone     radiogrid   \"top\"    \n        -attachForm     radiogrid   \"left\"   5\n        -attachControl  radiogrid   \"bottom\" 5 lbTxt2\n        -attachForm     radiogrid   \"right\"  5\n        \n        -attachNone     lbTxt2       \"top\"    \n        -attachForm     lbTxt2       \"left\"   5\n        -attachControl  lbTxt2       \"bottom\" 5 axisGrid\n        -attachForm     lbTxt2       \"right\"  5\n    \n        -attachNone     axisGrid       \"top\"    \n        -attachForm     axisGrid       \"left\"   5\n        -attachControl  axisGrid       \"bottom\" 5 cnt\n        -attachForm     axisGrid       \"right\"  5\n    \n    \n        -attachNone     cnt         \"top\"    \n        -attachForm     cnt         \"left\"   5 \n        -attachControl  cnt         \"bottom\" 5 dnyTxt\n        -attachPosition cnt         \"right\"  5 50\n        \n        -attachNone     prxcnt      \"top\"    \n        -attachControl  prxcnt      \"left\"   5 cnt\n        -attachControl  prxcnt      \"bottom\" 5 dnyTxt\n        -attachForm     prxcnt      \"right\"  5    \n\n        -attachNone     dnyTxt      \"top\"    \n        -attachForm     dnyTxt      \"left\"   5\n        -attachControl  dnyTxt      \"bottom\" 5 shp\n        -attachForm     dnyTxt      \"right\"  5 \n                   \n        -attachNone     shp         \"top\"\n        -attachForm     shp         \"left\"   5\n        -attachForm     shp         \"bottom\" 5 \n        -attachForm     shp         \"right\"  5\n        \n    mainLayout;\n\n    formLayout -edit\n        \n        -attachForm     uvAxisCB       \"top\"    5\n        -attachForm     uvAxisCB       \"left\"   5 \n        -attachNone     uvAxisCB       \"bottom\" \n        -attachForm     uvAxisCB       \"right\"  5 \n\n        -attachForm     FKCB           \"top\"    5 \n        -attachPosition FKCB           \"left\"   5 50\n        -attachNone     FKCB           \"bottom\" \n        -attachForm     FKCB           \"right\"  5\n        \n        -attachControl  Cmpnt           \"top\"    13 uvAxisCB\n        -attachForm     Cmpnt           \"left\"   5 \n        -attachForm     Cmpnt           \"bottom\" 5\n        -attachControl  Cmpnt           \"right\"  5 Vlm\n\n        -attachControl  Vlm           \"top\"    5 FKCB\n        -attachPosition Vlm           \"left\"   5 50\n        -attachForm     Vlm           \"bottom\" 5\n        -attachForm     Vlm           \"right\"  5\n        \n                \n    jntgrid;\n \n \n    formLayout -edit\n        \n        -attachForm     mainLayout    \"top\"    0 \n        -attachForm     mainLayout    \"left\"   5\n        -attachNone     mainLayout    \"bottom\" \n        -attachNone     mainLayout    \"right\"  \n\n        -attachForm     wireCnt       \"top\"    5\n        -attachControl  wireCnt       \"left\"   5 mainLayout\n        -attachNone     wireCnt       \"bottom\" \n        -attachControl  wireCnt       \"right\"  5 ColClm\n\n        -attachForm     ColClm       \"top\"    5\n        -attachNone     ColClm       \"left\"   \n        -attachNone     ColClm       \"bottom\"  \n        -attachForm     ColClm       \"right\"  5 \n        \n        -attachControl  xtraLay       \"top\"    5 ColClm        \n        -attachControl  xtraLay       \"left\"   5 mainLayout\n        -attachForm     xtraLay       \"bottom\" 5 \n        -attachForm     xtraLay       \"right\"  5 \n\n    topLayout; \n\n \n \n    \n    showWindow RGctrl;\n}\n\nglobal proc RGprxCB()\n{\n    int $val =`checkBox  -q -v pxCB`; \n    if($val == 1)\n    {\n        checkBox  -e -en 1 -v 1 negCB;  \n    }\n    else\n    {\n        checkBox  -e -en 0 -v 0 negCB;          \n    }  \n}\n\n\nglobal proc RGjntAtCntr()\n{\n    string $sel[] =`ls -sl`;\n    if(`size $sel` != 0)\n    {\n        for ($each in $sel)\n        {\n           \n            float $center[]={};\n            float $bbox[] = `exactWorldBoundingBox $each`;\n            $center[0] = ( $bbox[0] + $bbox[3] )/2;\n            $center[1] = ( $bbox[1] + $bbox[4] )/2;\n            $center[2] = ( $bbox[2] + $bbox[5] )/2;   \n            select -cl  ;\n            joint -p $center[0] $center[1] $center[2] -n ($each + \"_Jnt\");\n        }     \n    }\n    else\n    {\n        error \"Nakari ki nakari hi rahegi Select multiple Objects\";\n    }\n}\n\n\n\nglobal proc RGzeroOut()\n{\n    string $sel[] =`ls -sl`;\n    if(`size $sel` != 0)\n    {\n        for ($each in $sel)\n        {\n          string $grp = `group -em -n ($each + \"_grp\")`;  \n          float $pos[] =`xform -q -ws -rp $each`;\n          float $rot[] =`xform -q -ws -ro $each`;\n          xform -ws -t $pos[0] $pos[1] $pos[2] $grp;\n          xform -ws -ro $rot[0] $rot[1] $rot[2] $grp;\n          string $prnt[] =`listRelatives -p $each`;\n          \n          if(`size($prnt)` != 0)\n          {\n              parent $grp $prnt[0];\n              parent $each $grp;\n          }\n          else\n          {\n              parent $each $grp;              \n          }\n          \n        }\n    }\n    else\n    {\n        error \"school nahi gaye kya pata nahi Zero Out kya hai\";\n    }\n}        \n\n//////////////////////////////////////////////////////////////////////\n//////////////////////////  Re-Skin Object  /////////////////////////\n/////////////////////////////////////////////////////////////////////\n\n\nglobal proc RGreSkin ()\n{\nstring $sel[]=`ls -sl`;\n    \n    if(`size $sel` != 0)\n    {\n\n        for($i = 0; $i<`size($sel)`; $i++)\n        {\n            \n            string $skinclst  = `findRelatedSkinCluster($sel[$i])`;\n            \n            if($skinclst != \"\")\n            {\n                string $shp[] =`ls -dag -s $sel[$i]`;\n                string $jnts[] =`skinCluster -q -inf $skinclst`;\n                skinCluster -e  -ubk $shp[0];\n                catchQuiet(`delete \"*bindPose*\"`);\n                skinCluster $jnts $shp[0];\n            }\n            else\n            {\n                error \"dub mar jake select skin object\";\n            }\n \n        }\n    }\n    else\n    {\n        error \"dub mar jake select skin object\";\n    }\n}    \n    \n//////////////////////////////////////////////////////////////////////\n////////////////////////////  Display LRA  ///////////////////////////\n/////////////////////////////////////////////////////////////////////\n\nglobal proc RGLRA ()\n{\nstring $sel[]=`ls -sl`;\n    for($i = 0; $i<`size($sel)`; $i++)\n    {\n        if(`objectType -isType \"joint\" $sel[$i]`)\n        {\n            float $val= `getAttr ($sel[$i] + \".displayLocalAxis\")`;\n            if($val == 0)\n                setAttr ($sel[$i] + \".displayLocalAxis\") 1;\n            else\n                setAttr ($sel[$i] + \".displayLocalAxis\") 0;\n\n        }\n    }\n}\n\n//////////////////////////////////////////////////////////////////////\n///////////////////////////  orient Joint  //////////////////////////\n/////////////////////////////////////////////////////////////////////\n\nglobal proc orientJnt (string $TYPE)\n{\nstring $sel[]=`ls -sl`;\n    for($i = 0; $i<`size($sel)`; $i++)\n    {\n        if(`objectType -isType \"joint\" $sel[$i]`)\n        {\n            string $cld[] =`listRelatives -c $sel[$i]`;\n            if(`size($cld)` != 0)\n            {\n                 int $val=`checkBox -q -v orntCB`;\n\n                if($val == 0)\n                {\n                    switch ($TYPE)\n                    {\n                        case \"YUP\" :\n                            joint -e  -oj xyz -secondaryAxisOrient yup $sel[$i];\n                        break ; \n                        \n                        case \"YDN\" :\n                            joint -e  -oj xyz -secondaryAxisOrient ydown $sel[$i];\n                        break ; \n                        \n                        case \"ZUP\" :\n                            joint -e  -oj xzy -secondaryAxisOrient yup $sel[$i];\n                        break ; \n                        \n                        case \"ZDN\" :\n                            joint -e  -oj xzy -secondaryAxisOrient ydown $sel[$i];\n                        break ;  \n                        \n                        case \"NONE\" :\n                            joint -e  -oj none $sel[$i];\n                        break ;  \n                    } \n                }\n                else\n                {\n                    switch ($TYPE)\n                    {\n                        case \"YUP\" :\n                            joint -e -ch -oj xyz -secondaryAxisOrient yup $sel[$i];\n                        break ; \n                        \n                        case \"YDN\" :\n                            joint -e -ch  -oj xyz -secondaryAxisOrient ydown $sel[$i];\n                        break ; \n                        \n                        case \"ZUP\" :\n                            joint -e -ch  -oj xzy -secondaryAxisOrient yup $sel[$i];\n                        break ; \n                        \n                        case \"ZDN\" :\n                            joint -e -ch  -oj xzy -secondaryAxisOrient ydown $sel[$i];\n                        break ;  \n                        \n                        case \"NONE\" :\n                            joint -e -ch  -oj none $sel[$i];\n                        break ;  \n                    } \n                }              \n               \n            }\n            else\n            {\n                 switch ($TYPE)\n                {\n                    case \"NONE\" :\n                        joint -e  -oj none $sel[$i];\n                    break ;  \n                } \n            }         \n        }\n    }\n}\n\n//////////////////////////////////////////////////////////////////////\n//////////////////////////  override Color  /////////////////////////\n/////////////////////////////////////////////////////////////////////\n\nglobal proc overrideColor(int $Index) {\n    string $selected[]=`ls -sl`;\n    int $amount=`size($selected)`;\n    for ($n=0; $n<$amount; $n++) {\n        setAttr ($selected[$n] + \".overrideEnabled\") 1;\n    };\n\n    for ($n=0; $n<$amount; $n++) {\n        setAttr ($selected[$n] + \".overrideColor\") $Index;\n    };\n}\n\n//////////////////////////////////////////////////////////////////////\n////////////////////////  Parent FK Hierarchy  ///////////////////////\n//////////////////////////////////////////////////////////////////////\n\nglobal proc prntFk()\n{\n    string $sel[] =`ls -os`;\n    \n    if(`size($sel)` != 1)\n    {\n        for($i = (size($sel)-1); $i>0; $i--)\n        {\n            parent $sel[$i] $sel[$i-1];\n        }\n    }\n}\n\n//////////////////////////////////////////////////////////////////////\n//////////////////////  Component Joint Creator  /////////////////////\n//////////////////////////////////////////////////////////////////////\n\nglobal proc cmpntJntCreator()\n{\n    string $sel[] =`ls -fl -os`;\n    int $uvChk = `checkBox -q -v uvAxisCB`;\n    \n    if(`size($sel)` == 0)\n    {\n         error \"sharam kar abhi tak etana bhi nahi path select component\";\n    }\n    else\n    {\n    for($i = 0; $i<`size($sel)`; $i++)\n    {\n        \n            if($uvChk == 1)\n            {\n                string $converted[] =`polyListComponentConversion -fv -fe -ff -fvf -fuv -tuv $sel[$i]`;\n                    if(`gmatch $sel[$i] \"*.vtx*\"` || `gmatch $sel[$i] \"*.map*\"`){\n                        float $uv[] =`polyEditUV -q $converted[0]`;\n                        uvJnt $converted[0] $uv[0] $uv[1];\n                    }\n                    \n                    if(`gmatch $sel[$i] \"*.e*\"`){\n                        string $flatCom[] =`ls -fl $converted`;\n                        float $uv[] =`polyEditUV -q $flatCom[0]`;\n                        uvJnt $flatCom[0] $uv[0] $uv[1];\n                        \n                        if($i == size($sel)-1)\n                        {\n                            float $uv[] =`polyEditUV -q $flatCom[1]`;\n                            uvJnt $flatCom[1] $uv[0] $uv[1];\n                        }\n                    } \n                          \n                    if(`gmatch $sel[$i] \"*.f*\"`){\n                        string $flatCom[] =`componentFlatOut $converted`;\n                        float $u= 0;\n                        float $v= 0;\n                        for($r = 0; $r <`size($flatCom)`; $r++)\n                        {\n                            float $uv[] =`polyEditUV -q $flatCom[$r]`;\n                            $u+=$uv[0];\n                            $v+=$uv[1];\n                        }\n                       uvJnt $converted[0] ($u/size($flatCom)) ($v/size($flatCom));\n                    }\n            }\n            else\n            {\n                string $converted[] =`polyListComponentConversion -fv -fe -ff -fvf -fuv -tv $sel[$i]`;\n                string $flatCom[] =`componentFlatOut $converted`;\n        \n                    if(`gmatch $sel[$i] \"*.vtx*\"` || `gmatch $sel[$i] \"*.map*\"`){\n                    \n                    float $pos[] =`xform -q -ws -t $flatCom[0]`;\n                    select -cl  ;\n                    string $jnt=`joint -p $pos[0] $pos[1] $pos[2] `;\n                    select -cl  ;\n        \n                    }\n        \n                    if(`gmatch $sel[$i] \"*.e*\"`){\n                        \n                            float $pos[] =`xform -q -ws -t $flatCom[0]`;\n                            select -cl  ;\n                            string $jnt=`joint -p $pos[0] $pos[1] $pos[2] `;\n                            select -cl  ;\n                        if($i == size($sel)-1)\n                        {\n                            float $pos[] =`xform -q -ws -t $flatCom[1]`;\n                            select -cl  ;\n                            string $jnt=`joint -p $pos[0] $pos[1] $pos[2] `;\n                            select -cl  ;\n                        }\n                    } \n        \n                    if(`gmatch $sel[$i] \"*.f*\"`){\n                        float $x= 0;\n                        float $y= 0;\n                        float $z= 0;\n        \n                        for($r = 0; $r <`size($flatCom)`; $r++)\n                        {\n                            float $pos[] =`xform -q -ws -t $flatCom[$r]`;\n                            $x+=$pos[0];\n                            $y+=$pos[1];\n                            $z+=$pos[2];\n        \n                        }\n                            select -cl  ;\n                            string $jnt=`joint -p ($x/size($flatCom)) ($y/size($flatCom)) ($z/size($flatCom)) `;\n                            select -cl  ;\n                    }\n            }\n        \n        }\n    }\n}\n\n//////////////////////////////////////////////////////////////////////\n///////////////////////  Joint At Controller  ////////////////////////\n//////////////////////////////////////////////////////////////////////\n\nglobal proc jntAtCntr()\n{\n    string $sel[] =`ls -fl -os`;\n    \n    if(`size($sel)` != 0)\n    { \n    \n        float $pos[]=`BBcenter $sel`;\n        select -cl  ;\n        joint -p $pos[0] $pos[1] $pos[2];\n        select -r $sel;\n    \n    }\n    else\n    {\n        error \"Bimad estamal kiya karo error ke bharose mat raho\";\n    }\n\n}\n\n//////////////////////////////////////////////////////////////////////\n////////////////////////  Component Flat Out  ///////////////////////\n//////////////////////////////////////////////////////////////////////\nglobal proc string[] componentFlatOut(string $cmpnt[])\n{\n\nstring $return[] = {};\nint $incr = 0;\n    for($i = 0; $i < `size($cmpnt)`; $i++)\n    {\n\n        if(`gmatch $cmpnt[$i] \"*:*\"`){\n            \n        string $buffer[] ={};\n        $numTokens = `tokenize $cmpnt[$i] \"[\" $buffer`;\n        string $objNm = $buffer[0];\n        $numTokens = `tokenize $buffer[1] \"]\" $buffer`;\n        $numTokens = `tokenize $buffer[0] \":\" $buffer`;\n        int $start = $buffer[0];\n        int $end = $buffer[1];\n        \n            for($r = $start; $r <= $end; $r++)\n            {\n              $return[$incr]= ($objNm + \"[\" + $r + \"]\" ); \n              $incr++;\n            }\n        \n        }\n        else\n        {\n              $return[$incr]=  $cmpnt[$i]; \n              $incr++;            \n        }\n    }\n    return $return; \n}\n\n//////////////////////////////////////////////////////////////////////\n/////////////////////////  UV Folicle Button  ////////////////////////\n//////////////////////////////////////////////////////////////////////\n\n\nglobal proc RGuvFlc()\n{\nstring $sel[] =`filterExpand -ex 1 -sm 31 -sm 35`;\nstring $folicle = \"\";\nif(`size($sel)` == 0)\n{\n     error \"riger ka naam kharab kar rahe ho select UV or Vertex\";\n}\nelse\n{\n    for($i = 0; $i<`size($sel)`; $i++)\n    {\n        \n        string $shp[]=`listRelatives -p -s $sel[$i]`;\n        string $converted[] =`polyListComponentConversion -fv -fe -ff -fvf -fuv -tuv $sel[$i]`;\n        if(`gmatch $converted[0] \"*.map*\"`){\n            float $uv[] =`polyEditUV -q $converted[0]`;\n            $folicle =`uvFolicle $shp[0] $uv[0] $uv[1]`; \n        }\n    }\n}\n}\n\n//////////////////////////////////////////////////////////////////////\n//////////////////////////////  UV Joint  ////////////////////////////\n//////////////////////////////////////////////////////////////////////\n\nglobal proc uvJnt(string $objNm,float $u, float $v)\n{\n    string $shp[]=`listRelatives -p -s $objNm`;\n    string $folicle =`uvFolicle $shp[0] $u $v`; \n    select -cl  ;\n    string $jnt=`joint`;\n    parent $jnt $folicle;\n    xform -os -t 0 0 0 $jnt;\n    xform -os -ro 0 0 0 $jnt;\n    makeIdentity -apply true -t 1 -r 1 -s 1 -n 0 -jointOrient $jnt;\n    parent  -w $jnt;\n    delete $folicle;\n    select -cl  ;\n}\n\n//////////////////////////////////////////////////////////////////////\n///////////////////////  BoundingBox Center  ////////////////////////\n//////////////////////////////////////////////////////////////////////\n\nglobal proc float[]  BBcenter(string $objs[])\n{\n\n    float $center[]={};\n    float $bbox[] = `exactWorldBoundingBox $objs`;\n    $center[0] = ( $bbox[0] + $bbox[3] )/2;\n    $center[1] = ( $bbox[1] + $bbox[4] )/2;\n    $center[2] = ( $bbox[2] + $bbox[5] )/2;   \n    \n    return $center;\n\n}\n\n\n//////////////////////////////////////////////////////////////////////\n////////////////////////////  UV Folicle  ////////////////////////////\n//////////////////////////////////////////////////////////////////////\n\nglobal proc string uvFolicle(string $shp, float $uVal, float $vVal)\n{\n    string $hsys = `createNode hairSystem`;\n    int $ind[0] ;\n    $ind[0] = 0;\n    int $i;\n    float $v = 0;\n    float $u = $i/10.0;\n    string $newHair = createHairCurveNode( $hsys, $shp, $uVal,$vVal,2, \n    false, false, false, false, \"\", 1.0, $ind, \"\",\"\",1);\n    delete `listRelatives -p $hsys`;\n    return $newHair;\n}\n\n//////////////////////////////////////////////////////////////////////\n/////////////////////////    LOCK AND HIDE    ////////////////////////\n//////////////////////////////////////////////////////////////////////\n\nglobal proc int  LNH (string $obj,int $tx,int $ty,int $tz,int $rx,int $ry,int $rz,int $sx,int $sy,int $sz,int $v)\n{\nint $attrVal[];\n$attrVal[0] =$tx;$attrVal[1] =$ty;$attrVal[2] =$tz;\n$attrVal[3] =$rx;$attrVal[4] =$ry;$attrVal[5] =$rz;\n$attrVal[6] =$sx;$attrVal[7] =$sy;$attrVal[8] =$sz;\n$attrVal[9] =$v;\nint $keyVal;\nstring $attrs[] ={\"tx\",\"ty\",\"tz\",\"rx\",\"ry\",\"rz\",\"sx\",\"sy\",\"sz\",\"v\"};\n\n    for ($i=0;$i<(size($attrs));$i++)\n    {            \n        if ($attrVal[$i] == 1){\n            $keyVal = 0;\n            setAttr -lock $attrVal[$i] -keyable $keyVal -channelBox $keyVal ($obj +  \".\" + $attrs[$i]);\n    \n    }\n    }\n\n    return 1;\n}\n\n//////////////////////////////////////////////////////////////////////\n//////////////////////// CONTROL PROXY OR NOT ////////////////////////\n//////////////////////////////////////////////////////////////////////\n\nglobal proc doIt(int $Fk)\n{\n\nint $prx = `checkBox  -q -v pxCB`;  \n\n    if($prx == 1)\n    {\n    prxCnt $Fk;\n    }\n    \n    if($prx == 0)\n    {\n    cnt $Fk;\n    }\n}\n\n\n\n//////////////////////////////////////////////////////////////////////\n/////////////////////////      CONTROLER      ////////////////////////\n//////////////////////////////////////////////////////////////////////\n\nglobal proc cnt(int $Fk)\n{\nstring $sel[]= `ls -sl`;\n\nif ((size($sel)) == 0){\nerror \"Select Object for controller\";\n}\nelse{\n    //find UI info \n    string $axis =`radioCollection -q -sl ax`;\n    int $Nrax[] ={0, 0, 0};\n    if($axis==\"x\"){$Nrax ={1, 0, 0};};\n    if($axis==\"y\"){$Nrax ={0, 1, 0};};\n    if($axis==\"z\"){$Nrax ={0, 0, 1};};\n    string $cnst =`radioCollection -q -sl cnst`;\n    int $sclCst =`checkBox -q -v sclCB`;\n    \n    //create parent group\n    string $mnGrp = `group -em -n ($sel[0] + \"_ctlGrp\")`;\n    if(`objExists \"Extra_MotionSystem\"`)\n        {parent $mnGrp \"Extra_MotionSystem\";}\n    for ($each in $sel){\n        string $chld[] = {};\n        if ($Fk == 1)\n        {\n         $chld =`ls -dag $each `;\n        }\n        else\n        {\n        $chld[0] = $each;\n        }\n        \n        for ($i=0;$i<(size($chld));$i++)\n        {\n            string $typ =`nodeType $chld[$i]`;\n            if ($typ == \"transform\" || $typ == \"joint\")\n                {        \n                //create contrller shape \n                string $cntName[] =`circle \n                    -c 0 0 0 \n                    -nr $Nrax[0] $Nrax[1] $Nrax[2] \n                    -sw 360 -r 1 -d 3 -ut 0 \n                    -tol 0.01 -s 8 -ch 0\n                    -n ($chld[$i] + \"_ctl\")`;\n                    \n                string $grp = `group -em -n ($chld[$i] + \"_OffsetGrp\")`;\n                string $grp1 =`group -em -n ($chld[$i] + \"_PosGrp\")`;\n                \n                parent $cntName[0] $grp;\n                parent $grp $grp1;\n                \n                // position controller\n                float $pos[]=`xform -q -ws -rp$chld[$i]`;\n                float $rot[]=`xform -q -ws -ro $chld[$i]`;\n                \n                xform -ws -t $pos[0] $pos[1] $pos[2] $grp1;\n                xform -ws -ro $rot[0] $rot[1] $rot[2] $grp1;\n                \n                //Constraint \n                if($cnst==\"pnt\"){\n                pointConstraint -mo $cntName[0] $chld[$i];\n                LNH $cntName[0] 0 0 0 1 1 1 0 0 0 1;\n                LNH $grp 0 0 0 1 1 1 0 0 0 1;\n                }\n                \n                if($cnst==\"ort\"){\n                orientConstraint -mo $cntName[0] $chld[$i];\n                LNH $cntName[0] 1 1 1 0 0 0 0 0 0 1;\n                LNH $grp 1 1 1 0 0 0 0 0 0 1;\n                }\n                \n                if($cnst==\"prnt\"){\n                parentConstraint -mo $cntName[0] $chld[$i];\n                LNH $cntName[0] 0 0 0 0 0 0 0 0 0 1;\n                LNH $grp 0 0 0 0 0 0 0 0 0 1;\n                }\n                \n                if($sclCst== 1){\n                scaleConstraint -mo $cntName[0] $chld[$i];\n                LNH $cntName[0] 0 0 0 0 0 0 0 0 0 1;\n                LNH $grp 0 0 0 0 0 0 0 0 0 1;\n                }else{\n                LNH $cntName[0] 0 0 0 0 0 0 1 1 1 1;\n                LNH $grp 0 0 0 0 0 0 1 1 1 1;\n                }\n                \n                //give parent \n                string $prnt[] =`listRelatives -p $chld[$i]`;\n\n                if(`objExists  ($prnt[0] + \"_ctl\")`)\n                {\n                parent $grp1  ($prnt[0] + \"_ctl\");\n                }\n                else\n                {\n                parent $grp1 $mnGrp;\n                }\n               \n                \n                }\n            }\n        }\n    }\n}\n\n\n//////////////////////////////////////////////////////////////////////\n/////////////////////////   PROXY CONTROLER   ////////////////////////\n//////////////////////////////////////////////////////////////////////\nglobal proc prxCnt(int $Fk)\n{\nstring $sel[]= `ls -sl`;\n\nif ((size($sel)) == 0){\nerror \"Select Object for controller\";\n}\n    else{\n    \n    int $mdVal =`checkBox -q -v negCB`;\n    \n    //find UI info \n    string $axis =`radioCollection -q -sl ax`;\n    int $Nrax[] ={0, 0, 0};\n    if($axis==\"x\"){$Nrax ={1, 0, 0};};\n    if($axis==\"y\"){$Nrax ={0, 1, 0};};\n    if($axis==\"z\"){$Nrax ={0, 0, 1};};\n    string $cnst =`radioCollection -q -sl cnst`;\n    int $sclCst =`checkBox -q -v sclCB`;\n    \n    //create parent group\n    string $mnGrp = `group -em -n ($sel[0] + \"_ctlGrp\")`;\n    \n        if(`objExists \"Extra_MotionSystem\"`)\n            {parent $mnGrp \"Extra_MotionSystem\";}\n        \n    string $prxMnGrp = `group -em -n (\"Proxy_\" + $sel[0] + \"_ctlGrp\")`;\n    setAttr ($prxMnGrp + \".visibility\") 0;\n    setAttr -lock true ($prxMnGrp + \".visibility\");\n    \n   \n    for ($each in $sel){\n    \n        string $chld[] = {};\n        if ($Fk == 1)\n        {\n         $chld =`ls -dag $each `;\n        }\n        else\n        {\n        $chld[0] = $each;\n        }\n        \n        \n        for ($i=0;$i<(size($chld));$i++)\n        {\n        \n            string $typ =`nodeType $chld[$i]`;\n            if ($typ == \"transform\" || $typ == \"joint\"){\n            //create contrller shape \n            string $cntName[] =`circle \n                -c 0 0 0 \n                -nr $Nrax[0] $Nrax[1] $Nrax[2] \n                -sw 360 -r 1 -d 3 -ut 0 \n                -tol 0.01 -s 8 -ch 0\n                -n ($chld[$i] + \"_ctl\")`;\n                \n            string $grp = `group -em -n ($chld[$i] + \"_OffsetGrp\")`;\n            string $grp1 =`group -em -n ($chld[$i] + \"_PosGrp\")`;\n            \n            parent $cntName[0] $grp;\n            parent $grp $grp1;\n            \n            //proxy setup\n            string $pxCnt[] =`circle \n                -c 0 0 0 \n                -nr $Nrax[0] $Nrax[1] $Nrax[2] \n                -sw 360 -r 1 -d 3 -ut 0 \n                -tol 0.01 -s 8 -ch 0\n                -n (\"Proxy_\" + $chld[$i] + \"_ctl\")`;\n                \n            string $pxGrp = `group -em -n (\"Proxy_\" + $chld[$i] + \"_OffsetGrp\")`;\n            string $pxGrp1 =`group -em -n (\"Proxy_\" + $chld[$i] + \"_PosGrp\")`;\n            \n            parent $pxCnt[0] $pxGrp;\n            parent $pxGrp $pxGrp1;\n            \n            //Make Connections\n            connectAttr -f ($cntName[0] + \".translate\") ($pxCnt[0] + \".translate\");\n            connectAttr -f ($cntName[0] + \".rotate\") ($pxCnt[0] + \".rotate\");\n            connectAttr -f ($cntName[0] + \".scale\") ($pxCnt[0] + \".scale\");\n\n            if($mdVal == 0)\n            {\n                connectAttr -f ($grp + \".translate\") ($pxGrp + \".translate\");\n\n            }\n            else\n            {\n                string $revMD =`createNode multiplyDivide -n ($cntName[0] + \"revMD\")`;\n                connectAttr -f ($cntName[0] + \".translate\") ($revMD + \".input1\");\n                setAttr ($revMD + \".input2\") -type \"float3\" -1.0 -1.0 -1.0;\n                connectAttr -f  ($revMD + \".output\") ($grp + \".translate\");\n\n            }\n\n            \n            connectAttr -f ($grp + \".rotate\") ($pxGrp + \".rotate\");\n            connectAttr -f ($grp + \".scale\") ($pxGrp + \".scale\");\n            \n            \n            // position controller\n            float $pos[]=`xform -q -ws -rp$chld[$i]`;\n            float $rot[]=`xform -q -ws -ro $chld[$i]`;\n            \n            xform -ws -t $pos[0] $pos[1] $pos[2] $grp1;\n            xform -ws -ro $rot[0] $rot[1] $rot[2] $grp1;\n            \n            xform -ws -t $pos[0] $pos[1] $pos[2] $pxGrp1;\n            xform -ws -ro $rot[0] $rot[1] $rot[2] $pxGrp1;\n            \n            \n            \n            //Constraint \n            if($cnst==\"pnt\"){\n            pointConstraint -mo $pxCnt[0] $chld[$i];\n            LNH $cntName[0] 0 0 0 1 1 1 0 0 0 1;\n            LNH $grp 0 0 0 1 1 1 0 0 0 1;\n            }\n            \n            if($cnst==\"ort\"){\n            orientConstraint -mo $pxCnt[0] $chld[$i];\n            LNH $cntName[0] 1 1 1 0 0 0 0 0 0 1;\n            LNH $grp 1 1 1 0 0 0 0 0 0 1;\n            }\n            \n            if($cnst==\"prnt\"){\n            parentConstraint -mo $pxCnt[0] $chld[$i];\n            LNH $cntName[0] 0 0 0 0 0 0 0 0 0 1;\n            LNH $grp 0 0 0 0 0 0 0 0 0 1;\n            }\n            \n            if($sclCst== 1){\n            scaleConstraint -mo $pxCnt[0] $chld[$i];\n            LNH $cntName[0] 0 0 0 0 0 0 0 0 0 1;\n            LNH $grp 0 0 0 0 0 0 0 0 0 1;\n            }else{\n            LNH $cntName[0] 0 0 0 0 0 0 1 1 1 1;\n            LNH $grp 0 0 0 0 0 0 1 1 1 1;\n            }\n            \n                \n                //give parent \n                string $prnt[] =`listRelatives -p $chld[$i]`;\n\n                if(`objExists  ($prnt[0] + \"_ctl\")`)\n                {\n                parent $grp1  ($prnt[0] + \"_ctl\");\n                }\n                else\n                {\n                parent $grp1 $mnGrp;\n                }\n                \n                \n                if(`objExists  (\"Proxy_\" + $prnt[0] + \"_ctl\")`)\n                {\n                parent $pxGrp1  (\"Proxy_\" + $prnt[0] + \"_ctl\");\n                }\n                else\n                {\n                parent $pxGrp1 $prxMnGrp;\n                }\n                \n            }\n\n        }\n        \n  \n    }\n    }\n}\n\n//////////////////////////////////////////////////////////////////////\n/////////////////////////    SHAPE REPLACER   ////////////////////////\n//////////////////////////////////////////////////////////////////////\nglobal proc shpRplc ()\n{\n    string $sel[]= `ls -sl`;\n    if ((size($sel)) == 0){\n    error \"Select Target objects & then source object\";\n    }\n    else{\n        int $sz = size($sel)-1;\n        string $grp = `group -em -n (\"TempGrp\" + $sel[$sz])`;\n        string $prntShp[] =`listRelatives -ad -s $sel[$sz] `;\n        parent -add -s $prntShp[0] $grp;\n        \n        for ($i=0;$i<$sz;$i++)\n            {\n            string $dupl[] =`duplicate -renameChildren $grp`;\n            string $nwShp[] =`listRelatives -ad -s$dupl[0] `;\n            \n            string $chld[] =`listRelatives -ad -s $sel[$i] `;\n            parent -add -s $nwShp[0] $sel[$i];\n            \n            for ($each in $chld){if(`objExists $each`){delete $each;}}\n            rename $nwShp[0] ($sel[$i] + \"Shape\");\n            delete $dupl;\n            }\n       delete $grp;\n    }\n}\n\n\n\n//////////////////////////////////////////////////////////////////////\n/////////////////////////   WIRE CONTROLLER   ////////////////////////\n//////////////////////////////////////////////////////////////////////\nglobal proc string cntWire (string $TYPE)\n  {\n  \nstring $return[] ={};\n  switch ($TYPE)\n    {\n    case \"Triangle\" :\n      $return[0] =`curve -d 1 -p -1.03923 0 0.6 -p 1.03923 0 0.6 -p 0 0 -1.2 -p -1.03923 0 0.6 -k 0 -k 1 -k 2 -k 3 -n \"controller1\" `;\n\tbreak ;\n\t\n    case \"Circle\" :\n      $return =`circle -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 0 -n \"controller1\" `;\n      break ;\t\n\t\n    case \"Square\" :\n      $return[0] =`curve -d 1 -p 1 0 -1 -p -1 0 -1 -p -1 0 1 -p 1 0 1 -p 1 0 -1 -k 0 -k 1 -k 2 -k 3 -k 4 -n \"controller1\"` ;\n      break ;\n      \n    case \"FatCross\" :\n      $return[0] =`curve -d 1 -p 2 0 1 -p 2 0 -1 -p 1 0 -1 -p 1 0 -2 -p -1 0 -2 -p -1 0 -1 -p -2 0 -1 -p -2 0 1 -p -1 0 1 -p -1 0 2 -p 1 0 2 -p 1 0 1 -p 2 0 1 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -n \"controller1\" `;\n      break ;      \n      \n    case \"Pyramid\" :\n      $return[0] =`curve -d 1 -p 0 2 0 -p 1 0 -1 -p -1 0 -1 -p 0 2 0 -p -1 0 1 -p 1 0 1 -p 0 2 0 -p 1 0 -1 -p 1 0 1 -p -1 0 1 -p -1 0 -1 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -n \"controller1\" `;\n      break ;\n      \n    case \"Cube\" :\n      $return[0] =`curve -d 1 -p 0.5 0.5 0.5 -p 0.5 0.5 -0.5 -p -0.5 0.5 -0.5 -p -0.5 -0.5 -0.5 -p 0.5 -0.5 -0.5 -p 0.5 0.5 -0.5 -p -0.5 0.5 -0.5 -p -0.5 0.5 0.5 -p 0.5 0.5 0.5 -p 0.5 -0.5 0.5 -p 0.5 -0.5 -0.5 -p -0.5 -0.5 -0.5 -p -0.5 -0.5 0.5 -p 0.5 -0.5 0.5 -p -0.5 -0.5 0.5 -p -0.5 0.5 0.5 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -n \"controller1\" `;\n      break ; \n           \n    case \"Sphere\" :\n      $return[0] =`curve -d 1 -p 0 0 1 -p 0 0.5 0.866025 -p 0 0.866025 0.5 -p 0 1 0 -p 0 0.866025 -0.5 -p 0 0.5 -0.866025 -p 0 0 -1 -p 0 -0.5 -0.866025 -p 0 -0.866025 -0.5 -p 0 -1 0 -p 0 -0.866025 0.5 -p 0 -0.5 0.866025 -p 0 0 1 -p 0.707107 0 0.707107 -p 1 0 0 -p 0.707107 0 -0.707107 -p 0 0 -1 -p -0.707107 0 -0.707107 -p -1 0 0 -p -0.866025 0.5 0 -p -0.5 0.866025 0 -p 0 1 0 -p 0.5 0.866025 0 -p 0.866025 0.5 0 -p 1 0 0 -p 0.866025 -0.5 0 -p 0.5 -0.866025 0 -p 0 -1 0 -p -0.5 -0.866025 0 -p -0.866025 -0.5 0 -p -1 0 0 -p -0.707107 0 0.707107 -p 0 0 1 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -n \"controller1\" `;\n      break ;    \n              \t\n    case \"Cone\":\n\t\t$return[0] =`curve -d 1 -p 0.5 -1 0.866025 -p -0.5 -1 0.866025 -p 0 1 0 -p 0.5 -1 0.866025 -p 1 -1 0 -p 0 1 0 -p 0.5 -1 -0.866025 -p 1 -1 0 -p 0 1 0 -p -0.5 -1 -0.866026 -p 0.5 -1 -0.866025 -p 0 1 0 -p -1 -1 -1.5885e-007 -p -0.5 -1 -0.866026 -p 0 1 0 -p -0.5 -1 0.866025 -p -1 -1 -1.5885e-007 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -n helperCone`;\n\tbreak;\n\n    case \"Rombus\" :\n      $return[0] =`curve -d 1 -p 0 1 0 -p 1 0 0 -p 0 0 1 -p -1 0 0 -p 0 0 -1 -p 0 1 0 -p 0 0 1 -p 0 -1 0 -p 0 0 -1 -p 1 0 0 -p 0 1 0 -p -1 0 0 -p 0 -1 0 -p 1 0 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -n \"controller1\" `;\n      break ;\n\n    case \"SingleNormal\" :\n      $return[0] =`curve -d 1 -p 0 0 -1.32 -p -0.99 0 0 -p -0.33 0 0 -p -0.33 0 0.99 -p 0.33 0 0.99 -p 0.33 0 0 -p 0.99 0 0 -p 0 0 -1.32 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -n \"controller1\" `;\n      break ;\n\n    case \"FourNormal\" :\n      $return[0] =`curve -d 1 -p 0 0 -1.98 -p -0.495 0 -1.32 -p -0.165 0 -1.32 -p -0.165 0 -0.165 -p -1.32 0 -0.165 -p -1.32 0 -0.495 -p -1.98 0 0 -p -1.32 0 0.495 -p -1.32 0 0.165 -p -0.165 0 0.165 -p -0.165 0 1.32 -p -0.495 0 1.32 -p 0 0 1.98 -p 0.495 0 1.32 -p 0.165 0 1.32 -p 0.165 0 0.165 -p 1.32 0 0.165 -p 1.32 0 0.495 -p 1.98 0 0 -p 1.32 0 -0.495 -p 1.32 0 -0.165 -p 0.165 0 -0.165 -p 0.165 0 -1.32 -p 0.495 0 -1.32 -p 0 0 -1.98 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -n \"controller1\" `;\n      break ;\n\n    case \"Dumbell\":\n\t\t$return[0] =`curve -d 1 -p -1.207536 0 0.0254483 -p -1.123549 -0.202763 0.0254483 -p -0.920786 -0.28675 0.0254483 -p -0.718023 -0.202763 0.0254483 -p -0.63504 -0.00242492 0.0254483 -p 0.634091 0 0.0254483 -p 0.718023 -0.202763 0.0254483 -p 0.920786 -0.28675 0.0254483 -p 1.123549 -0.202763 0.0254483 -p 1.207536 0 0.0254483 -p 1.123549 0.202763 0.0254483 -p 0.920786 0.28675 0.0254483 -p 0.718023 0.202763 0.0254483 -p 0.634091 0 0.0254483 -p -0.63504 -0.00242492 0.0254483 -p -0.718023 0.202763 0.0254483 -p -0.920786 0.28675 0.0254483 -p -1.123549 0.202763 0.0254483 -p -1.207536 0 0.0254483 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -n helperDumbell`;\n\tbreak;\n\t\n    case \"ArrowOnBall\" :\n      $return[0] =`curve -d 1 -p 0 0.35 -1.001567 -p -0.336638 0.677886 -0.751175 -p -0.0959835 0.677886 -0.751175 -p -0.0959835 0.850458 -0.500783 -p -0.0959835 0.954001 -0.0987656 -p -0.500783 0.850458 -0.0987656 -p -0.751175 0.677886 -0.0987656 -p -0.751175 0.677886 -0.336638 -p -1.001567 0.35 0 -p -0.751175 0.677886 0.336638 -p -0.751175 0.677886 0.0987656 -p -0.500783 0.850458 0.0987656 -p -0.0959835 0.954001 0.0987656 -p -0.0959835 0.850458 0.500783 -p -0.0959835 0.677886 0.751175 -p -0.336638 0.677886 0.751175 -p 0 0.35 1.001567 -p 0.336638 0.677886 0.751175 -p 0.0959835 0.677886 0.751175 -p 0.0959835 0.850458 0.500783 -p 0.0959835 0.954001 0.0987656 -p 0.500783 0.850458 0.0987656 -p 0.751175 0.677886 0.0987656 -p 0.751175 0.677886 0.336638 -p 1.001567 0.35 0 -p 0.751175 0.677886 -0.336638 -p 0.751175 0.677886 -0.0987656 -p 0.500783 0.850458 -0.0987656 -p 0.0959835 0.954001 -0.0987656 -p 0.0959835 0.850458 -0.500783 -p 0.0959835 0.677886 -0.751175 -p 0.336638 0.677886 -0.751175 -p 0 0.35 -1.001567 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -n \"controller1\" `;\n      break ;\n\t}\nstring $rtrn = $return[0];\n\n    return $rtrn;\n\t\n}\n//////////////////////////////////////////////////////////////////////\n/////////////////////////   WIRE CONTROLLER   ////////////////////////\n//////////////////////////////////////////////////////////////////////\nglobal proc cntWireNw (string $TYPE)\n{\nstring $sel[] = `ls -os -fl `;\n    if(`size $sel` != 0)\n    {\n        string $cnt =`cntWire $TYPE`;\n        select  $sel;\n        select -add $cnt;\n        shpRplc;\n        delete $cnt;\n        select  $sel;\n    }\n    else\n    {\n       cntWire $TYPE;\n       select -cl  ;\n\n    }\n}\n\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n/////////////////////////   Dynamic Setuup   ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n// Copyright (C) 2011-2011 Rahul Gawade, and/or its licensors.\n// All rights reserved.\n//\n// The coded instructions, statements, computer programs, and/or related\n// material (collectively the \"Data\") in these files contain unpublished\n// information proprietary to Rahul Gawade, and/or its licensors,\n// which is protected by Indian federal copyright law and by\n// international treaties.\n// Forr any quarries contact Rahul Gawade at rahulsg2901@gmail.com \n\n//\n//\n//  Creation Date:  06-04-2014\n//\n//  Description:\n//      Add IK/FK dynamic Setup\n//\n\n//  Procedure Name:\n//\t\tdynamicSetup\n//\n//  Lebals:\n//\t\t1. dyna + any string\n//      2. propA any where you wont IK controller & at end of joint\n//\n//  Description:\n//      Add IK/FK dynamic Setup.\n//\n//  Input Arguments:\n//      None.\n//\n//  Return Value:\n//      None.\n//\n\nglobal proc transAtt()\n{\nstring $sel[] =`ls -sl`;\n\n\nif(size($sel) == 2)\n{\nstring $text;\nstring $result = `promptDialog\n    -title \"Rename Object\"\n    -message \"Enter Name:\"\n    -button \"OK\" -button \"Cancel\"\n    -defaultButton \"OK\" -cancelButton \"Cancel\"\n    -dismissString \"Cancel\"`;\n\n\nif ($result == \"OK\") {\n    $text = `promptDialog -query -text`;\n    print $text;\n    if($text != \"\")\n    {\n    int $go = 0;\n    string $lstatt[] =`listAttr -ud $sel[1]`;\n    string $atts[] ={\"Setup\", \"Before\", \"After\", \"Dynamic\", \"Stiffness\", \n    \"Damp\", \"Friction\", \"Gravity\", \"Attract\",\"Flow\", \"Iterations\"}; \n    \n    for ($e in $lstatt)\n    {\n        for($item in $atts)\n        {\n            if($e == $item)\n            {\n            $go +=1;\n            }\n        }\n    }\n    \n    if( size($atts) == $go)\n    {\n    //Add Attr\n    if ((`attrExt $sel[0] $text`) == 0){\n        addAttr -ln $text  -at \"enum\" -en \"Off:On:\"  $sel[0];\n        setAttr -e -lock true -keyable false -cb true ($sel[0] + \".\" + $text);}\n     $text = ($text + \"_\");\n        \n    if ((`attrExt $sel[0] ($text + \"Setup\")`) == 0){\n        addAttr -ln ($text + \"Setup\")  -at \"enum\" -en \"Off:On:\"  $sel[0];\n        setAttr -e -keyable false ($sel[0] + \".\" + $text + \"Setup\");}\n    \n    if ((`attrExt $sel[0] ($text + \"Before\")`) == 0){\n        addAttr -ln ($text + \"Before\")  -at \"enum\" -en \"Off:FK:IK:\"  $sel[0];\n        setAttr -e-keyable false -cb true ($sel[0] + \".\" + $text + \"Before\");}\n    \n    if ((`attrExt $sel[0] ($text + \"After\")`) == 0){\n        addAttr -ln ($text + \"After\")  -at \"enum\" -en \"Off:On:\"  $sel[0];\n        setAttr -e-keyable false -cb true ($sel[0] +  \".\" + $text + \"After\");}\n        \n    if ((`attrExt $sel[0] ($text + \"Dynamic\")`) == 0){\n        addAttr -ln ($text + \"Dynamic\")  -at \"enum\" -en \"Static:Dynamic:\"  $sel[0];\n        setAttr -e-keyable true ($sel[0] + \".\" + $text + \"Dynamic\");}\n        \n    if ((`attrExt $sel[0] ($text + \"Stiffness\")`) == 0){\n        addAttr -ln ($text + \"Stiffness\")  -min 0 -max 1  -at \"double\" -dv 0.15 $sel[0];\n        setAttr -e-keyable true ($sel[0] + \".\" + $text + \"Stiffness\");}\n        \n    if ((`attrExt $sel[0] ($text + \"Damp\")`) == 0){\n        addAttr -ln ($text + \"Damp\") -min 0 -max 1  -at \"double\" $sel[0];\n        setAttr -e-keyable true ($sel[0] + \".\" + $text + \"Damp\");}\n        \n    if ((`attrExt $sel[0] ($text + \"Friction\")`) == 0){\n        addAttr -ln ($text + \"Friction\")  -min 0 -max 1  -at \"double\" -dv 0.5 $sel[0];\n        setAttr -e-keyable true ($sel[0] + \".\" + $text + \"Friction\");}\n        \n    if ((`attrExt $sel[0] ($text + \"Gravity\")`) == 0){\n        addAttr -ln ($text + \"Gravity\")  -at \"double\" -dv 0.98 $sel[0];\n        setAttr -e-keyable true ($sel[0] + \".\" + $text + \"Gravity\");}\n        \n    if ((`attrExt $sel[0] ($text + \"Attract\")`) == 0){\n        addAttr -ln ($text + \"Attract\")  -at \"double\" -min 0 -max 1 -dv 0.2 $sel[0];\n        setAttr -e-keyable true ($sel[0] + \".\" + $text + \"Attract\");}\n        \n    if ((`attrExt $sel[0] ($text + \"Flow\")`) == 0){\n        addAttr -ln ($text + \"Flow\")  -at \"double\" -min 0 -max 1 -dv 0.2 $sel[0];\n        setAttr -e-keyable true ($sel[0] + \".\" + $text + \"Flow\");}  \n    \n    if ((`attrExt $sel[0] ($text + \"Iterations\")`) == 0){\n        addAttr -ln ($text + \"Iterations\")  -at \"long\" -min 1 -max 50 -dv 4 $sel[0];\n        setAttr -e-keyable true ($sel[0] + \".\" + $text + \"Iterations\");} \n              \n            \n        for ($e in $atts)\n        {\n        connectAttr -f ($sel[0] + \".\" + $text + $e) ($sel[1] + \".\" + $e);\n        }\n        \n            \n        }\n        else\n        {\n        error \"Attribute not exists\";\n        }\n    }\n    else\n    {\n        error \"Tuz.... naav tak\";    \n    }\n    }\n\n}\nelse\n{\nerror \"select Controller then Parent joint\";\n}\n}\n\nglobal proc addPropA()\n{\n    \n    string $sel[] =`ls -sl`;\n    if(`size $sel` != 0)\n    {\n        for ($each in $sel)\n        {\n        \n            if(`objectType $each` == \"joint\")\n            {\n                if(`getAttr ($each + \".drawLabel\")` != 1)\n                {\n                    setAttr ($each + \".type\") 15;\n                    setAttr -type \"string\" ($each + \".otherType\") (\"\");\n                    setAttr ($each + \".drawLabel\") 1;\n                }\n                else\n                {\n                    setAttr ($each + \".type\") 0;\n                    setAttr -type \"string\" ($each + \".otherType\") (\"\");\n                    setAttr ($each + \".drawLabel\") 0; \n                }\n            }\n        }\n    }\n    else\n    {\n        error \"Tuzse yahi umid thi select Joint first\";\n    }\n}\n\n\n\n\nglobal proc addDyna()\n{\n    \n    string $sel[] =`ls -sl`;\n    if(`size $sel` != 0)\n    {    \n        for ($each in $sel)\n        {\n            if(`objectType $each` == \"joint\")\n            {\n                if(`getAttr ($each + \".drawLabel\")` != 1)\n                {\n                    setAttr ($each + \".type\") 18;\n                    setAttr -type \"string\" ($each + \".otherType\") (\"dyna\" + $each);\n                    setAttr ($each + \".drawLabel\") 1;\n                }\n                else\n                {\n                    setAttr ($each + \".type\") 0;\n                    setAttr -type \"string\" ($each + \".otherType\") (\"\");\n                    setAttr ($each + \".drawLabel\") 0; \n                }\n            }\n        }\n    }\n    else\n    {\n        error \"Tuzse yahi umid thi select Joint first\";\n    }\n}\n\n\n\nglobal proc bakeDyna()\n{\nstring $sets[] =`ls -set \"*HairBakedSet*\"`;\nstring $setObj[] =`sets -q $sets[0]`;\nfloat $start  = `playbackOptions -q -ast`;\nfloat $end  = `playbackOptions -q -aet`;\n\nbakeResults \n    -simulation true \n    -t ($start + \":\" +  $end)\n    -sampleBy 1 \n    -disableImplicitControl true \n    -preserveOutsideKeys true \n    -sparseAnimCurveBake false \n    -removeBakedAttributeFromLayer false \n    -bakeOnOverrideLayer false \n    -controlPoints false \n    -shape true \n    $setObj;\n    \nprint \"Bake successfully\\n\";\n}\n\nglobal proc unbakeDyna()\n{\n    string $sets[] =`ls -set \"*HairBakedSet*\"`;\n    string $setObj[] =`sets -q $sets[0]`;\n    cutKey -time \"-9000:9000\" $setObj; \n\n    for ($obj in $setObj)\n    {\n        string $s1 = `substitute \"aftdyna_\"  $obj \"@#$%^&*!\"`;\n        string $buffer[] = {};\n        $numTokens = `tokenize  $s1 \"@#$%^&*!\"  $buffer`;\n        string $s2 = `substitute \"_grp\"  $buffer[size($buffer)-1] \"\"`;\n        string $conJnt[] =`ls (\"*Dyna_\" + $s2)`;\n        \n        connectAttr -f  ($conJnt[0] + \".rotateX\") ($obj + \".rotateX\");\n        connectAttr -f  ($conJnt[0] + \".rotateY\") ($obj + \".rotateY\");\n        connectAttr -f  ($conJnt[0] + \".rotateZ\") ($obj + \".rotateZ\");\n        connectAttr -f  ($conJnt[0] + \".scaleX\") ($obj + \".scaleX\");\n        \n        \n        string $attr[]=`listAttr -ud $obj`;\n            if($attr[0] == \"transCon\")\n            {\n            connectAttr -f  ($conJnt[0] + \".translateX\") ($obj + \".translateX\");\n            connectAttr -f  ($conJnt[0] + \".translateY\") ($obj + \".translateY\");\n            connectAttr -f  ($conJnt[0] + \".translateZ\") ($obj + \".translateZ\");\n            }\n    }\n    print \"Unbake successfully\\n\";\n}\n\n\n\nglobal proc dynaSetup()\n{\n\nstring $sel[] =`ls -sl`;\nstring $nucl[] ={};\n \nif ((size($sel)) == 0){\n     warning \"select the parent joint.....\";}\nelse{\n//find all dyan lables\nstring $child[] =`listRelatives -ad -c $sel[0]`;\nstring $Dyna[] = {};\nint $no= 0;\n    for ($each in $child)\n    {\n     \n       if ((`objectType $each`) == \"joint\")\n        {\n            string $lable =`getAttr ($each + \".otherType\")`;\n            int $types =`getAttr ($each + \".type\")`;\n            int $drawlb =`getAttr ($each + \".drawLabel\")`;\n            \n                    if ((startsWith ($lable, \"dyna\")) == 1 && $types == 18 && $drawlb == 1)\n                    {\n                        setAttr ($each + \".drawLabel\") 0;\n                        $Dyna[$no]=$each;\n                        $no+= 1;\n                    }\n                    \n\n        }\n    }\n    \n\nif ((size($Dyna)) == 0){\n     warning \"No dyna Exist....\";}\nelse{\n\n//Add Attr\nif ((`attrExt $sel[0] \"Setup\"`) == 0){\n    addAttr -ln \"Setup\"  -at \"enum\" -en \"Off:On:\"  $sel[0];\n    setAttr -e -keyable 0 ($sel[0] + \".Setup\");}\n\nif ((`attrExt $sel[0] \"Before\"`) == 0){\n    addAttr -ln \"Before\"  -at \"enum\" -en \"Off:FK:IK:\"  $sel[0];\n    setAttr -e-keyable true ($sel[0] + \".Before\");}\n\nif ((`attrExt $sel[0] \"After\"`) == 0){\n    addAttr -ln \"After\"  -at \"enum\" -en \"Off:On:\"  $sel[0];\n    setAttr -e-keyable true ($sel[0] + \".After\");}\n    \nif ((`attrExt $sel[0] \"Dynamic\"`) == 0){\n    addAttr -ln \"Dynamic\"  -at \"enum\" -en \"Static:Dynamic:\"  $sel[0];\n    setAttr -e-keyable true ($sel[0] + \".Dynamic\");}\n    \nif ((`attrExt $sel[0] \"Stiffness\"`) == 0){\n    addAttr -ln \"Stiffness\"  -min 0 -max 1  -at \"double\" -dv 0.15 $sel[0];\n    setAttr -e-keyable true ($sel[0] + \".Stiffness\");}\n    \nif ((`attrExt $sel[0] \"Damp\"`) == 0){\n    addAttr -ln \"Damp\" -min 0 -max 1  -at \"double\" $sel[0];\n    setAttr -e-keyable true ($sel[0] + \".Damp\");}\n    \nif ((`attrExt $sel[0] \"Friction\"`) == 0){\n    addAttr -ln \"Friction\"  -min 0 -max 1  -at \"double\" -dv 0.5 $sel[0];\n    setAttr -e-keyable true ($sel[0] + \".Friction\");}\n    \nif ((`attrExt $sel[0] \"Gravity\"`) == 0){\n    addAttr -ln \"Gravity\"  -at \"double\" -dv 0.98 $sel[0];\n    setAttr -e-keyable true ($sel[0] + \".Gravity\");}\n    \nif ((`attrExt $sel[0] \"Attract\"`) == 0){\n    addAttr -ln \"Attract\"  -at \"double\" -min 0 -max 1 -dv 0.2 $sel[0];\n    setAttr -e-keyable true ($sel[0] + \".Attract\");}\n    \nif ((`attrExt $sel[0] \"Flow\"`) == 0){\n    addAttr -ln \"Flow\"  -at \"double\" -min 0 -max 1 -dv 0.2 $sel[0];\n    setAttr -e-keyable true ($sel[0] + \".Flow\");}    \n    \nif ((`attrExt $sel[0] \"Iterations\"`) == 0){\n    addAttr -ln \"Iterations\"  -at \"long\" -min 1 -max 50 -dv 4 $sel[0];\n    setAttr -e-keyable true ($sel[0] + \".Iterations\");}   \n\n\n\n//Veribles\nstring $fkJnts[] = {};\nstring $fkcnt[] = {};\nstring $ikJnts[] = {};\nstring $ikcnt[] = {};\nstring $dynaJnts[] = {};\nstring $dynacnt[] = {};\nstring $bfrJnts[] = {};\nstring $dynaParent[] ={};\n\nfor ($i=0;$i<(size($Dyna));$i++)\n{\nstring $prt[] =`listRelatives -p $Dyna[$i]`;\nparent -w $Dyna[$i];\n$dynaParent[$i] = $prt[0];\n}\n\n//int $j=0;\n\nfor ($j=0;$j<(size($Dyna));$j++)\n{\n\n//create Joints\n$fkJnts = `dupPrifix $Dyna[$j] FK`;\n$ikJnts = `dupPrifix $Dyna[$j] IK`;\n$dynaJnts = `dupPrifix $Dyna[$j] Dyna`;\n$bfrJnts = `dupPrifix $Dyna[$j] Before`;\n\n\n//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n    //Fk setup \n    $fkcnt =`fkCtrls $fkJnts[0]`;\n      \n          for ($each in $fkcnt){\n              string $shp[]=`listRelatives -s $each`;\n              setAttr ($shp[0] + \".overrideEnabled\") 1;\n              setAttr ($shp[0] + \".overrideColor\") 6;}\n          \n    string $s1 = `substitute  \"fk_\"  $fkcnt[0] \"\"`;\n    string $s2 = `substitute  \"_ctl\" $s1 \"\"`;\n    \n    string $cnd1 = `createNode condition -n ($Dyna[$j] + \"IkCnd\")`;\n    string $cnd2 = `createNode condition -n ($Dyna[$j] + \"FkCnd\")`;\n\n    connectAttr -f ($sel[0] + \".Before\") ($cnd1 + \".firstTerm\");\n    setAttr ($cnd1 + \".secondTerm\") 2;\n    setAttr ($cnd1 + \".colorIfTrueR\") 1;\n    setAttr ($cnd1 + \".colorIfFalseR\") 0;\n\n    connectAttr -f ($sel[0] + \".Before\") ($cnd2 + \".firstTerm\");\n    setAttr ($cnd2 + \".secondTerm\") 1;\n    setAttr ($cnd2 + \".colorIfTrueR\") 1;\n    setAttr ($cnd2 + \".colorIfFalseR\") 0;\n\n    connectAttr -f ($cnd2 + \".outColor.outColorR\") ($s2 + \"_fkCtrls_grp.v\"); \n\n  \n//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n  \n\n//IK setup    \n\nstring $child[] =`listRelatives -ad -c $ikJnts[0]`;\nstring $ikLbl[] = {};\nint $no= 0;\n    for ($each in $child)\n    {\n     \n       if ((`objectType $each`) == \"joint\")\n        {\n            int $types =`getAttr ($each + \".type\")`;\n            int $drawlb =`getAttr ($each + \".drawLabel\")`;\n            \n                    if ($types == 15 && $drawlb == 1)\n                    {      \n                        string $s1 = `substitute \"IK_\" $each \"\"`;  \n                        setAttr ($s1 + \".drawLabel\") 0;               \n                        $ikLbl[$no]=$each;\n                        $no+= 1;\n                    }\n        }\n        \n    \n    }\n\n    //revers array \n    string $ikLblJnt[]= {};\n    int $no = 1;\n    $ikLblJnt[0] =$ikJnts[0];\n\n        for ($i=((size($ikLbl))-1);$i>=0;$i--)\n        {\n        $ikLblJnt[$no] =$ikLbl[$i];\n        $no += 1;\n        }\n    int $sizeIkjnt = size ($ikJnts); \n        \n        if ((`size($ikLblJnt)`) <= 1)\n        {\n           \n               $ikLblJnt[0] =$ikJnts[0];\n               \n               //center of joint \n               int $center = ($sizeIkjnt * 0.5);\n               $ikLblJnt[1] =$ikJnts[$center];\n               \n               \n               $ikLblJnt[2] =$ikJnts[($sizeIkjnt - 1)]; \n               \n        }\n\n\n\n    //create IK curve\n    float $pos[] =`xform -q -ws -rp $ikLblJnt[0]`;\n    string $crv =`curve  -d 2 -p $pos[0] $pos[1] $pos[2] -n ($Dyna[$j] + \"_IK_Curve\")`;\n     \n              for ($i=1;$i<(size($ikLblJnt));$i++)\n              {\n                 float $pos[] =`xform -q -ws -rp $ikLblJnt[$i]`;\n                 curve  -a -d 2 -p $pos[0] $pos[1] $pos[2] $crv;\n              }\n              \n\n    //Create Controllers\n    string $parentGrp =`group -em -n ($Dyna[$j] + \"_IkCtlrs_grp\")`; \n    string $clstrList[] = {};\n              \n              for ($i=0;$i<(size($ikLblJnt));$i++)\n              {\n                  string $Box =`curve \n                                    -d 1 -p -0.5 0.5 -0.5 \n                                    -p -0.5 0.5 0.5 -p 0.5 0.5 0.5 \n                                    -p 0.5 0.5 -0.5 -p 0.5 -0.5 -0.5 \n                                    -p -0.5 -0.5 -0.5 -p -0.5 0.5 -0.5 \n                                    -p 0.5 0.5 -0.5 -p 0.5 0.5 0.5 \n                                    -p 0.5 -0.5 0.5 -p 0.5 -0.5 -0.5 \n                                    -p -0.5 -0.5 -0.5 -p -0.5 -0.5 0.5 \n                                    -p 0.5 -0.5 0.5 -p 0.5 0.5 0.5 \n                                    -p -0.5 0.5 0.5 -p -0.5 -0.5 0.5 \n                                    -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 \n                                    -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 \n                                    -k 12 -k 13 -k 14 -k 15 -k 16\n                                    -n ($Dyna[$j] + \"_IK_\" + $i + \"_ctl\")`;\n                                    \n                \n                string $grp =`group -em -n ($Box + \"_grp\")`; \n            \n                parent $Box $grp;\n                                    \n                string $clst[] =`cluster  -n ($Dyna[$j] + \"_IK_Cluster\" + $i)  ($Dyna[$j] + \"_IK_Curve.cv[\" + $i + \"]\")`;\n                \n                float $pos[] =`xform -q -ws -rp $clst[1]`;\n                float $rot[] =`xform -q -ws -ro $clst[1]`;\n                \n                xform -ws -t  $pos[0] $pos[1] $pos[2] $grp;\n                xform -ws -ro $rot[0] $rot[1] $rot[2] $grp;\n\n\n                parentConstraint $Box $clst[1];\n                LNH $Box 0 0 0 1 1 1 1 1 1 1;\n                parent $grp $parentGrp;\n                \n                $ikcnt[$i] = $Box;\n                $clstrList[$i] = $clst[0];\n              }\n              \n              connectAttr -f ($cnd1 + \".outColor.outColorR\") ($parentGrp + \".v\"); \n              string $ikGrp =`group -em -n ($Dyna[$j] + \"_IkExtra_grp\")`; \n\n\n                     \n        int $sz = size($ikLblJnt);\n        string $ikHd[]=` ikHandle \n        -sol ikSplineSolver \n        -ccv false \n        -pcv false \n        -sj $ikLblJnt[0] \n        -ee $ikLblJnt[($sz - 1)] \n        -c $crv\n        -n ($Dyna[$j] + \"_BefoerIK_\" + $i)`;\n \n            for ($each in $clstrList)\n                parent ($each + \"Handle\") $ikGrp;\n            \n            parent  $crv $ikGrp;\n            parent  $ikHd[0] $ikGrp;\n \n           for ($each in $ikcnt){\n              string $shp[]=`listRelatives -s $each`;\n              setAttr ($shp[0] + \".overrideEnabled\") 1;\n              setAttr ($shp[0] + \".overrideColor\") 17;}\n \n //Make Stretch\n          stretchSpine $ikJnts $ikHd[0] $crv $sel[0] $ikcnt[0]; \n\n \n//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n       \n    //before setup\n    \n       string $cnd3 = `createNode condition -n ($Dyna[$j] + \"_cnstCnd\")`;\n    setAttr ($cnd3 + \".secondTerm\") 2;\n    setAttr ($cnd3 + \".operation\") 0;\n    setAttr ($cnd3 + \".colorIfTrueR\") 0;\n    setAttr ($cnd3 + \".colorIfFalseR\") 1;\n    \n    connectAttr -f ($sel[0] + \".Before\") ($cnd3 + \".firstTerm\") ;\n    \n        for ($i=0;$i<(size($bfrJnts));$i++)\n        {\n            \n            string $cnst[] =`parentConstraint $fkJnts[$i] $ikJnts[$i] $bfrJnts[$i] `;\n\n            connectAttr -f ($cnd1 + \".outColor.outColorR\") ($cnst[0] + \".\" + $ikJnts[$i] + \"W1\");\n            connectAttr -f ($cnd3 + \".outColor.outColorR\") ($cnst[0] + \".\" + $fkJnts[$i] + \"W0\");\n\n       }\n \n \n \n//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n\n    //after setup\n    $dynacnt=`aftCtrls $Dyna[$j]`;\n    string $aftgrp =`group -em -n (\"after_\" + $Dyna[$j] + \"_ctl_grp\")`; \n    connectAttr ($sel[0] + \".After\") ($aftgrp + \".v\");\n\n        for ($each in $dynacnt)\n        {\n            \n            string $s1 = `substitute  \"aft_\" $each \"\"`;\n            string $s2 = `substitute  \"_ctl\" $s1 \"\"`;\n\n            parent (\"aftparent_\" + $s2 + \"_grp\")  $aftgrp;\n        }\n        \n             for ($each in $dynacnt){\n              string $shp[]=`listRelatives -s $each`;\n              setAttr ($shp[0] + \".overrideEnabled\") 1;\n              setAttr ($shp[0] + \".overrideColor\") 13;}\n       \n//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n\n    //Dynamic setup\n    //List all chind joints\n    string $child[] =`listRelatives -ad -c $dynaJnts[0]`;\n    $child[((size($child)))] = $dynaJnts[0];\n    //revers array \n    string $list[]= {};\n    int $no = 0;\n        for ($i=((size($child))-1);$i>=0;$i--)\n        {\n        $list[$no] =$child[$i];\n        $no += 1;\n        }\n\n\n    //create base curve\n    float $pos[] =`xform -q -ws -rp $list[0]`;\n    string $crv =`curve  -d 3 -p $pos[0] $pos[1] $pos[2] -n ($Dyna[$j] + \"_Base_Curve\")`;\n     \n              for ($i=1;$i<(size($list));$i++)\n              {\n                 float $pos[] =`xform -q -ws -rp $list[$i]`;\n                 curve  -a -d 3 -p $pos[0] $pos[1] $pos[2] $crv;\n              }\n              \n     //Make base curve Dynamic\n     select -cl  ;\n     select  $crv ;\n     //makeCurvesDynamicHairs 1 0 1;\n     makeCurvesDynamic 2 { \"1\", \"0\", \"1\", \"1\", \"0\"};\n     select -cl  ;\n     \n     \n     \n     //Find connected Hair System\n     string $shape[] =`listRelatives -ad -s $crv`;\n     string $folicle[] =`listConnections   $shape[0]`;\n     string $folicleShp[] =`listRelatives -ad -s $folicle[1]`;\n     string $hairSysShp[] =`listConnections -sh 1 $folicleShp[0]`;\n     string $hairSys[] =`listRelatives -ad -p $hairSysShp[2]`;\n     string $dynaCrv[] =`listRelatives -ad -p $hairSysShp[4]`;\n     setAttr ($hairSysShp[2] + \".active\") 0;\n\n\n     $nucl =`listConnections ($hairSysShp[2] + \".startState\")`;\n\n\n\n     string $hairSysGrp =`group -em -n ($Dyna[$j] + \"_HairSystem_grp\")`; \n     \n    parent $hairSys[0] $folicle[1] $crv $dynaCrv[0] $hairSysGrp;\n    rename $dynaCrv[0] ($Dyna[$j] + \"_Dynamic_crv\");\n    \n    delete ($hairSys[0] + \"Follicles\");\n    delete ($hairSys[0] + \"OutputCurves\");\n    \n    setAttr ($folicleShp[0] + \".pointLock\") 1;\n\n     \n    int $size =size( $dynaJnts );\n    \n    string $ikHlds[]=` ikHandle \n        -sol ikSplineSolver \n        -ccv false \n        -pcv false \n        -sj $dynaJnts[0] \n        -ee $dynaJnts[($size - 1)] \n        -c ($Dyna[$j] + \"_Dynamic_crv\")`;\n\n         \n            parent  $crv $ikGrp;\n            parent  $ikHlds[0] $ikGrp;\n\n    //Make stretchy\n\n     stretchSpine $dynaJnts $ikHlds[0] $crv $sel[0] $ikcnt[0];\n\n    for ($i=0;$i<($size - 1);$i++)\n    {\n    \n    string $s1 = `substitute  \"Dyna_\" $list[$i] \"\"`;\n    if(`objExists (\"FK_\" + $s1 + \"_ctl\")`)\n    {\n    connectAttr -f (\"FK_\" + $s1 + \"_ctl.rotateX\") (\"aftdyna_\" + $s1 + \"_grp.rotateX\");\n    }\n    //connectAttr -f ($dynaJnts[$i] + \".rotateX\") (\"aftdyna_\" + $s1 + \"_grp.rotateX\");\n    connectAttr -f ($dynaJnts[$i] + \".rotateY\") (\"aftdyna_\" + $s1 + \"_grp.rotateY\");\n    connectAttr -f ($dynaJnts[$i] + \".rotateZ\") (\"aftdyna_\" + $s1 + \"_grp.rotateZ\");\n    connectAttr -f ($dynaJnts[$i] + \".scaleX\") (\"aftdyna_\" + $s1 + \"_grp.scaleX\");\n   \n    }\n    \n    connectAttr -f ($dynaJnts[0] + \".translateX\") (\"aftdyna_\" + $Dyna[$j] + \"_grp.translateX\");\n    connectAttr -f ($dynaJnts[0] + \".translateY\") (\"aftdyna_\" + $Dyna[$j] + \"_grp.translateY\");\n    connectAttr -f ($dynaJnts[0] + \".translateZ\") (\"aftdyna_\" + $Dyna[$j] + \"_grp.translateZ\");\n \n\n    string $hrShp[] =`listRelatives -s $hairSys[0]`;\n    connectAttr -f ($sel[0] + \".Stiffness\") ($hrShp[0] + \".stiffness\");\n    connectAttr -f ($sel[0] + \".Damp\") ($hrShp[0] + \".damp\");\n    connectAttr -f ($sel[0] + \".Friction\") ($hrShp[0] + \".friction\");\n    connectAttr -f ($sel[0] + \".Gravity\") ($hrShp[0] + \".gravity\");\n    connectAttr -f ($sel[0] + \".Attract\") ($hrShp[0] + \".startCurveAttract\");\n    connectAttr -f ($sel[0] + \".Flow\") ($hrShp[0] + \".attractionScale[1].attractionScale_FloatValue\");\n    connectAttr -f ($sel[0] + \".Iterations\") ($hrShp[0] + \".iterations\");\n    \n \n    setDrivenKeyframe -cd ($sel[0] + \".Dynamic\") -dv 0 -v 1 ($hrShp[0] + \".simulationMethod\");\n    setDrivenKeyframe -cd ($sel[0] + \".Dynamic\") -dv 1 -v 3 ($hrShp[0] + \".simulationMethod\");\n    setAttr -l 1 ($hrShp[0] + \".simulationMethod\");\n    \n    customPrifix $hairSys[0] $Dyna[$j];\n    customPrifix $folicle[1] $Dyna[$j];\n    customPrifix $ikHlds[0] $Dyna[$j];\n    customPrifix $ikHlds[1] $Dyna[$j];    \n        \n\nstring $sknClst[] =`skinCluster -dr 4.0 -tsb  $bfrJnts[0] ($Dyna[$j] + \"_Base_Curve\")`;\n\n    for ($s=1;$s<(size($bfrJnts));$s++)\n    {      \n    skinCluster -e -ai $bfrJnts[$s] $sknClst[0];        \n    }\n       \n//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++// \nstring $ctrlGrp =`group -em -n ($Dyna[$j] + \"_Controllers_grp\")`; \nstring $stupGrp =`group -em -n ($Dyna[$j] + \"_Setup_grp\")`; \nstring $sclGrp =`group -em -n ($Dyna[$j] + \"_scale_grp\")`; \n\n\nfloat $dynaPos[] =`xform -q -ws -t $dynaJnts[0]`;\nfloat $dynaRot[] =`xform -q -ws -ro $dynaJnts[0]`;\n\nstring $RGJnt =`joint -p $dynaPos[0] $dynaPos[1] $dynaPos[2] -n (\"Extra\" + $dynaJnts[0])`;\nxform -ws -ro $dynaRot[0] $dynaRot[1] $dynaRot[2] $RGJnt;\nmakeIdentity -apply true -t 1 -r 1 -s 1 -n 0 $RGJnt;\nparent $dynaJnts[0] $RGJnt;\nparentConstraint -mo $dynaParent[$j] $RGJnt;\n\nparent (\"after_\" + $Dyna[$j] + \"_ctl_grp\") ($Dyna[$j] + \"_IkCtlrs_grp\") (\"FK_\" + $Dyna[$j] + \"_fkCtrls_grp\") $ctrlGrp;\nparentConstraint -mo $dynaParent[$j] $ctrlGrp;\n\nparent  $hairSysGrp $ikGrp $stupGrp;\nparent $fkJnts[0] $ikJnts[0] $bfrJnts[0]  $sclGrp;\n\nconnectAttr  -f ($sel[0] + \".Setup\") ($stupGrp + \".v\");\n\nif (!`objExists \"HairBakedSet\"`){\n    string $set =`sets -em -name \"HairBakedSet\"`;\n            for ($each in $dynacnt){\n            \n            string $prnt[]= `listRelatives -p $each`;\n            string $grndprnt[]= `listRelatives -p $prnt[0]`;\n            sets -e  -add $set $grndprnt;\n            \n            }\n        }\n    else{\n            for ($each in $dynacnt){\n            \n                string $prnt[]= `listRelatives -p $each`;\n                string $grndprnt[]= `listRelatives -p $prnt[0]`;\n                sets -e  -in \"HairBakedSet\" $grndprnt;\n                \n            }\n    }\n\n\n\n\n\n// For scale\nparent $sclGrp $stupGrp;\nscaleConstraint -mo $sel[0] $ctrlGrp;\nscaleConstraint -mo $sel[0] $sclGrp;\n}\n\nstring $mnStupGrp;    \nstring $mnCtrlGrp;\n\n\nif (!`objExists \"DynaControllers_grp\"`){\n    $mnCtrlGrp =`group -em -n \"DynaControllers_grp\"`; }\n\nif (!`objExists \"DynaSetup_grp\"`){\n    $mnStupGrp =`group -em -n \"DynaSetup_grp\"`; }\n\nfor ($i=0;$i<(size($Dyna));$i++)\n{\nparent $Dyna[$i] $dynaParent[$i];\nparent ($Dyna[$i] + \"_Controllers_grp\") DynaControllers_grp;\nparent ($Dyna[$i] + \"_Setup_grp\") DynaSetup_grp;\n \n\nselect -cl;\nprint \"// Result 1\";\n\n\n//For Scale\n\nstring $allJnt[] =`ls -dag -type \"joint\" $sel[0]`;\n\nfor ($j=0;$j<(size($allJnt));$j++)\n{\n\nstring $cons =`connectionInfo -sfd ($allJnt[$j] + \".inverseScale\")`;\n\n    if($cons != \"\")\n    {\n    disconnectAttr $cons ($allJnt[$j] + \".inverseScale\");\n    }\n    \n}\n\n\n}\n}\n}\nint $cb=`checkBox -q -v Ncb`;\nif ($cb!=1)\n{\n    delete $nucl;\n}\n\n};\n\n//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n//\n//                       Extra procedures\n//\n//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n\nglobal proc string[] dupPrifix (string $joint, string $prefix )\n{  \n    //get child joints\n    string $child[] =`listRelatives -ad -c $joint`;\n    $child[((size($child)))] = $joint;\n    string $newjnt[] = {};\n    //revers array \n    string $list[]= {};\n    int $no = 0;\n        for ($i=((size($child))-1);$i>=0;$i--)\n        {\n        $list[$no] =$child[$i];\n        $no += 1;\n        }\n    \n \n    //duplicate joint with prefix\n       string $dup[] =` duplicate  -rc $joint`;\n\n       int $count = 0;\n            for ($i=0;$i<(size($dup));$i++)\n            {\n                rename $dup[$i] ($prefix + \"_\" + $list[$i]);\n                $newjnt[$count] = ($prefix + \"_\" + $list[$i]);\n                $count += 1;\n                \n            }  \n            \n     return $newjnt;\n};\n\n//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n\nglobal proc string[] customPrifix (string $joint,string $prefix )\n{  \n    //get child joints\n    string $child[] =`listRelatives -ad -c $joint`;\n    $child[((size($child)))] = $joint;\n    string $newjnt[] = {};\n\n        int $count = 0;\n            for ($i=0;$i<(size($child));$i++)\n            {\n                rename $child[$i] ($prefix + \"_\" + $child[$i]);\n                $newjnt[$count] = ($prefix + \"_\" + $child[$i]);\n                $count += 1;\n                \n            }  \n            \n     return $newjnt;\n};\n\n//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n\nglobal proc string[] fkCtrls (string $joint)\n{\nstring $ctrls[] = {};\nint $count = 0;\nstring $child[] =`listRelatives -ad -c $joint`;\n$child[((size($child)))] = $joint;\nstring $newjnt[] = {};\n    \n    //revers array \n    string $list[]= {};\n    int $no = 0;\n        for ($i=((size($child))-1);$i>=0;$i--)\n        {\n        $list[$no] =$child[$i];\n        $no += 1;\n        }\n    \n        string $fkGrp =`group -em -n ($joint + \"_fkCtrls_grp\")`; \n\n        //constriant jont with new controler\n        for ($i=0;$i<((size($list)-1 ));$i++)\n        {\n           string $fkctrl[]= `circle \n               -c 0 0 0 -nr 1 0 0 \n               -sw 360 -r 1 -d 3 \n               -ut 0 -tol 0.01 \n               -s 8 -ch 0 \n               -n ($list[$i] + \"_ctl\")`;\n           string $grp1 =`group -em -n (\"fkExtra_\" + $list[$i] + \"_grp\")`; \n           string $grp2 =`group -em -n (\"fkparent_\" + $list[$i] + \"_grp\")`; \n        \n           parent $fkctrl[0] $grp1;\n           parent $grp1 $grp2;\n           \n           float $pos[] =`xform -q -ws -rp $list[$i]`;\n           float $rot[] =`xform -q -ws -ro $list[$i]`;\n           \n           xform -ws -t $pos[0] $pos[1] $pos[2] $grp2;\n           xform -ws -ro $rot[0] $rot[1] $rot[2] $grp2;\n        \n           parentConstraint -mo $fkctrl[0] $list[$i];\n           \n           LNH $fkctrl[0] 0 0 0 0 0 0 1 1 1 1;\n           LNH $grp1   0 0 0 0 0 0 1 1 1 1;\n           \n           parent $grp2 $fkGrp;\n           \n           $ctrls[$count] = $fkctrl[0];\n           $count += 1;\n        }\n\n\n        // make fk hierachy\n        for ($i=1;$i<((size($ctrls)));$i++)\n        {            \n            parentConstraint -mo $ctrls[($i - 1)] (\"fkparent_\" + $list[$i] + \"_grp\") ;\n        }\n        \n  return $ctrls;\n\n}\n\n//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n\nglobal proc string[] aftCtrls (string $joint)\n{ \n\nstring $ctrls[] = {};\nint $count = 0;\nstring $child[] =`listRelatives -ad -c $joint`;\n$child[((size($child)))] = $joint;\nstring $newjnt[] = {};\n    \n    //revers array \n    string $list[]= {};\n    int $no = 0;\n        for ($i=((size($child))-1);$i>=0;$i--)\n        {\n        $list[$no] =$child[$i];\n        $no += 1;\n        }\n    \n    \n        //constriant jont with new controler\n        for ($i=0;$i<((size($list)-1 ));$i++)\n        {\n\n           string $aftctrl[]= `circle \n               -c 0 0 0 -nr 1 0 0 \n               -sw 360 -r 1 -d 1 \n               -ut 0 -tol 0.01 \n               -s 4 -ch 0 \n               -n (\"aft_\" + $list[$i] + \"_ctl\")`;\n               \n           xform -ws -ro -45 0 0 $aftctrl[0];\n           makeIdentity -apply 1 -r 1 $aftctrl[0];\n\n           string $grp1 =`group -em -n (\"aftExtra_\" + $list[$i] + \"_grp\")`; \n           string $grp2 =`group -em -n (\"aftparent_\" + $list[$i] + \"_grp\")`; \n           string $grp3 =`group -em -n (\"aftdyna_\" + $list[$i] + \"_grp\")`; \n\n\n           if($i == 0)\n           {\n            addAttr -ln \"transCon\"  -at bool  $grp3;\n            setAttr -e -keyable false -lock true ($grp3 + \".transCon\");\n           }\n           \n        \n           parent $aftctrl[0] $grp1;\n           parent $grp1 $grp3;\n           parent $grp3 $grp2;\n           \n           float $pos[] =`xform -q -ws -rp $list[$i]`;\n           float $rot[] =`xform -q -ws -ro $list[$i]`;\n           \n           xform -ws -t $pos[0] $pos[1] $pos[2] $grp2;\n           xform -ws -ro $rot[0] $rot[1] $rot[2] $grp2;\n        \n           parentConstraint -mo $aftctrl[0] $list[$i];\n           \n           \n          LNH $aftctrl[0] 0 0 0 0 0 0 1 1 1 1;\n          LNH $grp1 0 0 0 0 0 0 1 1 1 1;\n\n            \n           $ctrls[$count] = $aftctrl[0];\n           $count += 1;\n        }\n\n\n        // make fk hierachy\n        for ($i=1;$i<(size($ctrls));$i++)\n        {\n            parentConstraint -mo (\"aft_\" + $list[($i-1)] + \"_ctl\") (\"aftparent_\" + $list[$i] + \"_grp\");\n            \n        }\n        \n   \n    \n  return $ctrls;\n\n}\n\n//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n\nglobal proc stretchSpine (string $jnt[],string $ikHandle, string $crv,string $glCrv, string $attrCrv )\n{\nint $attExt = 1;\nstring $Attr[] = `listAttr -k $attrCrv`;\n    for ($arbt in $Attr)\n    {\n        if ($arbt == \"Stretchy\" || $arbt == \"stretchy\" )\n        {\n        $attExt = 0;\n        }\n        \n    }\n    \n    if ($attExt == 1)\n    {\n        addAttr -ln \"Stretchy\"  -at \"enum\" -en \"Off:On:\" $attrCrv ;\n        setAttr -e-keyable true ($attrCrv  + \".Stretchy\");\n    }\n\n\n\nstring $cvrInfo =`arclen -ch 1 $crv`;\n\nstring $cnd =`createNode condition -n ($jnt[0] + \"_Schy\")`;\n\nconnectAttr -f ($attrCrv + \".Stretchy\") ($cnd + \".firstTerm\");\nsetAttr ($cnd + \".secondTerm\") 1;\nsetAttr ($cnd + \".operation\") 0;\nconnectAttr -f ($cvrInfo + \".arcLength\") ($cnd + \".colorIfTrueR\");\nfloat $arc = `getAttr ($cvrInfo + \".arcLength\")`;\n\n\nstring $glMd =`createNode multiplyDivide -n ($jnt[0] + \"_glMD\")`;\n\n    if(!`objExists \"SRT\"`)\n    {\n        connectAttr -f ($glCrv  + \".scaleX\") ($glMd + \".input1X\");\n    }\n    else\n    {\n        connectAttr -f (\"SRT.scaleX\") ($glMd + \".input1X\");\n    }\nsetAttr ($glMd + \".operation\") 1;\nsetAttr ($glMd + \".input2X\") $arc;\nconnectAttr -f ($glMd  + \".outputX\") ($cnd + \".colorIfFalseR\");\n\nstring $md =`createNode multiplyDivide -n ($jnt[0] + \"_MD\")`;\nsetAttr ($md+ \".operation\") 2;\n\nconnectAttr -f ($cnd + \".outColorR\") ($md + \".input1X\");\nconnectAttr -f ($glMd + \".outputX\") ($md + \".input2X\");\n\n\n        for ($each in $jnt)\n            connectAttr -f ($md + \".outputX\") ($each  + \".scaleX\");\n\n\n}\n\n//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n\nglobal proc int attrExt (string $obj, string $attr)\n{\nstring $allAttr[] =`listAttr -ud $obj`;\nint $go = 0;\nfor ($each in $allAttr)\n\nif ($each == $attr)\n    {\n        $go = 1;\n    }\n    \n    \n    return $go;\n}\n\n//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n\nglobal proc int  LNH (string $obj,int $tx,int $ty,int $tz,int $rx,int $ry,int $rz,int $sx,int $sy,int $sz,int $v)\n{\nint $attrVal[];\n$attrVal[0] =$tx;$attrVal[1] =$ty;$attrVal[2] =$tz;\n$attrVal[3] =$rx;$attrVal[4] =$ry;$attrVal[5] =$rz;\n$attrVal[6] =$sx;$attrVal[7] =$sy;$attrVal[8] =$sz;\n$attrVal[9] =$v;\nint $keyVal;\nstring $attrs[] ={\"tx\",\"ty\",\"tz\",\"rx\",\"ry\",\"rz\",\"sx\",\"sy\",\"sz\",\"v\"};\n\n    for ($i=0;$i<(size($attrs));$i++)\n    {\n        if ($attrVal[$i] == 0)\n            $keyVal = 1;\n            \n        if ($attrVal[$i] == 1)\n            $keyVal = 0;\n            \n            \n    setAttr -lock $attrVal[$i] -keyable $keyVal ($obj +  \".\" + $attrs[$i]);\n    }\n\n    return 1;\n}\n\n\n//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n\nglobal proc rmDynaSetup ()\n{\nstring $sel[] =`ls -sl`; \nif ((size($sel)) == 0){\n     warning \"select the parent joint.....\";}\nelse{\n//find all dyan lables\nstring $child[] =`listRelatives -ad -c $sel[0]`;\nstring $Dyna[] = {};\nstring $ikLbl[] = {};\nint $no= 0;\n\n    //List Dyna joints\n    for ($each in $child)\n    {\n     \n       if ((`objectType $each`) == \"joint\")\n        {\n            string $lable =`getAttr ($each + \".otherType\")`;\n            int $types =`getAttr ($each + \".type\")`;\n            \n                    if ((startsWith ($lable, \"dyna\")) == 1 && $types == 18)\n                    {\n                        setAttr ($each + \".drawLabel\") 0;\n                        $Dyna[$no]=$each;\n                        $no+= 1;\n                    }\n                    \n\n        }\n    }\n$no= 0;\n\n    //List PropA joints\n    for ($each in $child)\n    {\n     \n       if ((`objectType $each`) == \"joint\")\n        {\n            int $types =`getAttr ($each + \".type\")`;\n            \n                    if ($types == 15)\n                    {      \n                        string $s1 = `substitute \"IK_\" $each \"\"`;  \n                        setAttr ($s1 + \".drawLabel\") 0;               \n                        $ikLbl[$no]=$each;\n                        $no+= 1;\n                    }\n        }\n        \n    \n    }\n\n\n\nif ((size($Dyna)) == 0){\n    \n         string $lable =`getAttr ($sel[0] + \".otherType\")`;\n         int $types =`getAttr ($sel[0] + \".type\")`;\n         \n                    if ((startsWith ($lable, \"dyna\")) == 1 && $types == 18){\n                        $Dyna[0]=$sel[0]; }\n                    }\n\nif ((size($Dyna)) == 0){\n    warning \"There is no Dyna.....\";}\nelse{\n//Delete Setup\nfor ($each in $Dyna)\n{    \n    setAttr ($each + \".drawLabel\") 1;\n    delete -cn $each;\n    \n    if (`objExists ($each + \"_Controllers_grp\")`)\n        delete ($each + \"_Controllers_grp\");\n\n    if (`objExists ($each + \"_Setup_grp\")`)\n        delete ($each + \"_Setup_grp\");\n \n}\n    \n//Restore lable\nfor ($e in  $ikLbl)\n    setAttr ($e + \".drawLabel\") 1;\n    \nstring $child[] =`listRelatives -c \"DynaControllers_grp\"`;\nif ((size($child)) == 0)\n    delete \"DynaControllers_grp\";\n    \n    \nstring $child[] =`listRelatives -c \"DynaSetup_grp\"`;\nif ((size($child)) == 0)\n    delete \"DynaSetup_grp\";\n    \n    }        \n    }\n};\nglobal proc CN()\n{\n    string $ctl[]=`ls -sl`;\n    addAttr -ln \"StartFrame\" -k 1 -at \"long\" -dv 1 $ctl[0];\n    connectAttr -f ($ctl[0] + \".StartFrame\") \"nucleus1.startFrame\";\n} \n " 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "RGctrl 1;\n\nglobal proc RGctrl(int $YN)\n{\n\n    if($YN == 1)\n    {..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "RG" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "RGctrl 1;\n\nglobal proc RGctrl(int $YN)\n{\n\n    if($YN == 1)\n    {\n        if(`dockControl -ex rgdock `){deleteUI rgdock; } \n        if(`window -ex RGctrl`){deleteUI RGctrl;};\n         \n        RGctrlWIN;\n        dockControl -area \"right\" -fl 0\n                -content RGctrl -l \"RGctrl\"\n                -allowedArea \"right\" rgdock;\n    }\n    else \n    {\n        if(`dockControl -ex rgdock `){deleteUI rgdock; } \n        if(`window -ex RGctrl`){deleteUI RGctrl;};\n        RGctrlWIN;\n    }\n\n}\n      \n\n//////////////////////////////////////////////////////////////////////\n////////////////////////////  RGctrlWIN  ///////////////////////////\n/////////////////////////////////////////////////////////////////////\n\n\nglobal proc RGctrlWIN()\n{\n    if(`window -ex RGctrl`){deleteUI RGctrl;};\n    window -title \"RG Controller v2.1\" -s 0 RGctrl;\n    formLayout topLayout;\n    \n        //////////////// Zone 3    \n        columnLayout  -p topLayout -adj 1 ColClm;\n            text   -al left -bgc 0 0.1 0.2 -l \"  Color :         \" cntTxt;\n            button -l \"    None    \" -c  \"overrideColor(0)\";\n            button -l \"\" -bgc 0 0 1 -c  \"overrideColor(6)\";\n            button -l \"\" -bgc 1 0 0 -c  \"overrideColor(13)\";\n            button -l \"\" -bgc 0 1 0 -c  \"overrideColor(14)\";\n            button -l \"\" -bgc 0 1 1 -c  \"overrideColor(18)\";\n            button -l \"\" -bgc 1 1 0 -c  \"overrideColor(17)\";\n            text -l \"\"; \n            text   -al left -bgc 0 0.1 0.2 -l \"  Axis :         \" axsTxt;\n            checkBox -v 1 -l \"Orient Child\" orntCB;\n            button -l \"Y UP\" -bgc 0 0.5 0.5 -c \"orientJnt YUP\" yUpBtt ;\n            button -l \"Y DN\" -bgc 0 0.5 0.5 -c \"orientJnt YDN\" yDnBtt ;\n            button -l \"Z UP\" -bgc 0 0.5 0.5 -c \"orientJnt ZUP\" zUpBtt ;\n            button -l \"Z DN\" -bgc 0 0.5 0.5 -c \"orientJnt ZDN\" zDnBtt ;\n            button -l \"None\" -bgc 0 0.5 0.5 -c \"orientJnt NONE\" nonBtt ;\n            button -l \"LRA\"  -bgc 0 0.5 0.5 -c \"\" lraBtt ;\n\n    \n    \n        //////////////// Zone 2\n        columnLayout -p topLayout -adj 1 wireCnt;\n            text   -al left -bgc 0 0.1 0.2 -l \"  Controller :              \" cntTxt;\n            button -bgc 0.2 0.2 0.3 -l \"Triangle\" -c \"cntWireNw Triangle\";\n            button -bgc 0.2 0.2 0.3 -l \"Circle\" -c \"cntWireNw Circle\";\n            button -bgc 0.2 0.2 0.3 -l \"Square\" -c \"cntWireNw Square\";\n            button -bgc 0.2 0.2 0.3 -l \"Fat Cross\" -c \"cntWireNw FatCross\";\n            button -bgc 0.2 0.2 0.3 -l \"Pyramid\" -c \"cntWireNw Pyramid\";\n            button -bgc 0.2 0.2 0.3 -l \"Cube\" -c \"cntWireNw Cube\";\n            button -bgc 0.2 0.2 0.3 -l \"Sphere\" -c \"cntWireNw Sphere\";\n            button -bgc 0.2 0.2 0.3 -l \"Cone\" -c \"cntWireNw Cone\";\n            button -bgc 0.2 0.2 0.3 -l \"Rombus\" -c \"cntWireNw Rombus\";\n            button -bgc 0.2 0.2 0.3 -l \"Single Normal\" -c \"cntWireNw SingleNormal\";\n            button -bgc 0.2 0.2 0.3 -l \"Four Normal\" -c \"cntWireNw FourNormal\";\n            button -bgc 0.2 0.2 0.3 -l \"Dumbell\" -c \"cntWireNw Dumbell\";\n            button -bgc 0.2 0.2 0.3 -l \"Arrow On Ball\" -c \"cntWireNw ArrowOnBall\";\n            button -bgc 0.3 0.5 0.2 -l \"Shape Replacer\" -c \"shpRplc\";\n        \n        \n     //////////////// Zone 1   \n    formLayout -p topLayout mainLayout;\n        text -p mainLayout -al left -bgc 0 0.1 0.2 -l \"\\t           --Rahul Gawade--\" ownTxt;\n \n        text -p mainLayout -al left -bgc 0 0.1 0.2 -l \"  Joints :\" jntTxt;\n        \n        formLayout -p mainLayout -bgc 0.4 0.4 0.4 jntgrid;\n            checkBox  -v 1 -l \"Uv Axis\" uvAxisCB;  \n            button -l \"Jnt @ Center\" -bgc 0 0.5 0.5 -c RGjntAtCntr FKCB;  \n            button -l \"Component\" -bgc 0 0.5 0.5 -c cmpntJntCreator Cmpnt ;\n            button -l \"Volume\" -bgc 0 0.5 0.5 -c  jntAtCntr Vlm ;\n                   \n        text -p mainLayout -al left -bgc 0 0.1 0.2 -l \"  Constaints :\" lbTxt;\n        \n        gridLayout -p mainLayout -bgc 0.4 0.4 0.4 -cr 1 -numberOfColumns 3 -cellWidthHeight 80 30 radiogrid;\n            radioCollection cnst;\n            radioButton -label \"Point\" pnt;\n            radioButton -label \"Orient\" ort;\n            radioButton -sl -label \"Parent\" prnt;\n            checkBox  -v 1 -l \"Scale\" sclCB;\n        \n        text -p mainLayout -bgc 0 0.1 0.2 -al left -l \"  Constaints Axis :\" lbTxt2;\n        \n        gridLayout  -bgc 0.4 0.4 0.4 -p mainLayout -cr 1 -numberOfColumns 3 -cellWidthHeight 80 30 axisGrid;\n            radioCollection ax;\n            radioButton -label \"X\" x;\n            radioButton -sl -label \"Y\" y;\n            radioButton -label \"Z\" z; \n            checkBox  -v 0 -l \"Proxy\" -cc RGprxCB pxCB; \n            text -l \"\"; \n            checkBox  -en 0 -v 0 -l \"Neg Trans\" negCB;  \n        button -p mainLayout -l \"Float\" -bgc 0 0.5 0.5 -c (\"doIt 0\") cnt ;\n        button -p mainLayout -l \"FK\" -bgc 0 0.5 0.5 -c  (\"doIt 1\") prxcnt ;\n\n\n    // Extra Layout\n    formLayout  -p topLayout  -numberOfDivisions 100 xtraLay;\n    string $columnLX = `columnLayout  -p xtraLay -adjustableColumn true`;\n    button -l \"Fk Parnt\" -bgc 0.3 0.5 0.2 -c prntFk;\n    button -l \"Folicle\" -bgc 0.3 0.5 0.2 -c RGuvFlc;\n    \n    string $columnRX = `columnLayout -p xtraLay -adjustableColumn true`;\n    button -l \"Zero Out\" -bgc 0.3 0.5 0.2 -c RGzeroOut;\n    button -l \"Re-Skin\" -bgc 0.3 0.5 0.2 -c RGreSkin;\n    \n    formLayout -edit\n        -attachForm     $columnLX     \"top\"    4\n        -attachForm     $columnLX     \"left\"   1\n        -attachForm     $columnLX     \"bottom\" 1 \n        -attachPosition $columnLX     \"right\"  1 50\n    \n        -attachForm     $columnRX     \"top\"    4\n        -attachPosition $columnRX     \"left\"   1 50\n        -attachForm     $columnRX     \"bottom\" 1 \n        -attachForm     $columnRX     \"right\"  1\n        \n        \n    xtraLay;\n    \n\n    // Dynamic Layout\n    text -p mainLayout -al left -bgc 0 0.1 0.2 -l \"  Dynamics :\" dnyTxt;\n    formLayout  -p mainLayout -bgc 0.4 0.4 0.4 -numberOfDivisions 100 shp;\n    string $columnL = `columnLayout  -p shp -adjustableColumn true`;\n    button -l \"Add Dynamic\" -bgc 0 0.5 0.5 -c dynaSetup;\n    button -l \"Add Dyna\" -bgc 0 0.5 0.5 -c addDyna;\n    checkBox -v 1 -l \"with nucleus\" -h 23 -bgc 0 0.5 0.5 Ncb;\n    string $columnR = `columnLayout -p shp -adjustableColumn true`;\n    button -l \"Remove Dynamic\" -bgc 0 0.5 0.5 -c rmDynaSetup;\n    button -l \"Add PropA\" -bgc 0 0.5 0.5 -c addPropA;\n    button -l \"Connect nucleus\" -bgc 0 0.5 0.5 -c CN;\n    string $close = `button -p shp -bgc 0.2 0.2 0.3 -l \"Transfer Attribute\" -c transAtt`;\n    \n    formLayout -edit\n        -attachForm     $columnL     \"top\"    5\n        -attachForm     $columnL     \"left\"   5\n        -attachControl  $columnL     \"bottom\" 5 $close\n        -attachPosition $columnL     \"right\"  5 50\n    \n        -attachForm     $columnR     \"top\"    5\n        -attachPosition $columnR     \"left\"   0 50\n        -attachControl  $columnR     \"bottom\" 5 $close\n        -attachForm     $columnR     \"right\"  5\n        \n        \n        -attachNone     $close       \"top\"    \n        -attachForm     $close       \"left\"   5 \n        -attachForm     $close       \"bottom\" 5 \n        -attachForm     $close       \"right\"  5\n        \n    shp;\n \n \n \n           \n    formLayout -edit\n\n        -attachForm     ownTxt       \"top\"    5\n        -attachForm     ownTxt       \"left\"   5\n        -attachControl  ownTxt       \"bottom\" 5 jntTxt\n        -attachForm     ownTxt       \"right\"  5\n                \n        -attachNone     jntTxt       \"top\"    \n        -attachForm     jntTxt       \"left\"   5\n        -attachControl  jntTxt       \"bottom\" 5 jntgrid\n        -attachForm     jntTxt       \"right\"  5\n        \n        -attachNone     jntgrid       \"top\"    \n        -attachForm     jntgrid       \"left\"   5\n        -attachControl  jntgrid       \"bottom\" 5 lbTxt\n        -attachForm     jntgrid       \"right\"  5\n          \n        -attachNone     lbTxt       \"top\"    \n        -attachForm     lbTxt       \"left\"   5\n        -attachControl  lbTxt       \"bottom\" 5 radiogrid\n        -attachForm     lbTxt       \"right\"  5\n    \n        -attachNone     radiogrid   \"top\"    \n        -attachForm     radiogrid   \"left\"   5\n        -attachControl  radiogrid   \"bottom\" 5 lbTxt2\n        -attachForm     radiogrid   \"right\"  5\n        \n        -attachNone     lbTxt2       \"top\"    \n        -attachForm     lbTxt2       \"left\"   5\n        -attachControl  lbTxt2       \"bottom\" 5 axisGrid\n        -attachForm     lbTxt2       \"right\"  5\n    \n        -attachNone     axisGrid       \"top\"    \n        -attachForm     axisGrid       \"left\"   5\n        -attachControl  axisGrid       \"bottom\" 5 cnt\n        -attachForm     axisGrid       \"right\"  5\n    \n    \n        -attachNone     cnt         \"top\"    \n        -attachForm     cnt         \"left\"   5 \n        -attachControl  cnt         \"bottom\" 5 dnyTxt\n        -attachPosition cnt         \"right\"  5 50\n        \n        -attachNone     prxcnt      \"top\"    \n        -attachControl  prxcnt      \"left\"   5 cnt\n        -attachControl  prxcnt      \"bottom\" 5 dnyTxt\n        -attachForm     prxcnt      \"right\"  5    \n\n        -attachNone     dnyTxt      \"top\"    \n        -attachForm     dnyTxt      \"left\"   5\n        -attachControl  dnyTxt      \"bottom\" 5 shp\n        -attachForm     dnyTxt      \"right\"  5 \n                   \n        -attachNone     shp         \"top\"\n        -attachForm     shp         \"left\"   5\n        -attachForm     shp         \"bottom\" 5 \n        -attachForm     shp         \"right\"  5\n        \n    mainLayout;\n\n    formLayout -edit\n        \n        -attachForm     uvAxisCB       \"top\"    5\n        -attachForm     uvAxisCB       \"left\"   5 \n        -attachNone     uvAxisCB       \"bottom\" \n        -attachForm     uvAxisCB       \"right\"  5 \n\n        -attachForm     FKCB           \"top\"    5 \n        -attachPosition FKCB           \"left\"   5 50\n        -attachNone     FKCB           \"bottom\" \n        -attachForm     FKCB           \"right\"  5\n        \n        -attachControl  Cmpnt           \"top\"    13 uvAxisCB\n        -attachForm     Cmpnt           \"left\"   5 \n        -attachForm     Cmpnt           \"bottom\" 5\n        -attachControl  Cmpnt           \"right\"  5 Vlm\n\n        -attachControl  Vlm           \"top\"    5 FKCB\n        -attachPosition Vlm           \"left\"   5 50\n        -attachForm     Vlm           \"bottom\" 5\n        -attachForm     Vlm           \"right\"  5\n        \n                \n    jntgrid;\n \n \n    formLayout -edit\n        \n        -attachForm     mainLayout    \"top\"    0 \n        -attachForm     mainLayout    \"left\"   5\n        -attachNone     mainLayout    \"bottom\" \n        -attachNone     mainLayout    \"right\"  \n\n        -attachForm     wireCnt       \"top\"    5\n        -attachControl  wireCnt       \"left\"   5 mainLayout\n        -attachNone     wireCnt       \"bottom\" \n        -attachControl  wireCnt       \"right\"  5 ColClm\n\n        -attachForm     ColClm       \"top\"    5\n        -attachNone     ColClm       \"left\"   \n        -attachNone     ColClm       \"bottom\"  \n        -attachForm     ColClm       \"right\"  5 \n        \n        -attachControl  xtraLay       \"top\"    5 ColClm        \n        -attachControl  xtraLay       \"left\"   5 mainLayout\n        -attachForm     xtraLay       \"bottom\" 5 \n        -attachForm     xtraLay       \"right\"  5 \n\n    topLayout; \n\n \n \n    \n    showWindow RGctrl;\n}\n\nglobal proc RGprxCB()\n{\n    int $val =`checkBox  -q -v pxCB`; \n    if($val == 1)\n    {\n        checkBox  -e -en 1 -v 1 negCB;  \n    }\n    else\n    {\n        checkBox  -e -en 0 -v 0 negCB;          \n    }  \n}\n\n\nglobal proc RGjntAtCntr()\n{\n    string $sel[] =`ls -sl`;\n    if(`size $sel` != 0)\n    {\n        for ($each in $sel)\n        {\n           \n            float $center[]={};\n            float $bbox[] = `exactWorldBoundingBox $each`;\n            $center[0] = ( $bbox[0] + $bbox[3] )/2;\n            $center[1] = ( $bbox[1] + $bbox[4] )/2;\n            $center[2] = ( $bbox[2] + $bbox[5] )/2;   \n            select -cl  ;\n            joint -p $center[0] $center[1] $center[2] -n ($each + \"_Jnt\");\n        }     \n    }\n    else\n    {\n        error \"Nakari ki nakari hi rahegi Select multiple Objects\";\n    }\n}\n\n\n\nglobal proc RGzeroOut()\n{\n    string $sel[] =`ls -sl`;\n    if(`size $sel` != 0)\n    {\n        for ($each in $sel)\n        {\n          string $grp = `group -em -n ($each + \"_grp\")`;  \n          float $pos[] =`xform -q -ws -rp $each`;\n          float $rot[] =`xform -q -ws -ro $each`;\n          xform -ws -t $pos[0] $pos[1] $pos[2] $grp;\n          xform -ws -ro $rot[0] $rot[1] $rot[2] $grp;\n          string $prnt[] =`listRelatives -p $each`;\n          \n          if(`size($prnt)` != 0)\n          {\n              parent $grp $prnt[0];\n              parent $each $grp;\n          }\n          else\n          {\n              parent $each $grp;              \n          }\n          \n        }\n    }\n    else\n    {\n        error \"school nahi gaye kya pata nahi Zero Out kya hai\";\n    }\n}        \n\n//////////////////////////////////////////////////////////////////////\n//////////////////////////  Re-Skin Object  /////////////////////////\n/////////////////////////////////////////////////////////////////////\n\n\nglobal proc RGreSkin ()\n{\nstring $sel[]=`ls -sl`;\n    \n    if(`size $sel` != 0)\n    {\n\n        for($i = 0; $i<`size($sel)`; $i++)\n        {\n            \n            string $skinclst  = `findRelatedSkinCluster($sel[$i])`;\n            \n            if($skinclst != \"\")\n            {\n                string $shp[] =`ls -dag -s $sel[$i]`;\n                string $jnts[] =`skinCluster -q -inf $skinclst`;\n                skinCluster -e  -ubk $shp[0];\n                catchQuiet(`delete \"*bindPose*\"`);\n                skinCluster $jnts $shp[0];\n            }\n            else\n            {\n                error \"dub mar jake select skin object\";\n            }\n \n        }\n    }\n    else\n    {\n        error \"dub mar jake select skin object\";\n    }\n}    \n    \n//////////////////////////////////////////////////////////////////////\n////////////////////////////  Display LRA  ///////////////////////////\n/////////////////////////////////////////////////////////////////////\n\nglobal proc RGLRA ()\n{\nstring $sel[]=`ls -sl`;\n    for($i = 0; $i<`size($sel)`; $i++)\n    {\n        if(`objectType -isType \"joint\" $sel[$i]`)\n        {\n            float $val= `getAttr ($sel[$i] + \".displayLocalAxis\")`;\n            if($val == 0)\n                setAttr ($sel[$i] + \".displayLocalAxis\") 1;\n            else\n                setAttr ($sel[$i] + \".displayLocalAxis\") 0;\n\n        }\n    }\n}\n\n//////////////////////////////////////////////////////////////////////\n///////////////////////////  orient Joint  //////////////////////////\n/////////////////////////////////////////////////////////////////////\n\nglobal proc orientJnt (string $TYPE)\n{\nstring $sel[]=`ls -sl`;\n    for($i = 0; $i<`size($sel)`; $i++)\n    {\n        if(`objectType -isType \"joint\" $sel[$i]`)\n        {\n            string $cld[] =`listRelatives -c $sel[$i]`;\n            if(`size($cld)` != 0)\n            {\n                 int $val=`checkBox -q -v orntCB`;\n\n                if($val == 0)\n                {\n                    switch ($TYPE)\n                    {\n                        case \"YUP\" :\n                            joint -e  -oj xyz -secondaryAxisOrient yup $sel[$i];\n                        break ; \n                        \n                        case \"YDN\" :\n                            joint -e  -oj xyz -secondaryAxisOrient ydown $sel[$i];\n                        break ; \n                        \n                        case \"ZUP\" :\n                            joint -e  -oj xzy -secondaryAxisOrient yup $sel[$i];\n                        break ; \n                        \n                        case \"ZDN\" :\n                            joint -e  -oj xzy -secondaryAxisOrient ydown $sel[$i];\n                        break ;  \n                        \n                        case \"NONE\" :\n                            joint -e  -oj none $sel[$i];\n                        break ;  \n                    } \n                }\n                else\n                {\n                    switch ($TYPE)\n                    {\n                        case \"YUP\" :\n                            joint -e -ch -oj xyz -secondaryAxisOrient yup $sel[$i];\n                        break ; \n                        \n                        case \"YDN\" :\n                            joint -e -ch  -oj xyz -secondaryAxisOrient ydown $sel[$i];\n                        break ; \n                        \n                        case \"ZUP\" :\n                            joint -e -ch  -oj xzy -secondaryAxisOrient yup $sel[$i];\n                        break ; \n                        \n                        case \"ZDN\" :\n                            joint -e -ch  -oj xzy -secondaryAxisOrient ydown $sel[$i];\n                        break ;  \n                        \n                        case \"NONE\" :\n                            joint -e -ch  -oj none $sel[$i];\n                        break ;  \n                    } \n                }              \n               \n            }\n            else\n            {\n                 switch ($TYPE)\n                {\n                    case \"NONE\" :\n                        joint -e  -oj none $sel[$i];\n                    break ;  \n                } \n            }         \n        }\n    }\n}\n\n//////////////////////////////////////////////////////////////////////\n//////////////////////////  override Color  /////////////////////////\n/////////////////////////////////////////////////////////////////////\n\nglobal proc overrideColor(int $Index) {\n    string $selected[]=`ls -sl`;\n    int $amount=`size($selected)`;\n    for ($n=0; $n<$amount; $n++) {\n        setAttr ($selected[$n] + \".overrideEnabled\") 1;\n    };\n\n    for ($n=0; $n<$amount; $n++) {\n        setAttr ($selected[$n] + \".overrideColor\") $Index;\n    };\n}\n\n//////////////////////////////////////////////////////////////////////\n////////////////////////  Parent FK Hierarchy  ///////////////////////\n//////////////////////////////////////////////////////////////////////\n\nglobal proc prntFk()\n{\n    string $sel[] =`ls -os`;\n    \n    if(`size($sel)` != 1)\n    {\n        for($i = (size($sel)-1); $i>0; $i--)\n        {\n            parent $sel[$i] $sel[$i-1];\n        }\n    }\n}\n\n//////////////////////////////////////////////////////////////////////\n//////////////////////  Component Joint Creator  /////////////////////\n//////////////////////////////////////////////////////////////////////\n\nglobal proc cmpntJntCreator()\n{\n    string $sel[] =`ls -fl -os`;\n    int $uvChk = `checkBox -q -v uvAxisCB`;\n    \n    if(`size($sel)` == 0)\n    {\n         error \"sharam kar abhi tak etana bhi nahi path select component\";\n    }\n    else\n    {\n    for($i = 0; $i<`size($sel)`; $i++)\n    {\n        \n            if($uvChk == 1)\n            {\n                string $converted[] =`polyListComponentConversion -fv -fe -ff -fvf -fuv -tuv $sel[$i]`;\n                    if(`gmatch $sel[$i] \"*.vtx*\"` || `gmatch $sel[$i] \"*.map*\"`){\n                        float $uv[] =`polyEditUV -q $converted[0]`;\n                        uvJnt $converted[0] $uv[0] $uv[1];\n                    }\n                    \n                    if(`gmatch $sel[$i] \"*.e*\"`){\n                        string $flatCom[] =`ls -fl $converted`;\n                        float $uv[] =`polyEditUV -q $flatCom[0]`;\n                        uvJnt $flatCom[0] $uv[0] $uv[1];\n                        \n                        if($i == size($sel)-1)\n                        {\n                            float $uv[] =`polyEditUV -q $flatCom[1]`;\n                            uvJnt $flatCom[1] $uv[0] $uv[1];\n                        }\n                    } \n                          \n                    if(`gmatch $sel[$i] \"*.f*\"`){\n                        string $flatCom[] =`componentFlatOut $converted`;\n                        float $u= 0;\n                        float $v= 0;\n                        for($r = 0; $r <`size($flatCom)`; $r++)\n                        {\n                            float $uv[] =`polyEditUV -q $flatCom[$r]`;\n                            $u+=$uv[0];\n                            $v+=$uv[1];\n                        }\n                       uvJnt $converted[0] ($u/size($flatCom)) ($v/size($flatCom));\n                    }\n            }\n            else\n            {\n                string $converted[] =`polyListComponentConversion -fv -fe -ff -fvf -fuv -tv $sel[$i]`;\n                string $flatCom[] =`componentFlatOut $converted`;\n        \n                    if(`gmatch $sel[$i] \"*.vtx*\"` || `gmatch $sel[$i] \"*.map*\"`){\n                    \n                    float $pos[] =`xform -q -ws -t $flatCom[0]`;\n                    select -cl  ;\n                    string $jnt=`joint -p $pos[0] $pos[1] $pos[2] `;\n                    select -cl  ;\n        \n                    }\n        \n                    if(`gmatch $sel[$i] \"*.e*\"`){\n                        \n                            float $pos[] =`xform -q -ws -t $flatCom[0]`;\n                            select -cl  ;\n                            string $jnt=`joint -p $pos[0] $pos[1] $pos[2] `;\n                            select -cl  ;\n                        if($i == size($sel)-1)\n                        {\n                            float $pos[] =`xform -q -ws -t $flatCom[1]`;\n                            select -cl  ;\n                            string $jnt=`joint -p $pos[0] $pos[1] $pos[2] `;\n                            select -cl  ;\n                        }\n                    } \n        \n                    if(`gmatch $sel[$i] \"*.f*\"`){\n                        float $x= 0;\n                        float $y= 0;\n                        float $z= 0;\n        \n                        for($r = 0; $r <`size($flatCom)`; $r++)\n                        {\n                            float $pos[] =`xform -q -ws -t $flatCom[$r]`;\n                            $x+=$pos[0];\n                            $y+=$pos[1];\n                            $z+=$pos[2];\n        \n                        }\n                            select -cl  ;\n                            string $jnt=`joint -p ($x/size($flatCom)) ($y/size($flatCom)) ($z/size($flatCom)) `;\n                            select -cl  ;\n                    }\n            }\n        \n        }\n    }\n}\n\n//////////////////////////////////////////////////////////////////////\n///////////////////////  Joint At Controller  ////////////////////////\n//////////////////////////////////////////////////////////////////////\n\nglobal proc jntAtCntr()\n{\n    string $sel[] =`ls -fl -os`;\n    \n    if(`size($sel)` != 0)\n    { \n    \n        float $pos[]=`BBcenter $sel`;\n        select -cl  ;\n        joint -p $pos[0] $pos[1] $pos[2];\n        select -r $sel;\n    \n    }\n    else\n    {\n        error \"Bimad estamal kiya karo error ke bharose mat raho\";\n    }\n\n}\n\n//////////////////////////////////////////////////////////////////////\n////////////////////////  Component Flat Out  ///////////////////////\n//////////////////////////////////////////////////////////////////////\nglobal proc string[] componentFlatOut(string $cmpnt[])\n{\n\nstring $return[] = {};\nint $incr = 0;\n    for($i = 0; $i < `size($cmpnt)`; $i++)\n    {\n\n        if(`gmatch $cmpnt[$i] \"*:*\"`){\n            \n        string $buffer[] ={};\n        $numTokens = `tokenize $cmpnt[$i] \"[\" $buffer`;\n        string $objNm = $buffer[0];\n        $numTokens = `tokenize $buffer[1] \"]\" $buffer`;\n        $numTokens = `tokenize $buffer[0] \":\" $buffer`;\n        int $start = $buffer[0];\n        int $end = $buffer[1];\n        \n            for($r = $start; $r <= $end; $r++)\n            {\n              $return[$incr]= ($objNm + \"[\" + $r + \"]\" ); \n              $incr++;\n            }\n        \n        }\n        else\n        {\n              $return[$incr]=  $cmpnt[$i]; \n              $incr++;            \n        }\n    }\n    return $return; \n}\n\n//////////////////////////////////////////////////////////////////////\n/////////////////////////  UV Folicle Button  ////////////////////////\n//////////////////////////////////////////////////////////////////////\n\n\nglobal proc RGuvFlc()\n{\nstring $sel[] =`filterExpand -ex 1 -sm 31 -sm 35`;\nstring $folicle = \"\";\nif(`size($sel)` == 0)\n{\n     error \"riger ka naam kharab kar rahe ho select UV or Vertex\";\n}\nelse\n{\n    for($i = 0; $i<`size($sel)`; $i++)\n    {\n        \n        string $shp[]=`listRelatives -p -s $sel[$i]`;\n        string $converted[] =`polyListComponentConversion -fv -fe -ff -fvf -fuv -tuv $sel[$i]`;\n        if(`gmatch $converted[0] \"*.map*\"`){\n            float $uv[] =`polyEditUV -q $converted[0]`;\n            $folicle =`uvFolicle $shp[0] $uv[0] $uv[1]`; \n        }\n    }\n}\n}\n\n//////////////////////////////////////////////////////////////////////\n//////////////////////////////  UV Joint  ////////////////////////////\n//////////////////////////////////////////////////////////////////////\n\nglobal proc uvJnt(string $objNm,float $u, float $v)\n{\n    string $shp[]=`listRelatives -p -s $objNm`;\n    string $folicle =`uvFolicle $shp[0] $u $v`; \n    select -cl  ;\n    string $jnt=`joint`;\n    parent $jnt $folicle;\n    xform -os -t 0 0 0 $jnt;\n    xform -os -ro 0 0 0 $jnt;\n    makeIdentity -apply true -t 1 -r 1 -s 1 -n 0 -jointOrient $jnt;\n    parent  -w $jnt;\n    delete $folicle;\n    select -cl  ;\n}\n\n//////////////////////////////////////////////////////////////////////\n///////////////////////  BoundingBox Center  ////////////////////////\n//////////////////////////////////////////////////////////////////////\n\nglobal proc float[]  BBcenter(string $objs[])\n{\n\n    float $center[]={};\n    float $bbox[] = `exactWorldBoundingBox $objs`;\n    $center[0] = ( $bbox[0] + $bbox[3] )/2;\n    $center[1] = ( $bbox[1] + $bbox[4] )/2;\n    $center[2] = ( $bbox[2] + $bbox[5] )/2;   \n    \n    return $center;\n\n}\n\n\n//////////////////////////////////////////////////////////////////////\n////////////////////////////  UV Folicle  ////////////////////////////\n//////////////////////////////////////////////////////////////////////\n\nglobal proc string uvFolicle(string $shp, float $uVal, float $vVal)\n{\n    string $hsys = `createNode hairSystem`;\n    int $ind[0] ;\n    $ind[0] = 0;\n    int $i;\n    float $v = 0;\n    float $u = $i/10.0;\n    string $newHair = createHairCurveNode( $hsys, $shp, $uVal,$vVal,2, \n    false, false, false, false, \"\", 1.0, $ind, \"\",\"\",1);\n    delete `listRelatives -p $hsys`;\n    return $newHair;\n}\n\n//////////////////////////////////////////////////////////////////////\n/////////////////////////    LOCK AND HIDE    ////////////////////////\n//////////////////////////////////////////////////////////////////////\n\nglobal proc int  LNH (string $obj,int $tx,int $ty,int $tz,int $rx,int $ry,int $rz,int $sx,int $sy,int $sz,int $v)\n{\nint $attrVal[];\n$attrVal[0] =$tx;$attrVal[1] =$ty;$attrVal[2] =$tz;\n$attrVal[3] =$rx;$attrVal[4] =$ry;$attrVal[5] =$rz;\n$attrVal[6] =$sx;$attrVal[7] =$sy;$attrVal[8] =$sz;\n$attrVal[9] =$v;\nint $keyVal;\nstring $attrs[] ={\"tx\",\"ty\",\"tz\",\"rx\",\"ry\",\"rz\",\"sx\",\"sy\",\"sz\",\"v\"};\n\n    for ($i=0;$i<(size($attrs));$i++)\n    {            \n        if ($attrVal[$i] == 1){\n            $keyVal = 0;\n            setAttr -lock $attrVal[$i] -keyable $keyVal -channelBox $keyVal ($obj +  \".\" + $attrs[$i]);\n    \n    }\n    }\n\n    return 1;\n}\n\n//////////////////////////////////////////////////////////////////////\n//////////////////////// CONTROL PROXY OR NOT ////////////////////////\n//////////////////////////////////////////////////////////////////////\n\nglobal proc doIt(int $Fk)\n{\n\nint $prx = `checkBox  -q -v pxCB`;  \n\n    if($prx == 1)\n    {\n    prxCnt $Fk;\n    }\n    \n    if($prx == 0)\n    {\n    cnt $Fk;\n    }\n}\n\n\n\n//////////////////////////////////////////////////////////////////////\n/////////////////////////      CONTROLER      ////////////////////////\n//////////////////////////////////////////////////////////////////////\n\nglobal proc cnt(int $Fk)\n{\nstring $sel[]= `ls -sl`;\n\nif ((size($sel)) == 0){\nerror \"Select Object for controller\";\n}\nelse{\n    //find UI info \n    string $axis =`radioCollection -q -sl ax`;\n    int $Nrax[] ={0, 0, 0};\n    if($axis==\"x\"){$Nrax ={1, 0, 0};};\n    if($axis==\"y\"){$Nrax ={0, 1, 0};};\n    if($axis==\"z\"){$Nrax ={0, 0, 1};};\n    string $cnst =`radioCollection -q -sl cnst`;\n    int $sclCst =`checkBox -q -v sclCB`;\n    \n    //create parent group\n    string $mnGrp = `group -em -n ($sel[0] + \"_ctlGrp\")`;\n    if(`objExists \"Extra_MotionSystem\"`)\n        {parent $mnGrp \"Extra_MotionSystem\";}\n    for ($each in $sel){\n        string $chld[] = {};\n        if ($Fk == 1)\n        {\n         $chld =`ls -dag $each `;\n        }\n        else\n        {\n        $chld[0] = $each;\n        }\n        \n        for ($i=0;$i<(size($chld));$i++)\n        {\n            string $typ =`nodeType $chld[$i]`;\n            if ($typ == \"transform\" || $typ == \"joint\")\n                {        \n                //create contrller shape \n                string $cntName[] =`circle \n                    -c 0 0 0 \n                    -nr $Nrax[0] $Nrax[1] $Nrax[2] \n                    -sw 360 -r 1 -d 3 -ut 0 \n                    -tol 0.01 -s 8 -ch 0\n                    -n ($chld[$i] + \"_ctl\")`;\n                    \n                string $grp = `group -em -n ($chld[$i] + \"_OffsetGrp\")`;\n                string $grp1 =`group -em -n ($chld[$i] + \"_PosGrp\")`;\n                \n                parent $cntName[0] $grp;\n                parent $grp $grp1;\n                \n                // position controller\n                float $pos[]=`xform -q -ws -rp$chld[$i]`;\n                float $rot[]=`xform -q -ws -ro $chld[$i]`;\n                \n                xform -ws -t $pos[0] $pos[1] $pos[2] $grp1;\n                xform -ws -ro $rot[0] $rot[1] $rot[2] $grp1;\n                \n                //Constraint \n                if($cnst==\"pnt\"){\n                pointConstraint -mo $cntName[0] $chld[$i];\n                LNH $cntName[0] 0 0 0 1 1 1 0 0 0 1;\n                LNH $grp 0 0 0 1 1 1 0 0 0 1;\n                }\n                \n                if($cnst==\"ort\"){\n                orientConstraint -mo $cntName[0] $chld[$i];\n                LNH $cntName[0] 1 1 1 0 0 0 0 0 0 1;\n                LNH $grp 1 1 1 0 0 0 0 0 0 1;\n                }\n                \n                if($cnst==\"prnt\"){\n                parentConstraint -mo $cntName[0] $chld[$i];\n                LNH $cntName[0] 0 0 0 0 0 0 0 0 0 1;\n                LNH $grp 0 0 0 0 0 0 0 0 0 1;\n                }\n                \n                if($sclCst== 1){\n                scaleConstraint -mo $cntName[0] $chld[$i];\n                LNH $cntName[0] 0 0 0 0 0 0 0 0 0 1;\n                LNH $grp 0 0 0 0 0 0 0 0 0 1;\n                }else{\n                LNH $cntName[0] 0 0 0 0 0 0 1 1 1 1;\n                LNH $grp 0 0 0 0 0 0 1 1 1 1;\n                }\n                \n                //give parent \n                string $prnt[] =`listRelatives -p $chld[$i]`;\n\n                if(`objExists  ($prnt[0] + \"_ctl\")`)\n                {\n                parent $grp1  ($prnt[0] + \"_ctl\");\n                }\n                else\n                {\n                parent $grp1 $mnGrp;\n                }\n               \n                \n                }\n            }\n        }\n    }\n}\n\n\n//////////////////////////////////////////////////////////////////////\n/////////////////////////   PROXY CONTROLER   ////////////////////////\n//////////////////////////////////////////////////////////////////////\nglobal proc prxCnt(int $Fk)\n{\nstring $sel[]= `ls -sl`;\n\nif ((size($sel)) == 0){\nerror \"Select Object for controller\";\n}\n    else{\n    \n    int $mdVal =`checkBox -q -v negCB`;\n    \n    //find UI info \n    string $axis =`radioCollection -q -sl ax`;\n    int $Nrax[] ={0, 0, 0};\n    if($axis==\"x\"){$Nrax ={1, 0, 0};};\n    if($axis==\"y\"){$Nrax ={0, 1, 0};};\n    if($axis==\"z\"){$Nrax ={0, 0, 1};};\n    string $cnst =`radioCollection -q -sl cnst`;\n    int $sclCst =`checkBox -q -v sclCB`;\n    \n    //create parent group\n    string $mnGrp = `group -em -n ($sel[0] + \"_ctlGrp\")`;\n    \n        if(`objExists \"Extra_MotionSystem\"`)\n            {parent $mnGrp \"Extra_MotionSystem\";}\n        \n    string $prxMnGrp = `group -em -n (\"Proxy_\" + $sel[0] + \"_ctlGrp\")`;\n    setAttr ($prxMnGrp + \".visibility\") 0;\n    setAttr -lock true ($prxMnGrp + \".visibility\");\n    \n   \n    for ($each in $sel){\n    \n        string $chld[] = {};\n        if ($Fk == 1)\n        {\n         $chld =`ls -dag $each `;\n        }\n        else\n        {\n        $chld[0] = $each;\n        }\n        \n        \n        for ($i=0;$i<(size($chld));$i++)\n        {\n        \n            string $typ =`nodeType $chld[$i]`;\n            if ($typ == \"transform\" || $typ == \"joint\"){\n            //create contrller shape \n            string $cntName[] =`circle \n                -c 0 0 0 \n                -nr $Nrax[0] $Nrax[1] $Nrax[2] \n                -sw 360 -r 1 -d 3 -ut 0 \n                -tol 0.01 -s 8 -ch 0\n                -n ($chld[$i] + \"_ctl\")`;\n                \n            string $grp = `group -em -n ($chld[$i] + \"_OffsetGrp\")`;\n            string $grp1 =`group -em -n ($chld[$i] + \"_PosGrp\")`;\n            \n            parent $cntName[0] $grp;\n            parent $grp $grp1;\n            \n            //proxy setup\n            string $pxCnt[] =`circle \n                -c 0 0 0 \n                -nr $Nrax[0] $Nrax[1] $Nrax[2] \n                -sw 360 -r 1 -d 3 -ut 0 \n                -tol 0.01 -s 8 -ch 0\n                -n (\"Proxy_\" + $chld[$i] + \"_ctl\")`;\n                \n            string $pxGrp = `group -em -n (\"Proxy_\" + $chld[$i] + \"_OffsetGrp\")`;\n            string $pxGrp1 =`group -em -n (\"Proxy_\" + $chld[$i] + \"_PosGrp\")`;\n            \n            parent $pxCnt[0] $pxGrp;\n            parent $pxGrp $pxGrp1;\n            \n            //Make Connections\n            connectAttr -f ($cntName[0] + \".translate\") ($pxCnt[0] + \".translate\");\n            connectAttr -f ($cntName[0] + \".rotate\") ($pxCnt[0] + \".rotate\");\n            connectAttr -f ($cntName[0] + \".scale\") ($pxCnt[0] + \".scale\");\n\n            if($mdVal == 0)\n            {\n                connectAttr -f ($grp + \".translate\") ($pxGrp + \".translate\");\n\n            }\n            else\n            {\n                string $revMD =`createNode multiplyDivide -n ($cntName[0] + \"revMD\")`;\n                connectAttr -f ($cntName[0] + \".translate\") ($revMD + \".input1\");\n                setAttr ($revMD + \".input2\") -type \"float3\" -1.0 -1.0 -1.0;\n                connectAttr -f  ($revMD + \".output\") ($grp + \".translate\");\n\n            }\n\n            \n            connectAttr -f ($grp + \".rotate\") ($pxGrp + \".rotate\");\n            connectAttr -f ($grp + \".scale\") ($pxGrp + \".scale\");\n            \n            \n            // position controller\n            float $pos[]=`xform -q -ws -rp$chld[$i]`;\n            float $rot[]=`xform -q -ws -ro $chld[$i]`;\n            \n            xform -ws -t $pos[0] $pos[1] $pos[2] $grp1;\n            xform -ws -ro $rot[0] $rot[1] $rot[2] $grp1;\n            \n            xform -ws -t $pos[0] $pos[1] $pos[2] $pxGrp1;\n            xform -ws -ro $rot[0] $rot[1] $rot[2] $pxGrp1;\n            \n            \n            \n            //Constraint \n            if($cnst==\"pnt\"){\n            pointConstraint -mo $pxCnt[0] $chld[$i];\n            LNH $cntName[0] 0 0 0 1 1 1 0 0 0 1;\n            LNH $grp 0 0 0 1 1 1 0 0 0 1;\n            }\n            \n            if($cnst==\"ort\"){\n            orientConstraint -mo $pxCnt[0] $chld[$i];\n            LNH $cntName[0] 1 1 1 0 0 0 0 0 0 1;\n            LNH $grp 1 1 1 0 0 0 0 0 0 1;\n            }\n            \n            if($cnst==\"prnt\"){\n            parentConstraint -mo $pxCnt[0] $chld[$i];\n            LNH $cntName[0] 0 0 0 0 0 0 0 0 0 1;\n            LNH $grp 0 0 0 0 0 0 0 0 0 1;\n            }\n            \n            if($sclCst== 1){\n            scaleConstraint -mo $pxCnt[0] $chld[$i];\n            LNH $cntName[0] 0 0 0 0 0 0 0 0 0 1;\n            LNH $grp 0 0 0 0 0 0 0 0 0 1;\n            }else{\n            LNH $cntName[0] 0 0 0 0 0 0 1 1 1 1;\n            LNH $grp 0 0 0 0 0 0 1 1 1 1;\n            }\n            \n                \n                //give parent \n                string $prnt[] =`listRelatives -p $chld[$i]`;\n\n                if(`objExists  ($prnt[0] + \"_ctl\")`)\n                {\n                parent $grp1  ($prnt[0] + \"_ctl\");\n                }\n                else\n                {\n                parent $grp1 $mnGrp;\n                }\n                \n                \n                if(`objExists  (\"Proxy_\" + $prnt[0] + \"_ctl\")`)\n                {\n                parent $pxGrp1  (\"Proxy_\" + $prnt[0] + \"_ctl\");\n                }\n                else\n                {\n                parent $pxGrp1 $prxMnGrp;\n                }\n                \n            }\n\n        }\n        \n  \n    }\n    }\n}\n\n//////////////////////////////////////////////////////////////////////\n/////////////////////////    SHAPE REPLACER   ////////////////////////\n//////////////////////////////////////////////////////////////////////\nglobal proc shpRplc ()\n{\n    string $sel[]= `ls -sl`;\n    if ((size($sel)) == 0){\n    error \"Select Target objects & then source object\";\n    }\n    else{\n        int $sz = size($sel)-1;\n        string $grp = `group -em -n (\"TempGrp\" + $sel[$sz])`;\n        string $prntShp[] =`listRelatives -ad -s $sel[$sz] `;\n        parent -add -s $prntShp[0] $grp;\n        \n        for ($i=0;$i<$sz;$i++)\n            {\n            string $dupl[] =`duplicate -renameChildren $grp`;\n            string $nwShp[] =`listRelatives -ad -s$dupl[0] `;\n            \n            string $chld[] =`listRelatives -ad -s $sel[$i] `;\n            parent -add -s $nwShp[0] $sel[$i];\n            \n            for ($each in $chld){if(`objExists $each`){delete $each;}}\n            rename $nwShp[0] ($sel[$i] + \"Shape\");\n            delete $dupl;\n            }\n       delete $grp;\n    }\n}\n\n\n\n//////////////////////////////////////////////////////////////////////\n/////////////////////////   WIRE CONTROLLER   ////////////////////////\n//////////////////////////////////////////////////////////////////////\nglobal proc string cntWire (string $TYPE)\n  {\n  \nstring $return[] ={};\n  switch ($TYPE)\n    {\n    case \"Triangle\" :\n      $return[0] =`curve -d 1 -p -1.03923 0 0.6 -p 1.03923 0 0.6 -p 0 0 -1.2 -p -1.03923 0 0.6 -k 0 -k 1 -k 2 -k 3 -n \"controller1\" `;\n\tbreak ;\n\t\n    case \"Circle\" :\n      $return =`circle -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 0 -n \"controller1\" `;\n      break ;\t\n\t\n    case \"Square\" :\n      $return[0] =`curve -d 1 -p 1 0 -1 -p -1 0 -1 -p -1 0 1 -p 1 0 1 -p 1 0 -1 -k 0 -k 1 -k 2 -k 3 -k 4 -n \"controller1\"` ;\n      break ;\n      \n    case \"FatCross\" :\n      $return[0] =`curve -d 1 -p 2 0 1 -p 2 0 -1 -p 1 0 -1 -p 1 0 -2 -p -1 0 -2 -p -1 0 -1 -p -2 0 -1 -p -2 0 1 -p -1 0 1 -p -1 0 2 -p 1 0 2 -p 1 0 1 -p 2 0 1 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -n \"controller1\" `;\n      break ;      \n      \n    case \"Pyramid\" :\n      $return[0] =`curve -d 1 -p 0 2 0 -p 1 0 -1 -p -1 0 -1 -p 0 2 0 -p -1 0 1 -p 1 0 1 -p 0 2 0 -p 1 0 -1 -p 1 0 1 -p -1 0 1 -p -1 0 -1 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -n \"controller1\" `;\n      break ;\n      \n    case \"Cube\" :\n      $return[0] =`curve -d 1 -p 0.5 0.5 0.5 -p 0.5 0.5 -0.5 -p -0.5 0.5 -0.5 -p -0.5 -0.5 -0.5 -p 0.5 -0.5 -0.5 -p 0.5 0.5 -0.5 -p -0.5 0.5 -0.5 -p -0.5 0.5 0.5 -p 0.5 0.5 0.5 -p 0.5 -0.5 0.5 -p 0.5 -0.5 -0.5 -p -0.5 -0.5 -0.5 -p -0.5 -0.5 0.5 -p 0.5 -0.5 0.5 -p -0.5 -0.5 0.5 -p -0.5 0.5 0.5 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -n \"controller1\" `;\n      break ; \n           \n    case \"Sphere\" :\n      $return[0] =`curve -d 1 -p 0 0 1 -p 0 0.5 0.866025 -p 0 0.866025 0.5 -p 0 1 0 -p 0 0.866025 -0.5 -p 0 0.5 -0.866025 -p 0 0 -1 -p 0 -0.5 -0.866025 -p 0 -0.866025 -0.5 -p 0 -1 0 -p 0 -0.866025 0.5 -p 0 -0.5 0.866025 -p 0 0 1 -p 0.707107 0 0.707107 -p 1 0 0 -p 0.707107 0 -0.707107 -p 0 0 -1 -p -0.707107 0 -0.707107 -p -1 0 0 -p -0.866025 0.5 0 -p -0.5 0.866025 0 -p 0 1 0 -p 0.5 0.866025 0 -p 0.866025 0.5 0 -p 1 0 0 -p 0.866025 -0.5 0 -p 0.5 -0.866025 0 -p 0 -1 0 -p -0.5 -0.866025 0 -p -0.866025 -0.5 0 -p -1 0 0 -p -0.707107 0 0.707107 -p 0 0 1 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -n \"controller1\" `;\n      break ;    \n              \t\n    case \"Cone\":\n\t\t$return[0] =`curve -d 1 -p 0.5 -1 0.866025 -p -0.5 -1 0.866025 -p 0 1 0 -p 0.5 -1 0.866025 -p 1 -1 0 -p 0 1 0 -p 0.5 -1 -0.866025 -p 1 -1 0 -p 0 1 0 -p -0.5 -1 -0.866026 -p 0.5 -1 -0.866025 -p 0 1 0 -p -1 -1 -1.5885e-007 -p -0.5 -1 -0.866026 -p 0 1 0 -p -0.5 -1 0.866025 -p -1 -1 -1.5885e-007 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -n helperCone`;\n\tbreak;\n\n    case \"Rombus\" :\n      $return[0] =`curve -d 1 -p 0 1 0 -p 1 0 0 -p 0 0 1 -p -1 0 0 -p 0 0 -1 -p 0 1 0 -p 0 0 1 -p 0 -1 0 -p 0 0 -1 -p 1 0 0 -p 0 1 0 -p -1 0 0 -p 0 -1 0 -p 1 0 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -n \"controller1\" `;\n      break ;\n\n    case \"SingleNormal\" :\n      $return[0] =`curve -d 1 -p 0 0 -1.32 -p -0.99 0 0 -p -0.33 0 0 -p -0.33 0 0.99 -p 0.33 0 0.99 -p 0.33 0 0 -p 0.99 0 0 -p 0 0 -1.32 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -n \"controller1\" `;\n      break ;\n\n    case \"FourNormal\" :\n      $return[0] =`curve -d 1 -p 0 0 -1.98 -p -0.495 0 -1.32 -p -0.165 0 -1.32 -p -0.165 0 -0.165 -p -1.32 0 -0.165 -p -1.32 0 -0.495 -p -1.98 0 0 -p -1.32 0 0.495 -p -1.32 0 0.165 -p -0.165 0 0.165 -p -0.165 0 1.32 -p -0.495 0 1.32 -p 0 0 1.98 -p 0.495 0 1.32 -p 0.165 0 1.32 -p 0.165 0 0.165 -p 1.32 0 0.165 -p 1.32 0 0.495 -p 1.98 0 0 -p 1.32 0 -0.495 -p 1.32 0 -0.165 -p 0.165 0 -0.165 -p 0.165 0 -1.32 -p 0.495 0 -1.32 -p 0 0 -1.98 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -n \"controller1\" `;\n      break ;\n\n    case \"Dumbell\":\n\t\t$return[0] =`curve -d 1 -p -1.207536 0 0.0254483 -p -1.123549 -0.202763 0.0254483 -p -0.920786 -0.28675 0.0254483 -p -0.718023 -0.202763 0.0254483 -p -0.63504 -0.00242492 0.0254483 -p 0.634091 0 0.0254483 -p 0.718023 -0.202763 0.0254483 -p 0.920786 -0.28675 0.0254483 -p 1.123549 -0.202763 0.0254483 -p 1.207536 0 0.0254483 -p 1.123549 0.202763 0.0254483 -p 0.920786 0.28675 0.0254483 -p 0.718023 0.202763 0.0254483 -p 0.634091 0 0.0254483 -p -0.63504 -0.00242492 0.0254483 -p -0.718023 0.202763 0.0254483 -p -0.920786 0.28675 0.0254483 -p -1.123549 0.202763 0.0254483 -p -1.207536 0 0.0254483 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -n helperDumbell`;\n\tbreak;\n\t\n    case \"ArrowOnBall\" :\n      $return[0] =`curve -d 1 -p 0 0.35 -1.001567 -p -0.336638 0.677886 -0.751175 -p -0.0959835 0.677886 -0.751175 -p -0.0959835 0.850458 -0.500783 -p -0.0959835 0.954001 -0.0987656 -p -0.500783 0.850458 -0.0987656 -p -0.751175 0.677886 -0.0987656 -p -0.751175 0.677886 -0.336638 -p -1.001567 0.35 0 -p -0.751175 0.677886 0.336638 -p -0.751175 0.677886 0.0987656 -p -0.500783 0.850458 0.0987656 -p -0.0959835 0.954001 0.0987656 -p -0.0959835 0.850458 0.500783 -p -0.0959835 0.677886 0.751175 -p -0.336638 0.677886 0.751175 -p 0 0.35 1.001567 -p 0.336638 0.677886 0.751175 -p 0.0959835 0.677886 0.751175 -p 0.0959835 0.850458 0.500783 -p 0.0959835 0.954001 0.0987656 -p 0.500783 0.850458 0.0987656 -p 0.751175 0.677886 0.0987656 -p 0.751175 0.677886 0.336638 -p 1.001567 0.35 0 -p 0.751175 0.677886 -0.336638 -p 0.751175 0.677886 -0.0987656 -p 0.500783 0.850458 -0.0987656 -p 0.0959835 0.954001 -0.0987656 -p 0.0959835 0.850458 -0.500783 -p 0.0959835 0.677886 -0.751175 -p 0.336638 0.677886 -0.751175 -p 0 0.35 -1.001567 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -n \"controller1\" `;\n      break ;\n\t}\nstring $rtrn = $return[0];\n\n    return $rtrn;\n\t\n}\n//////////////////////////////////////////////////////////////////////\n/////////////////////////   WIRE CONTROLLER   ////////////////////////\n//////////////////////////////////////////////////////////////////////\nglobal proc cntWireNw (string $TYPE)\n{\nstring $sel[] = `ls -os -fl `;\n    if(`size $sel` != 0)\n    {\n        string $cnt =`cntWire $TYPE`;\n        select  $sel;\n        select -add $cnt;\n        shpRplc;\n        delete $cnt;\n        select  $sel;\n    }\n    else\n    {\n       cntWire $TYPE;\n       select -cl  ;\n\n    }\n}\n\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n/////////////////////////   Dynamic Setuup   ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n// Copyright (C) 2011-2011 Rahul Gawade, and/or its licensors.\n// All rights reserved.\n//\n// The coded instructions, statements, computer programs, and/or related\n// material (collectively the \"Data\") in these files contain unpublished\n// information proprietary to Rahul Gawade, and/or its licensors,\n// which is protected by Indian federal copyright law and by\n// international treaties.\n// Forr any quarries contact Rahul Gawade at rahulsg2901@gmail.com \n\n//\n//\n//  Creation Date:  06-04-2014\n//\n//  Description:\n//      Add IK/FK dynamic Setup\n//\n\n//  Procedure Name:\n//\t\tdynamicSetup\n//\n//  Lebals:\n//\t\t1. dyna + any string\n//      2. propA any where you wont IK controller & at end of joint\n//\n//  Description:\n//      Add IK/FK dynamic Setup.\n//\n//  Input Arguments:\n//      None.\n//\n//  Return Value:\n//      None.\n//\n\nglobal proc transAtt()\n{\nstring $sel[] =`ls -sl`;\n\n\nif(size($sel) == 2)\n{\nstring $text;\nstring $result = `promptDialog\n    -title \"Rename Object\"\n    -message \"Enter Name:\"\n    -button \"OK\" -button \"Cancel\"\n    -defaultButton \"OK\" -cancelButton \"Cancel\"\n    -dismissString \"Cancel\"`;\n\n\nif ($result == \"OK\") {\n    $text = `promptDialog -query -text`;\n    print $text;\n    if($text != \"\")\n    {\n    int $go = 0;\n    string $lstatt[] =`listAttr -ud $sel[1]`;\n    string $atts[] ={\"Setup\", \"Before\", \"After\", \"Dynamic\", \"Stiffness\", \n    \"Damp\", \"Friction\", \"Gravity\", \"Attract\",\"Flow\", \"Iterations\"}; \n    \n    for ($e in $lstatt)\n    {\n        for($item in $atts)\n        {\n            if($e == $item)\n            {\n            $go +=1;\n            }\n        }\n    }\n    \n    if( size($atts) == $go)\n    {\n    //Add Attr\n    if ((`attrExt $sel[0] $text`) == 0){\n        addAttr -ln $text  -at \"enum\" -en \"Off:On:\"  $sel[0];\n        setAttr -e -lock true -keyable false -cb true ($sel[0] + \".\" + $text);}\n     $text = ($text + \"_\");\n        \n    if ((`attrExt $sel[0] ($text + \"Setup\")`) == 0){\n        addAttr -ln ($text + \"Setup\")  -at \"enum\" -en \"Off:On:\"  $sel[0];\n        setAttr -e -keyable false ($sel[0] + \".\" + $text + \"Setup\");}\n    \n    if ((`attrExt $sel[0] ($text + \"Before\")`) == 0){\n        addAttr -ln ($text + \"Before\")  -at \"enum\" -en \"Off:FK:IK:\"  $sel[0];\n        setAttr -e-keyable false -cb true ($sel[0] + \".\" + $text + \"Before\");}\n    \n    if ((`attrExt $sel[0] ($text + \"After\")`) == 0){\n        addAttr -ln ($text + \"After\")  -at \"enum\" -en \"Off:On:\"  $sel[0];\n        setAttr -e-keyable false -cb true ($sel[0] +  \".\" + $text + \"After\");}\n        \n    if ((`attrExt $sel[0] ($text + \"Dynamic\")`) == 0){\n        addAttr -ln ($text + \"Dynamic\")  -at \"enum\" -en \"Static:Dynamic:\"  $sel[0];\n        setAttr -e-keyable true ($sel[0] + \".\" + $text + \"Dynamic\");}\n        \n    if ((`attrExt $sel[0] ($text + \"Stiffness\")`) == 0){\n        addAttr -ln ($text + \"Stiffness\")  -min 0 -max 1  -at \"double\" -dv 0.15 $sel[0];\n        setAttr -e-keyable true ($sel[0] + \".\" + $text + \"Stiffness\");}\n        \n    if ((`attrExt $sel[0] ($text + \"Damp\")`) == 0){\n        addAttr -ln ($text + \"Damp\") -min 0 -max 1  -at \"double\" $sel[0];\n        setAttr -e-keyable true ($sel[0] + \".\" + $text + \"Damp\");}\n        \n    if ((`attrExt $sel[0] ($text + \"Friction\")`) == 0){\n        addAttr -ln ($text + \"Friction\")  -min 0 -max 1  -at \"double\" -dv 0.5 $sel[0];\n        setAttr -e-keyable true ($sel[0] + \".\" + $text + \"Friction\");}\n        \n    if ((`attrExt $sel[0] ($text + \"Gravity\")`) == 0){\n        addAttr -ln ($text + \"Gravity\")  -at \"double\" -dv 0.98 $sel[0];\n        setAttr -e-keyable true ($sel[0] + \".\" + $text + \"Gravity\");}\n        \n    if ((`attrExt $sel[0] ($text + \"Attract\")`) == 0){\n        addAttr -ln ($text + \"Attract\")  -at \"double\" -min 0 -max 1 -dv 0.2 $sel[0];\n        setAttr -e-keyable true ($sel[0] + \".\" + $text + \"Attract\");}\n        \n    if ((`attrExt $sel[0] ($text + \"Flow\")`) == 0){\n        addAttr -ln ($text + \"Flow\")  -at \"double\" -min 0 -max 1 -dv 0.2 $sel[0];\n        setAttr -e-keyable true ($sel[0] + \".\" + $text + \"Flow\");}  \n    \n    if ((`attrExt $sel[0] ($text + \"Iterations\")`) == 0){\n        addAttr -ln ($text + \"Iterations\")  -at \"long\" -min 1 -max 50 -dv 4 $sel[0];\n        setAttr -e-keyable true ($sel[0] + \".\" + $text + \"Iterations\");} \n              \n            \n        for ($e in $atts)\n        {\n        connectAttr -f ($sel[0] + \".\" + $text + $e) ($sel[1] + \".\" + $e);\n        }\n        \n            \n        }\n        else\n        {\n        error \"Attribute not exists\";\n        }\n    }\n    else\n    {\n        error \"Tuz.... naav tak\";    \n    }\n    }\n\n}\nelse\n{\nerror \"select Controller then Parent joint\";\n}\n}\n\nglobal proc addPropA()\n{\n    \n    string $sel[] =`ls -sl`;\n    if(`size $sel` != 0)\n    {\n        for ($each in $sel)\n        {\n        \n            if(`objectType $each` == \"joint\")\n            {\n                if(`getAttr ($each + \".drawLabel\")` != 1)\n                {\n                    setAttr ($each + \".type\") 15;\n                    setAttr -type \"string\" ($each + \".otherType\") (\"\");\n                    setAttr ($each + \".drawLabel\") 1;\n                }\n                else\n                {\n                    setAttr ($each + \".type\") 0;\n                    setAttr -type \"string\" ($each + \".otherType\") (\"\");\n                    setAttr ($each + \".drawLabel\") 0; \n                }\n            }\n        }\n    }\n    else\n    {\n        error \"Tuzse yahi umid thi select Joint first\";\n    }\n}\n\n\n\n\nglobal proc addDyna()\n{\n    \n    string $sel[] =`ls -sl`;\n    if(`size $sel` != 0)\n    {    \n        for ($each in $sel)\n        {\n            if(`objectType $each` == \"joint\")\n            {\n                if(`getAttr ($each + \".drawLabel\")` != 1)\n                {\n                    setAttr ($each + \".type\") 18;\n                    setAttr -type \"string\" ($each + \".otherType\") (\"dyna\" + $each);\n                    setAttr ($each + \".drawLabel\") 1;\n                }\n                else\n                {\n                    setAttr ($each + \".type\") 0;\n                    setAttr -type \"string\" ($each + \".otherType\") (\"\");\n                    setAttr ($each + \".drawLabel\") 0; \n                }\n            }\n        }\n    }\n    else\n    {\n        error \"Tuzse yahi umid thi select Joint first\";\n    }\n}\n\n\n\nglobal proc bakeDyna()\n{\nstring $sets[] =`ls -set \"*HairBakedSet*\"`;\nstring $setObj[] =`sets -q $sets[0]`;\nfloat $start  = `playbackOptions -q -ast`;\nfloat $end  = `playbackOptions -q -aet`;\n\nbakeResults \n    -simulation true \n    -t ($start + \":\" +  $end)\n    -sampleBy 1 \n    -disableImplicitControl true \n    -preserveOutsideKeys true \n    -sparseAnimCurveBake false \n    -removeBakedAttributeFromLayer false \n    -bakeOnOverrideLayer false \n    -controlPoints false \n    -shape true \n    $setObj;\n    \nprint \"Bake successfully\\n\";\n}\n\nglobal proc unbakeDyna()\n{\n    string $sets[] =`ls -set \"*HairBakedSet*\"`;\n    string $setObj[] =`sets -q $sets[0]`;\n    cutKey -time \"-9000:9000\" $setObj; \n\n    for ($obj in $setObj)\n    {\n        string $s1 = `substitute \"aftdyna_\"  $obj \"@#$%^&*!\"`;\n        string $buffer[] = {};\n        $numTokens = `tokenize  $s1 \"@#$%^&*!\"  $buffer`;\n        string $s2 = `substitute \"_grp\"  $buffer[size($buffer)-1] \"\"`;\n        string $conJnt[] =`ls (\"*Dyna_\" + $s2)`;\n        \n        connectAttr -f  ($conJnt[0] + \".rotateX\") ($obj + \".rotateX\");\n        connectAttr -f  ($conJnt[0] + \".rotateY\") ($obj + \".rotateY\");\n        connectAttr -f  ($conJnt[0] + \".rotateZ\") ($obj + \".rotateZ\");\n        connectAttr -f  ($conJnt[0] + \".scaleX\") ($obj + \".scaleX\");\n        \n        \n        string $attr[]=`listAttr -ud $obj`;\n            if($attr[0] == \"transCon\")\n            {\n            connectAttr -f  ($conJnt[0] + \".translateX\") ($obj + \".translateX\");\n            connectAttr -f  ($conJnt[0] + \".translateY\") ($obj + \".translateY\");\n            connectAttr -f  ($conJnt[0] + \".translateZ\") ($obj + \".translateZ\");\n            }\n    }\n    print \"Unbake successfully\\n\";\n}\n\n\n\nglobal proc dynaSetup()\n{\n\nstring $sel[] =`ls -sl`;\nstring $nucl[] ={};\n \nif ((size($sel)) == 0){\n     warning \"select the parent joint.....\";}\nelse{\n//find all dyan lables\nstring $child[] =`listRelatives -ad -c $sel[0]`;\nstring $Dyna[] = {};\nint $no= 0;\n    for ($each in $child)\n    {\n     \n       if ((`objectType $each`) == \"joint\")\n        {\n            string $lable =`getAttr ($each + \".otherType\")`;\n            int $types =`getAttr ($each + \".type\")`;\n            int $drawlb =`getAttr ($each + \".drawLabel\")`;\n            \n                    if ((startsWith ($lable, \"dyna\")) == 1 && $types == 18 && $drawlb == 1)\n                    {\n                        setAttr ($each + \".drawLabel\") 0;\n                        $Dyna[$no]=$each;\n                        $no+= 1;\n                    }\n                    \n\n        }\n    }\n    \n\nif ((size($Dyna)) == 0){\n     warning \"No dyna Exist....\";}\nelse{\n\n//Add Attr\nif ((`attrExt $sel[0] \"Setup\"`) == 0){\n    addAttr -ln \"Setup\"  -at \"enum\" -en \"Off:On:\"  $sel[0];\n    setAttr -e -keyable 0 ($sel[0] + \".Setup\");}\n\nif ((`attrExt $sel[0] \"Before\"`) == 0){\n    addAttr -ln \"Before\"  -at \"enum\" -en \"Off:FK:IK:\"  $sel[0];\n    setAttr -e-keyable true ($sel[0] + \".Before\");}\n\nif ((`attrExt $sel[0] \"After\"`) == 0){\n    addAttr -ln \"After\"  -at \"enum\" -en \"Off:On:\"  $sel[0];\n    setAttr -e-keyable true ($sel[0] + \".After\");}\n    \nif ((`attrExt $sel[0] \"Dynamic\"`) == 0){\n    addAttr -ln \"Dynamic\"  -at \"enum\" -en \"Static:Dynamic:\"  $sel[0];\n    setAttr -e-keyable true ($sel[0] + \".Dynamic\");}\n    \nif ((`attrExt $sel[0] \"Stiffness\"`) == 0){\n    addAttr -ln \"Stiffness\"  -min 0 -max 1  -at \"double\" -dv 0.15 $sel[0];\n    setAttr -e-keyable true ($sel[0] + \".Stiffness\");}\n    \nif ((`attrExt $sel[0] \"Damp\"`) == 0){\n    addAttr -ln \"Damp\" -min 0 -max 1  -at \"double\" $sel[0];\n    setAttr -e-keyable true ($sel[0] + \".Damp\");}\n    \nif ((`attrExt $sel[0] \"Friction\"`) == 0){\n    addAttr -ln \"Friction\"  -min 0 -max 1  -at \"double\" -dv 0.5 $sel[0];\n    setAttr -e-keyable true ($sel[0] + \".Friction\");}\n    \nif ((`attrExt $sel[0] \"Gravity\"`) == 0){\n    addAttr -ln \"Gravity\"  -at \"double\" -dv 0.98 $sel[0];\n    setAttr -e-keyable true ($sel[0] + \".Gravity\");}\n    \nif ((`attrExt $sel[0] \"Attract\"`) == 0){\n    addAttr -ln \"Attract\"  -at \"double\" -min 0 -max 1 -dv 0.2 $sel[0];\n    setAttr -e-keyable true ($sel[0] + \".Attract\");}\n    \nif ((`attrExt $sel[0] \"Flow\"`) == 0){\n    addAttr -ln \"Flow\"  -at \"double\" -min 0 -max 1 -dv 0.2 $sel[0];\n    setAttr -e-keyable true ($sel[0] + \".Flow\");}    \n    \nif ((`attrExt $sel[0] \"Iterations\"`) == 0){\n    addAttr -ln \"Iterations\"  -at \"long\" -min 1 -max 50 -dv 4 $sel[0];\n    setAttr -e-keyable true ($sel[0] + \".Iterations\");}   \n\n\n\n//Veribles\nstring $fkJnts[] = {};\nstring $fkcnt[] = {};\nstring $ikJnts[] = {};\nstring $ikcnt[] = {};\nstring $dynaJnts[] = {};\nstring $dynacnt[] = {};\nstring $bfrJnts[] = {};\nstring $dynaParent[] ={};\n\nfor ($i=0;$i<(size($Dyna));$i++)\n{\nstring $prt[] =`listRelatives -p $Dyna[$i]`;\nparent -w $Dyna[$i];\n$dynaParent[$i] = $prt[0];\n}\n\n//int $j=0;\n\nfor ($j=0;$j<(size($Dyna));$j++)\n{\n\n//create Joints\n$fkJnts = `dupPrifix $Dyna[$j] FK`;\n$ikJnts = `dupPrifix $Dyna[$j] IK`;\n$dynaJnts = `dupPrifix $Dyna[$j] Dyna`;\n$bfrJnts = `dupPrifix $Dyna[$j] Before`;\n\n\n//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n    //Fk setup \n    $fkcnt =`fkCtrls $fkJnts[0]`;\n      \n          for ($each in $fkcnt){\n              string $shp[]=`listRelatives -s $each`;\n              setAttr ($shp[0] + \".overrideEnabled\") 1;\n              setAttr ($shp[0] + \".overrideColor\") 6;}\n          \n    string $s1 = `substitute  \"fk_\"  $fkcnt[0] \"\"`;\n    string $s2 = `substitute  \"_ctl\" $s1 \"\"`;\n    \n    string $cnd1 = `createNode condition -n ($Dyna[$j] + \"IkCnd\")`;\n    string $cnd2 = `createNode condition -n ($Dyna[$j] + \"FkCnd\")`;\n\n    connectAttr -f ($sel[0] + \".Before\") ($cnd1 + \".firstTerm\");\n    setAttr ($cnd1 + \".secondTerm\") 2;\n    setAttr ($cnd1 + \".colorIfTrueR\") 1;\n    setAttr ($cnd1 + \".colorIfFalseR\") 0;\n\n    connectAttr -f ($sel[0] + \".Before\") ($cnd2 + \".firstTerm\");\n    setAttr ($cnd2 + \".secondTerm\") 1;\n    setAttr ($cnd2 + \".colorIfTrueR\") 1;\n    setAttr ($cnd2 + \".colorIfFalseR\") 0;\n\n    connectAttr -f ($cnd2 + \".outColor.outColorR\") ($s2 + \"_fkCtrls_grp.v\"); \n\n  \n//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n  \n\n//IK setup    \n\nstring $child[] =`listRelatives -ad -c $ikJnts[0]`;\nstring $ikLbl[] = {};\nint $no= 0;\n    for ($each in $child)\n    {\n     \n       if ((`objectType $each`) == \"joint\")\n        {\n            int $types =`getAttr ($each + \".type\")`;\n            int $drawlb =`getAttr ($each + \".drawLabel\")`;\n            \n                    if ($types == 15 && $drawlb == 1)\n                    {      \n                        string $s1 = `substitute \"IK_\" $each \"\"`;  \n                        setAttr ($s1 + \".drawLabel\") 0;               \n                        $ikLbl[$no]=$each;\n                        $no+= 1;\n                    }\n        }\n        \n    \n    }\n\n    //revers array \n    string $ikLblJnt[]= {};\n    int $no = 1;\n    $ikLblJnt[0] =$ikJnts[0];\n\n        for ($i=((size($ikLbl))-1);$i>=0;$i--)\n        {\n        $ikLblJnt[$no] =$ikLbl[$i];\n        $no += 1;\n        }\n    int $sizeIkjnt = size ($ikJnts); \n        \n        if ((`size($ikLblJnt)`) <= 1)\n        {\n           \n               $ikLblJnt[0] =$ikJnts[0];\n               \n               //center of joint \n               int $center = ($sizeIkjnt * 0.5);\n               $ikLblJnt[1] =$ikJnts[$center];\n               \n               \n               $ikLblJnt[2] =$ikJnts[($sizeIkjnt - 1)]; \n               \n        }\n\n\n\n    //create IK curve\n    float $pos[] =`xform -q -ws -rp $ikLblJnt[0]`;\n    string $crv =`curve  -d 2 -p $pos[0] $pos[1] $pos[2] -n ($Dyna[$j] + \"_IK_Curve\")`;\n     \n              for ($i=1;$i<(size($ikLblJnt));$i++)\n              {\n                 float $pos[] =`xform -q -ws -rp $ikLblJnt[$i]`;\n                 curve  -a -d 2 -p $pos[0] $pos[1] $pos[2] $crv;\n              }\n              \n\n    //Create Controllers\n    string $parentGrp =`group -em -n ($Dyna[$j] + \"_IkCtlrs_grp\")`; \n    string $clstrList[] = {};\n              \n              for ($i=0;$i<(size($ikLblJnt));$i++)\n              {\n                  string $Box =`curve \n                                    -d 1 -p -0.5 0.5 -0.5 \n                                    -p -0.5 0.5 0.5 -p 0.5 0.5 0.5 \n                                    -p 0.5 0.5 -0.5 -p 0.5 -0.5 -0.5 \n                                    -p -0.5 -0.5 -0.5 -p -0.5 0.5 -0.5 \n                                    -p 0.5 0.5 -0.5 -p 0.5 0.5 0.5 \n                                    -p 0.5 -0.5 0.5 -p 0.5 -0.5 -0.5 \n                                    -p -0.5 -0.5 -0.5 -p -0.5 -0.5 0.5 \n                                    -p 0.5 -0.5 0.5 -p 0.5 0.5 0.5 \n                                    -p -0.5 0.5 0.5 -p -0.5 -0.5 0.5 \n                                    -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 \n                                    -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 \n                                    -k 12 -k 13 -k 14 -k 15 -k 16\n                                    -n ($Dyna[$j] + \"_IK_\" + $i + \"_ctl\")`;\n                                    \n                \n                string $grp =`group -em -n ($Box + \"_grp\")`; \n            \n                parent $Box $grp;\n                                    \n                string $clst[] =`cluster  -n ($Dyna[$j] + \"_IK_Cluster\" + $i)  ($Dyna[$j] + \"_IK_Curve.cv[\" + $i + \"]\")`;\n                \n                float $pos[] =`xform -q -ws -rp $clst[1]`;\n                float $rot[] =`xform -q -ws -ro $clst[1]`;\n                \n                xform -ws -t  $pos[0] $pos[1] $pos[2] $grp;\n                xform -ws -ro $rot[0] $rot[1] $rot[2] $grp;\n\n\n                parentConstraint $Box $clst[1];\n                LNH $Box 0 0 0 1 1 1 1 1 1 1;\n                parent $grp $parentGrp;\n                \n                $ikcnt[$i] = $Box;\n                $clstrList[$i] = $clst[0];\n              }\n              \n              connectAttr -f ($cnd1 + \".outColor.outColorR\") ($parentGrp + \".v\"); \n              string $ikGrp =`group -em -n ($Dyna[$j] + \"_IkExtra_grp\")`; \n\n\n                     \n        int $sz = size($ikLblJnt);\n        string $ikHd[]=` ikHandle \n        -sol ikSplineSolver \n        -ccv false \n        -pcv false \n        -sj $ikLblJnt[0] \n        -ee $ikLblJnt[($sz - 1)] \n        -c $crv\n        -n ($Dyna[$j] + \"_BefoerIK_\" + $i)`;\n \n            for ($each in $clstrList)\n                parent ($each + \"Handle\") $ikGrp;\n            \n            parent  $crv $ikGrp;\n            parent  $ikHd[0] $ikGrp;\n \n           for ($each in $ikcnt){\n              string $shp[]=`listRelatives -s $each`;\n              setAttr ($shp[0] + \".overrideEnabled\") 1;\n              setAttr ($shp[0] + \".overrideColor\") 17;}\n \n //Make Stretch\n          stretchSpine $ikJnts $ikHd[0] $crv $sel[0] $ikcnt[0]; \n\n \n//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n       \n    //before setup\n    \n       string $cnd3 = `createNode condition -n ($Dyna[$j] + \"_cnstCnd\")`;\n    setAttr ($cnd3 + \".secondTerm\") 2;\n    setAttr ($cnd3 + \".operation\") 0;\n    setAttr ($cnd3 + \".colorIfTrueR\") 0;\n    setAttr ($cnd3 + \".colorIfFalseR\") 1;\n    \n    connectAttr -f ($sel[0] + \".Before\") ($cnd3 + \".firstTerm\") ;\n    \n        for ($i=0;$i<(size($bfrJnts));$i++)\n        {\n            \n            string $cnst[] =`parentConstraint $fkJnts[$i] $ikJnts[$i] $bfrJnts[$i] `;\n\n            connectAttr -f ($cnd1 + \".outColor.outColorR\") ($cnst[0] + \".\" + $ikJnts[$i] + \"W1\");\n            connectAttr -f ($cnd3 + \".outColor.outColorR\") ($cnst[0] + \".\" + $fkJnts[$i] + \"W0\");\n\n       }\n \n \n \n//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n\n    //after setup\n    $dynacnt=`aftCtrls $Dyna[$j]`;\n    string $aftgrp =`group -em -n (\"after_\" + $Dyna[$j] + \"_ctl_grp\")`; \n    connectAttr ($sel[0] + \".After\") ($aftgrp + \".v\");\n\n        for ($each in $dynacnt)\n        {\n            \n            string $s1 = `substitute  \"aft_\" $each \"\"`;\n            string $s2 = `substitute  \"_ctl\" $s1 \"\"`;\n\n            parent (\"aftparent_\" + $s2 + \"_grp\")  $aftgrp;\n        }\n        \n             for ($each in $dynacnt){\n              string $shp[]=`listRelatives -s $each`;\n              setAttr ($shp[0] + \".overrideEnabled\") 1;\n              setAttr ($shp[0] + \".overrideColor\") 13;}\n       \n//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n\n    //Dynamic setup\n    //List all chind joints\n    string $child[] =`listRelatives -ad -c $dynaJnts[0]`;\n    $child[((size($child)))] = $dynaJnts[0];\n    //revers array \n    string $list[]= {};\n    int $no = 0;\n        for ($i=((size($child))-1);$i>=0;$i--)\n        {\n        $list[$no] =$child[$i];\n        $no += 1;\n        }\n\n\n    //create base curve\n    float $pos[] =`xform -q -ws -rp $list[0]`;\n    string $crv =`curve  -d 3 -p $pos[0] $pos[1] $pos[2] -n ($Dyna[$j] + \"_Base_Curve\")`;\n     \n              for ($i=1;$i<(size($list));$i++)\n              {\n                 float $pos[] =`xform -q -ws -rp $list[$i]`;\n                 curve  -a -d 3 -p $pos[0] $pos[1] $pos[2] $crv;\n              }\n              \n     //Make base curve Dynamic\n     select -cl  ;\n     select  $crv ;\n     //makeCurvesDynamicHairs 1 0 1;\n     makeCurvesDynamic 2 { \"1\", \"0\", \"1\", \"1\", \"0\"};\n     select -cl  ;\n     \n     \n     \n     //Find connected Hair System\n     string $shape[] =`listRelatives -ad -s $crv`;\n     string $folicle[] =`listConnections   $shape[0]`;\n     string $folicleShp[] =`listRelatives -ad -s $folicle[1]`;\n     string $hairSysShp[] =`listConnections -sh 1 $folicleShp[0]`;\n     string $hairSys[] =`listRelatives -ad -p $hairSysShp[2]`;\n     string $dynaCrv[] =`listRelatives -ad -p $hairSysShp[4]`;\n     setAttr ($hairSysShp[2] + \".active\") 0;\n\n\n     $nucl =`listConnections ($hairSysShp[2] + \".startState\")`;\n\n\n\n     string $hairSysGrp =`group -em -n ($Dyna[$j] + \"_HairSystem_grp\")`; \n     \n    parent $hairSys[0] $folicle[1] $crv $dynaCrv[0] $hairSysGrp;\n    rename $dynaCrv[0] ($Dyna[$j] + \"_Dynamic_crv\");\n    \n    delete ($hairSys[0] + \"Follicles\");\n    delete ($hairSys[0] + \"OutputCurves\");\n    \n    setAttr ($folicleShp[0] + \".pointLock\") 1;\n\n     \n    int $size =size( $dynaJnts );\n    \n    string $ikHlds[]=` ikHandle \n        -sol ikSplineSolver \n        -ccv false \n        -pcv false \n        -sj $dynaJnts[0] \n        -ee $dynaJnts[($size - 1)] \n        -c ($Dyna[$j] + \"_Dynamic_crv\")`;\n\n         \n            parent  $crv $ikGrp;\n            parent  $ikHlds[0] $ikGrp;\n\n    //Make stretchy\n\n     stretchSpine $dynaJnts $ikHlds[0] $crv $sel[0] $ikcnt[0];\n\n    for ($i=0;$i<($size - 1);$i++)\n    {\n    \n    string $s1 = `substitute  \"Dyna_\" $list[$i] \"\"`;\n    if(`objExists (\"FK_\" + $s1 + \"_ctl\")`)\n    {\n    connectAttr -f (\"FK_\" + $s1 + \"_ctl.rotateX\") (\"aftdyna_\" + $s1 + \"_grp.rotateX\");\n    }\n    //connectAttr -f ($dynaJnts[$i] + \".rotateX\") (\"aftdyna_\" + $s1 + \"_grp.rotateX\");\n    connectAttr -f ($dynaJnts[$i] + \".rotateY\") (\"aftdyna_\" + $s1 + \"_grp.rotateY\");\n    connectAttr -f ($dynaJnts[$i] + \".rotateZ\") (\"aftdyna_\" + $s1 + \"_grp.rotateZ\");\n    connectAttr -f ($dynaJnts[$i] + \".scaleX\") (\"aftdyna_\" + $s1 + \"_grp.scaleX\");\n   \n    }\n    \n    connectAttr -f ($dynaJnts[0] + \".translateX\") (\"aftdyna_\" + $Dyna[$j] + \"_grp.translateX\");\n    connectAttr -f ($dynaJnts[0] + \".translateY\") (\"aftdyna_\" + $Dyna[$j] + \"_grp.translateY\");\n    connectAttr -f ($dynaJnts[0] + \".translateZ\") (\"aftdyna_\" + $Dyna[$j] + \"_grp.translateZ\");\n \n\n    string $hrShp[] =`listRelatives -s $hairSys[0]`;\n    connectAttr -f ($sel[0] + \".Stiffness\") ($hrShp[0] + \".stiffness\");\n    connectAttr -f ($sel[0] + \".Damp\") ($hrShp[0] + \".damp\");\n    connectAttr -f ($sel[0] + \".Friction\") ($hrShp[0] + \".friction\");\n    connectAttr -f ($sel[0] + \".Gravity\") ($hrShp[0] + \".gravity\");\n    connectAttr -f ($sel[0] + \".Attract\") ($hrShp[0] + \".startCurveAttract\");\n    connectAttr -f ($sel[0] + \".Flow\") ($hrShp[0] + \".attractionScale[1].attractionScale_FloatValue\");\n    connectAttr -f ($sel[0] + \".Iterations\") ($hrShp[0] + \".iterations\");\n    \n \n    setDrivenKeyframe -cd ($sel[0] + \".Dynamic\") -dv 0 -v 1 ($hrShp[0] + \".simulationMethod\");\n    setDrivenKeyframe -cd ($sel[0] + \".Dynamic\") -dv 1 -v 3 ($hrShp[0] + \".simulationMethod\");\n    setAttr -l 1 ($hrShp[0] + \".simulationMethod\");\n    \n    customPrifix $hairSys[0] $Dyna[$j];\n    customPrifix $folicle[1] $Dyna[$j];\n    customPrifix $ikHlds[0] $Dyna[$j];\n    customPrifix $ikHlds[1] $Dyna[$j];    \n        \n\nstring $sknClst[] =`skinCluster -dr 4.0 -tsb  $bfrJnts[0] ($Dyna[$j] + \"_Base_Curve\")`;\n\n    for ($s=1;$s<(size($bfrJnts));$s++)\n    {      \n    skinCluster -e -ai $bfrJnts[$s] $sknClst[0];        \n    }\n       \n//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++// \nstring $ctrlGrp =`group -em -n ($Dyna[$j] + \"_Controllers_grp\")`; \nstring $stupGrp =`group -em -n ($Dyna[$j] + \"_Setup_grp\")`; \nstring $sclGrp =`group -em -n ($Dyna[$j] + \"_scale_grp\")`; \n\n\nfloat $dynaPos[] =`xform -q -ws -t $dynaJnts[0]`;\nfloat $dynaRot[] =`xform -q -ws -ro $dynaJnts[0]`;\n\nstring $RGJnt =`joint -p $dynaPos[0] $dynaPos[1] $dynaPos[2] -n (\"Extra\" + $dynaJnts[0])`;\nxform -ws -ro $dynaRot[0] $dynaRot[1] $dynaRot[2] $RGJnt;\nmakeIdentity -apply true -t 1 -r 1 -s 1 -n 0 $RGJnt;\nparent $dynaJnts[0] $RGJnt;\nparentConstraint -mo $dynaParent[$j] $RGJnt;\n\nparent (\"after_\" + $Dyna[$j] + \"_ctl_grp\") ($Dyna[$j] + \"_IkCtlrs_grp\") (\"FK_\" + $Dyna[$j] + \"_fkCtrls_grp\") $ctrlGrp;\nparentConstraint -mo $dynaParent[$j] $ctrlGrp;\n\nparent  $hairSysGrp $ikGrp $stupGrp;\nparent $fkJnts[0] $ikJnts[0] $bfrJnts[0]  $sclGrp;\n\nconnectAttr  -f ($sel[0] + \".Setup\") ($stupGrp + \".v\");\n\nif (!`objExists \"HairBakedSet\"`){\n    string $set =`sets -em -name \"HairBakedSet\"`;\n            for ($each in $dynacnt){\n            \n            string $prnt[]= `listRelatives -p $each`;\n            string $grndprnt[]= `listRelatives -p $prnt[0]`;\n            sets -e  -add $set $grndprnt;\n            \n            }\n        }\n    else{\n            for ($each in $dynacnt){\n            \n                string $prnt[]= `listRelatives -p $each`;\n                string $grndprnt[]= `listRelatives -p $prnt[0]`;\n                sets -e  -in \"HairBakedSet\" $grndprnt;\n                \n            }\n    }\n\n\n\n\n\n// For scale\nparent $sclGrp $stupGrp;\nscaleConstraint -mo $sel[0] $ctrlGrp;\nscaleConstraint -mo $sel[0] $sclGrp;\n}\n\nstring $mnStupGrp;    \nstring $mnCtrlGrp;\n\n\nif (!`objExists \"DynaControllers_grp\"`){\n    $mnCtrlGrp =`group -em -n \"DynaControllers_grp\"`; }\n\nif (!`objExists \"DynaSetup_grp\"`){\n    $mnStupGrp =`group -em -n \"DynaSetup_grp\"`; }\n\nfor ($i=0;$i<(size($Dyna));$i++)\n{\nparent $Dyna[$i] $dynaParent[$i];\nparent ($Dyna[$i] + \"_Controllers_grp\") DynaControllers_grp;\nparent ($Dyna[$i] + \"_Setup_grp\") DynaSetup_grp;\n \n\nselect -cl;\nprint \"// Result 1\";\n\n\n//For Scale\n\nstring $allJnt[] =`ls -dag -type \"joint\" $sel[0]`;\n\nfor ($j=0;$j<(size($allJnt));$j++)\n{\n\nstring $cons =`connectionInfo -sfd ($allJnt[$j] + \".inverseScale\")`;\n\n    if($cons != \"\")\n    {\n    disconnectAttr $cons ($allJnt[$j] + \".inverseScale\");\n    }\n    \n}\n\n\n}\n}\n}\nint $cb=`checkBox -q -v Ncb`;\nif ($cb!=1)\n{\n    delete $nucl;\n}\n\n};\n\n//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n//\n//                       Extra procedures\n//\n//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n\nglobal proc string[] dupPrifix (string $joint, string $prefix )\n{  \n    //get child joints\n    string $child[] =`listRelatives -ad -c $joint`;\n    $child[((size($child)))] = $joint;\n    string $newjnt[] = {};\n    //revers array \n    string $list[]= {};\n    int $no = 0;\n        for ($i=((size($child))-1);$i>=0;$i--)\n        {\n        $list[$no] =$child[$i];\n        $no += 1;\n        }\n    \n \n    //duplicate joint with prefix\n       string $dup[] =` duplicate  -rc $joint`;\n\n       int $count = 0;\n            for ($i=0;$i<(size($dup));$i++)\n            {\n                rename $dup[$i] ($prefix + \"_\" + $list[$i]);\n                $newjnt[$count] = ($prefix + \"_\" + $list[$i]);\n                $count += 1;\n                \n            }  \n            \n     return $newjnt;\n};\n\n//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n\nglobal proc string[] customPrifix (string $joint,string $prefix )\n{  \n    //get child joints\n    string $child[] =`listRelatives -ad -c $joint`;\n    $child[((size($child)))] = $joint;\n    string $newjnt[] = {};\n\n        int $count = 0;\n            for ($i=0;$i<(size($child));$i++)\n            {\n                rename $child[$i] ($prefix + \"_\" + $child[$i]);\n                $newjnt[$count] = ($prefix + \"_\" + $child[$i]);\n                $count += 1;\n                \n            }  \n            \n     return $newjnt;\n};\n\n//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n\nglobal proc string[] fkCtrls (string $joint)\n{\nstring $ctrls[] = {};\nint $count = 0;\nstring $child[] =`listRelatives -ad -c $joint`;\n$child[((size($child)))] = $joint;\nstring $newjnt[] = {};\n    \n    //revers array \n    string $list[]= {};\n    int $no = 0;\n        for ($i=((size($child))-1);$i>=0;$i--)\n        {\n        $list[$no] =$child[$i];\n        $no += 1;\n        }\n    \n        string $fkGrp =`group -em -n ($joint + \"_fkCtrls_grp\")`; \n\n        //constriant jont with new controler\n        for ($i=0;$i<((size($list)-1 ));$i++)\n        {\n           string $fkctrl[]= `circle \n               -c 0 0 0 -nr 1 0 0 \n               -sw 360 -r 1 -d 3 \n               -ut 0 -tol 0.01 \n               -s 8 -ch 0 \n               -n ($list[$i] + \"_ctl\")`;\n           string $grp1 =`group -em -n (\"fkExtra_\" + $list[$i] + \"_grp\")`; \n           string $grp2 =`group -em -n (\"fkparent_\" + $list[$i] + \"_grp\")`; \n        \n           parent $fkctrl[0] $grp1;\n           parent $grp1 $grp2;\n           \n           float $pos[] =`xform -q -ws -rp $list[$i]`;\n           float $rot[] =`xform -q -ws -ro $list[$i]`;\n           \n           xform -ws -t $pos[0] $pos[1] $pos[2] $grp2;\n           xform -ws -ro $rot[0] $rot[1] $rot[2] $grp2;\n        \n           parentConstraint -mo $fkctrl[0] $list[$i];\n           \n           LNH $fkctrl[0] 0 0 0 0 0 0 1 1 1 1;\n           LNH $grp1   0 0 0 0 0 0 1 1 1 1;\n           \n           parent $grp2 $fkGrp;\n           \n           $ctrls[$count] = $fkctrl[0];\n           $count += 1;\n        }\n\n\n        // make fk hierachy\n        for ($i=1;$i<((size($ctrls)));$i++)\n        {            \n            parentConstraint -mo $ctrls[($i - 1)] (\"fkparent_\" + $list[$i] + \"_grp\") ;\n        }\n        \n  return $ctrls;\n\n}\n\n//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n\nglobal proc string[] aftCtrls (string $joint)\n{ \n\nstring $ctrls[] = {};\nint $count = 0;\nstring $child[] =`listRelatives -ad -c $joint`;\n$child[((size($child)))] = $joint;\nstring $newjnt[] = {};\n    \n    //revers array \n    string $list[]= {};\n    int $no = 0;\n        for ($i=((size($child))-1);$i>=0;$i--)\n        {\n        $list[$no] =$child[$i];\n        $no += 1;\n        }\n    \n    \n        //constriant jont with new controler\n        for ($i=0;$i<((size($list)-1 ));$i++)\n        {\n\n           string $aftctrl[]= `circle \n               -c 0 0 0 -nr 1 0 0 \n               -sw 360 -r 1 -d 1 \n               -ut 0 -tol 0.01 \n               -s 4 -ch 0 \n               -n (\"aft_\" + $list[$i] + \"_ctl\")`;\n               \n           xform -ws -ro -45 0 0 $aftctrl[0];\n           makeIdentity -apply 1 -r 1 $aftctrl[0];\n\n           string $grp1 =`group -em -n (\"aftExtra_\" + $list[$i] + \"_grp\")`; \n           string $grp2 =`group -em -n (\"aftparent_\" + $list[$i] + \"_grp\")`; \n           string $grp3 =`group -em -n (\"aftdyna_\" + $list[$i] + \"_grp\")`; \n\n\n           if($i == 0)\n           {\n            addAttr -ln \"transCon\"  -at bool  $grp3;\n            setAttr -e -keyable false -lock true ($grp3 + \".transCon\");\n           }\n           \n        \n           parent $aftctrl[0] $grp1;\n           parent $grp1 $grp3;\n           parent $grp3 $grp2;\n           \n           float $pos[] =`xform -q -ws -rp $list[$i]`;\n           float $rot[] =`xform -q -ws -ro $list[$i]`;\n           \n           xform -ws -t $pos[0] $pos[1] $pos[2] $grp2;\n           xform -ws -ro $rot[0] $rot[1] $rot[2] $grp2;\n        \n           parentConstraint -mo $aftctrl[0] $list[$i];\n           \n           \n          LNH $aftctrl[0] 0 0 0 0 0 0 1 1 1 1;\n          LNH $grp1 0 0 0 0 0 0 1 1 1 1;\n\n            \n           $ctrls[$count] = $aftctrl[0];\n           $count += 1;\n        }\n\n\n        // make fk hierachy\n        for ($i=1;$i<(size($ctrls));$i++)\n        {\n            parentConstraint -mo (\"aft_\" + $list[($i-1)] + \"_ctl\") (\"aftparent_\" + $list[$i] + \"_grp\");\n            \n        }\n        \n   \n    \n  return $ctrls;\n\n}\n\n//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n\nglobal proc stretchSpine (string $jnt[],string $ikHandle, string $crv,string $glCrv, string $attrCrv )\n{\nint $attExt = 1;\nstring $Attr[] = `listAttr -k $attrCrv`;\n    for ($arbt in $Attr)\n    {\n        if ($arbt == \"Stretchy\" || $arbt == \"stretchy\" )\n        {\n        $attExt = 0;\n        }\n        \n    }\n    \n    if ($attExt == 1)\n    {\n        addAttr -ln \"Stretchy\"  -at \"enum\" -en \"Off:On:\" $attrCrv ;\n        setAttr -e-keyable true ($attrCrv  + \".Stretchy\");\n    }\n\n\n\nstring $cvrInfo =`arclen -ch 1 $crv`;\n\nstring $cnd =`createNode condition -n ($jnt[0] + \"_Schy\")`;\n\nconnectAttr -f ($attrCrv + \".Stretchy\") ($cnd + \".firstTerm\");\nsetAttr ($cnd + \".secondTerm\") 1;\nsetAttr ($cnd + \".operation\") 0;\nconnectAttr -f ($cvrInfo + \".arcLength\") ($cnd + \".colorIfTrueR\");\nfloat $arc = `getAttr ($cvrInfo + \".arcLength\")`;\n\n\nstring $glMd =`createNode multiplyDivide -n ($jnt[0] + \"_glMD\")`;\n\n    if(!`objExists \"SRT\"`)\n    {\n        connectAttr -f ($glCrv  + \".scaleX\") ($glMd + \".input1X\");\n    }\n    else\n    {\n        connectAttr -f (\"SRT.scaleX\") ($glMd + \".input1X\");\n    }\nsetAttr ($glMd + \".operation\") 1;\nsetAttr ($glMd + \".input2X\") $arc;\nconnectAttr -f ($glMd  + \".outputX\") ($cnd + \".colorIfFalseR\");\n\nstring $md =`createNode multiplyDivide -n ($jnt[0] + \"_MD\")`;\nsetAttr ($md+ \".operation\") 2;\n\nconnectAttr -f ($cnd + \".outColorR\") ($md + \".input1X\");\nconnectAttr -f ($glMd + \".outputX\") ($md + \".input2X\");\n\n\n        for ($each in $jnt)\n            connectAttr -f ($md + \".outputX\") ($each  + \".scaleX\");\n\n\n}\n\n//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n\nglobal proc int attrExt (string $obj, string $attr)\n{\nstring $allAttr[] =`listAttr -ud $obj`;\nint $go = 0;\nfor ($each in $allAttr)\n\nif ($each == $attr)\n    {\n        $go = 1;\n    }\n    \n    \n    return $go;\n}\n\n//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n\nglobal proc int  LNH (string $obj,int $tx,int $ty,int $tz,int $rx,int $ry,int $rz,int $sx,int $sy,int $sz,int $v)\n{\nint $attrVal[];\n$attrVal[0] =$tx;$attrVal[1] =$ty;$attrVal[2] =$tz;\n$attrVal[3] =$rx;$attrVal[4] =$ry;$attrVal[5] =$rz;\n$attrVal[6] =$sx;$attrVal[7] =$sy;$attrVal[8] =$sz;\n$attrVal[9] =$v;\nint $keyVal;\nstring $attrs[] ={\"tx\",\"ty\",\"tz\",\"rx\",\"ry\",\"rz\",\"sx\",\"sy\",\"sz\",\"v\"};\n\n    for ($i=0;$i<(size($attrs));$i++)\n    {\n        if ($attrVal[$i] == 0)\n            $keyVal = 1;\n            \n        if ($attrVal[$i] == 1)\n            $keyVal = 0;\n            \n            \n    setAttr -lock $attrVal[$i] -keyable $keyVal ($obj +  \".\" + $attrs[$i]);\n    }\n\n    return 1;\n}\n\n\n//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n\nglobal proc rmDynaSetup ()\n{\nstring $sel[] =`ls -sl`; \nif ((size($sel)) == 0){\n     warning \"select the parent joint.....\";}\nelse{\n//find all dyan lables\nstring $child[] =`listRelatives -ad -c $sel[0]`;\nstring $Dyna[] = {};\nstring $ikLbl[] = {};\nint $no= 0;\n\n    //List Dyna joints\n    for ($each in $child)\n    {\n     \n       if ((`objectType $each`) == \"joint\")\n        {\n            string $lable =`getAttr ($each + \".otherType\")`;\n            int $types =`getAttr ($each + \".type\")`;\n            \n                    if ((startsWith ($lable, \"dyna\")) == 1 && $types == 18)\n                    {\n                        setAttr ($each + \".drawLabel\") 0;\n                        $Dyna[$no]=$each;\n                        $no+= 1;\n                    }\n                    \n\n        }\n    }\n$no= 0;\n\n    //List PropA joints\n    for ($each in $child)\n    {\n     \n       if ((`objectType $each`) == \"joint\")\n        {\n            int $types =`getAttr ($each + \".type\")`;\n            \n                    if ($types == 15)\n                    {      \n                        string $s1 = `substitute \"IK_\" $each \"\"`;  \n                        setAttr ($s1 + \".drawLabel\") 0;               \n                        $ikLbl[$no]=$each;\n                        $no+= 1;\n                    }\n        }\n        \n    \n    }\n\n\n\nif ((size($Dyna)) == 0){\n    \n         string $lable =`getAttr ($sel[0] + \".otherType\")`;\n         int $types =`getAttr ($sel[0] + \".type\")`;\n         \n                    if ((startsWith ($lable, \"dyna\")) == 1 && $types == 18){\n                        $Dyna[0]=$sel[0]; }\n                    }\n\nif ((size($Dyna)) == 0){\n    warning \"There is no Dyna.....\";}\nelse{\n//Delete Setup\nfor ($each in $Dyna)\n{    \n    setAttr ($each + \".drawLabel\") 1;\n    delete -cn $each;\n    \n    if (`objExists ($each + \"_Controllers_grp\")`)\n        delete ($each + \"_Controllers_grp\");\n\n    if (`objExists ($each + \"_Setup_grp\")`)\n        delete ($each + \"_Setup_grp\");\n \n}\n    \n//Restore lable\nfor ($e in  $ikLbl)\n    setAttr ($e + \".drawLabel\") 1;\n    \nstring $child[] =`listRelatives -c \"DynaControllers_grp\"`;\nif ((size($child)) == 0)\n    delete \"DynaControllers_grp\";\n    \n    \nstring $child[] =`listRelatives -c \"DynaSetup_grp\"`;\nif ((size($child)) == 0)\n    delete \"DynaSetup_grp\";\n    \n    }        \n    }\n};\nglobal proc CN()\n{\n    string $ctl[]=`ls -sl`;\n    addAttr -ln \"StartFrame\" -k 1 -at \"long\" -dv 1 $ctl[0];\n    connectAttr -f ($ctl[0] + \".StartFrame\") \"nucleus1.startFrame\";\n} \n " 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Edit various component values for the selected object(s)" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Component Editor" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "CpEd" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconWindow.png" 
        -image1 "menuIconWindow.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "ComponentEditor" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Edit animation curves" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Graph Editor" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "GE" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconWindow.png" 
        -image1 "menuIconWindow.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "GraphEditor" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Delete static channels on the selected object(s)" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Static Channels" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "SC" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconEdit.png" 
        -image1 "menuIconEdit.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "DeleteStaticChannels" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "AdvancedSkeleton5" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "AdvancedSkeleton5" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "C:/Users/Sid/Documents/maya/scripts/AdvancedSkeleton5Files/icons/AS5.png" 
        -image1 "C:/Users/Sid/Documents/maya/scripts/AdvancedSkeleton5Files/icons/AS5.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "source \"C:/Users/Sid/Documents/maya/scripts/AdvancedSkeleton5.mel\";AdvancedSkeleton5;" 
        -sourceType "mel" 
        -doubleClickCommand "asMCLRemoveBody \"\";" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Selector:biped" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Selector:biped" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "C:/Users/Sid/Documents/maya/scripts/AdvancedSkeleton5Files/icons/asBiped.png" 
        -image1 "C:/Users/Sid/Documents/maya/scripts/AdvancedSkeleton5Files/icons/asBiped.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "source \"C:/Users/Sid/Documents/maya/scripts/AdvancedSkeleton5Files/Selector/biped.mel\";" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Selector:face" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Selector:face" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "C:/Users/Sid/Documents/maya/scripts/AdvancedSkeleton5Files/icons/asFace.png" 
        -image1 "C:/Users/Sid/Documents/maya/scripts/AdvancedSkeleton5Files/icons/asFace.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "source \"C:/Users/Sid/Documents/maya/scripts/AdvancedSkeleton5Files/Selector/face.mel\";" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "picker" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "picker" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "C:/Users/Sid/Documents/maya/scripts/AdvancedSkeleton5Files/picker/pickerFiles/icons/picker.png" 
        -image1 "C:/Users/Sid/Documents/maya/scripts/AdvancedSkeleton5Files/picker/pickerFiles/icons/picker.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "source \"C:/Users/Sid/Documents/maya/scripts/AdvancedSkeleton5Files/picker/picker.mel\";" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Smooth bind skin" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Bind Skin" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "smoothSkin.png" 
        -image1 "smoothSkin.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "SmoothBindSkin" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Detach skin" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Unbind Skin" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "detachSkin.png" 
        -image1 "detachSkin.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "DetachSkin" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import maya.cmds as cmds\n\nJointChain=cmds.ls(selection=True)\nJointRel=cmds.listRelatives(JointChain,ad=True)\nJointHr=JointChain+JointRel\n\nctrlGrpList=[]\nctrlList=[]\n\nfor i in JointHr:\n    name=i.replace('_Joint','')\n    ctrl=cmds.circle(n=(name+'_Ctrl'),ch=0)\n    cmds.delete(cmds.parentConstraint(i,ctrl))\n    cmds.parentConstraint(ctrl,i)\n    groupOffset=cmds.group(ctrl,n=(name+'_Offset'))\n    groupExtra=cmds.group(groupOffset,n=(name+'_Extra'))\n    ctrlList.append(ctrl[0])\n    ctrlGrpList.append(groupExtra)    \n   \n \n#st=cmds.ls('*_Ctrl',)\n#ctrlList=cmds.ls('*_Ctrl', p=1)   josh sobel\nnoofjnts=len(groupExtra)\n\n\n\nfor i in range (0,noofjnts):\n    cmds.parent(ctrlGrpList[i+1],ctrlList[i])" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Create ctrl h" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Create ctrl h" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import maya.cmds as cmds\n\nJointChain=cmds.ls(selection=True)\nJointRel=cmds.listRelatives(JointChain,ad=True)\nJointHr=JointChain+JointRel\n\nctrlGrpList=[]\nctrlList=[]\n\nfor i in JointHr:\n    name=i.replace('_Joint','')\n    ctrl=cmds.circle(n=(name+'_Ctrl'),ch=0)\n    cmds.delete(cmds.parentConstraint(i,ctrl))\n    cmds.parentConstraint(ctrl,i)\n    groupOffset=cmds.group(ctrl,n=(name+'_Offset'))\n    groupExtra=cmds.group(groupOffset,n=(name+'_Extra'))\n    ctrlList.append(ctrl[0])\n    ctrlGrpList.append(groupExtra)    \n   \n \n#st=cmds.ls('*_Ctrl',)\n#ctrlList=cmds.ls('*_Ctrl', p=1)   josh sobel\nnoofjnts=len(groupExtra)\n\n\n\nfor i in range (0,noofjnts):\n    cmds.parent(ctrlGrpList[i+1],ctrlList[i])" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Adjust blend shape weights" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Shape Editor" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "blendShapeEditor.png" 
        -image1 "blendShapeEditor.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "ShapeEditor" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Add influence options" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "addInfluenceDialog" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "addWrapInfluence.png" 
        -image1 "addWrapInfluence.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "AddInfluenceOptions" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Copy the weight of a vertex to paste it onto other vertices" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Copy Vertex Weights" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "CVW" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconSkinning.png" 
        -image1 "menuIconSkinning.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "artAttrSkinWeightCopy" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Paste the weight of a copied vertex onto other vertices" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Paste Vertex Weights" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "PVW" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconSkinning.png" 
        -image1 "menuIconSkinning.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "artAttrSkinWeightPaste" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\nfrom pymel.core import *    \n\nif window('TheRiggersToolkitX',ex=True):\n\tdeleteUI('TheRiggersToolkitX')\nif window('ExamplaeWindow',ex=True):\n\tdeleteUI('ExamplaeWindow')\n\nif cmds.windowPref('TheRiggersToolkitX', exists=True ):\n   cmds.windowPref( 'TheRiggersToolkitX', r=1 )\n\t\ntemplate = uiTemplate('TheRiggersToolkitXtemplate', force=True)\ntemplate.define(formLayout)\n\nwind = pm.window( 'TheRiggersToolkitX',t = 'RigToolkitX',w=300,h=330,s=1,bgc = [(.17),(.18),(.19)])\nTab = tabLayout('Tabs',p='TheRiggersToolkitX',tc =1,stb=1,snt=1,ntc = 'NewTab()')\n\nToolsSc = pm.scrollLayout('Controls',p='Tabs',w=300,h=350)\nToolsSc = pm.scrollLayout('Tools',p='Tabs')\nchannelbox = pm.channelBox('ChannelBox',p = 'Tabs',ac = [(.8),(.9),(1)],bc = [(.3),(.3),(.3)],ekf =1,fw=150,hlc=[(.2),(.6),(.4)],hol =1,ln=1,nn=0,m=1,pre = 5,)\nout = pm.formLayout('Outliner',p='Tabs',w=300,h=330)\noutpanel = pm.outlinerPanel(p = 'Outliner')\n\n\nSkinSc= pm.scrollLayout('Skin',p='Tabs')\nScriptEdt = pm.scrollLayout('MelCmd',p='Tabs')\nMiscSc = pm.scrollLayout('Misc',p='Tabs')\n\n\ncmdShll = cmds.cmdShell(p='MelCmd',w=290,h=260 , bgc = [(.17),(.18),(.19)])\nclearBtn = pm.symbolButton('minusBtn',p = 'MelCmd',i = 'clearAll.png',w = 285,h=43,ebg =1 , bgc = [(.1),(.11),(.11)],en = 1,command=('cmds.cmdShell(\\\"' + cmdShll + '\\\", edit=True, clear=True)' ))\n\n\nControlsForm = pm.formLayout( 'ControlsForm',p='Controls')\n\nToolsForm = pm.formLayout('ToolkitForm',p='Tools')\nSkinForm = pm.formLayout('SkinForm',p='Skin')\nMiscForm = pm.formLayout('MiscForm',p='Misc')\n\nGlobalName = pm.textField('Globalfield', w = 270 , h=25 ,pht = 'Name for Ctrls or Attrs',p = 'ControlsForm',bgc = [(.17),(.18),(.19)])\n\nBaseCtlBtn = pm.iconTextButton('ControlBase',style='iconAndTextHorizontal', image1='polyColorSetEditor.png', label='Control Class',p = 'ControlsForm',w=130,h=40, bgc = [(.3),(.5),(.5)])\nBaseCtlShapeBtn = pm.iconTextButton('ControlShape',style='iconAndTextHorizontal', image1='fluidCreate3D.png', label='Control Shape',p = 'ControlsForm',w=130,h=40,  bgc = [(.3),(.5),(.5)])\nBorder01Btn = pm.button('Border01',l = '',p = 'ControlsForm',w= 260,h = 60,en=0)\n\nCtrlSizeText = pm.iconTextButton('Sizetxt',style='iconAndTextHorizontal',image1='StandinShelf.png',l = 'SHAPE SIZE',p = 'ControlsForm',w = 105,h=40, bgc = [(.2),(.3),(.3)],en = 1)\nintensityTxtFld = pm.floatField('intenTxf',min = .10,p = 'ControlsForm',v=.10,w= 45,h =40,bgc = [(.17),(.18),(.19)] )\nplusBtn = pm.symbolButton('plusBtn',p = 'ControlsForm',i = 'UVTBAdd.png',w = 40,h=40,ebg =1 , bgc = [(.2),(.3),(.3)],en = 1)\nminusBtn = pm.symbolButton('minusBtn',p = 'ControlsForm',i = 'UVTBRemove.png',w = 40,h=40,ebg =1 , bgc = [(.2),(.3),(.3)],en = 1)\n\n\nattrsBtn = pm.button('atrBtn',l= 'Attributes',p = 'ControlsForm',w = 270,h=19, bgc = [(.2),(.2),(.2)],hlc = [(.9),(.2),(.2)],en =1)\n\n\n\nlockatBtn = pm.symbolButton('lockatrBtn',p = 'ControlsForm',i = 'Lock_ON.png',w = 63,h=25,ebg =1 , bgc = [(.3),(.2),(.2)],en = 1)\nunlockatBtn = pm.symbolButton('unlockatrBtn',p = 'ControlsForm',i = 'Lock_OFF.png',w = 63,h=25,ebg =1 , bgc = [(.3),(.2),(.2)],en = 1)\nkeyableBtn = pm.symbolButton('keyableAtBtn',p = 'ControlsForm',i = 'keyIntoclip.png',w = 63,h=25,ebg =1 , bgc = [(.3),(.2),(.2)],en = 1)\nhideBtn = pm.symbolButton('hideAtBtn',p = 'ControlsForm',i = 'RS_visible.png',w = 63,h=25,ebg =1 , bgc = [(.3),(.2),(.2)],en = 1)\n\nOnOffAttr = pm.button('OnOff',l= 'Off/On',p = 'ControlsForm',w = 63,h=19, bgc = [(.2),(.2),(.2)],hlc = [(.9),(.2),(.2)],en =1)\nZeroOneAttr = pm.button('ZeroOneAtr',l= '0.0-1.0',p = 'ControlsForm',w = 63,h=19, bgc = [(.2),(.2),(.2)],hlc = [(.9),(.2),(.2)],en =1)\nZeroTenAttr = pm.button('ZeroTenAtr',l= '0-10',p = 'ControlsForm',w = 63,h=19, bgc = [(.2),(.2),(.2)],hlc = [(.9),(.2),(.2)],en =1)\nIntAttr= pm.button('IntAtr',l= '0-1',p = 'ControlsForm',w = 63,h=19, bgc = [(.2),(.2),(.2)],hlc = [(.9),(.2),(.2)],en =1)\n\nEnumAttrBtn= pm.button('EnumAtr',l= 'Enum',p = 'ControlsForm',w = 132,h=19, bgc = [(.2),(.2),(.2)],hlc = [(.9),(.2),(.2)],en =1)\nStringAttrBtn= pm.button('StringAtr',l= 'String',p = 'ControlsForm',w = 132,h=19, bgc = [(.2),(.2),(.2)],hlc = [(.9),(.2),(.2)],en =1)\nJntCreate= pm.iconTextButton('CreateJnt',style='iconAndTextHorizontal',image1='CenterPivot.png',l = 'Create Joint CTR ',p = 'ControlsForm',w = 132,h=40, bgc = [(.2),(.3),(.3)],en = 1,c = 'CtrJnt()')\nEachJntCreate= pm.iconTextButton('EachCreateJnt',style='iconAndTextHorizontal',image1='out_particle.png',l = 'Create Joint Each',p = 'ControlsForm',w = 132,h=40, bgc = [(.2),(.3),(.3)],en = 1,c = 'CtrJntEach()')\n\noutliner = pm.outlinerPanel(outpanel, query=True,outlinerEditor=True)\n\npm.outlinerEditor( outliner, edit=True, mainListConnection='worldList', selectionConnection='modelList', showShapes=False, showReferenceNodes=False, showReferenceMembers=False, showAttributes=False, showConnected=False, showAnimCurvesOnly=False, autoExpand=False, showDagOnly=True, ignoreDagHierarchy=False, expandConnections=False, showNamespace=True, showCompounds=True, showNumericAttrsOnly=False, highlightActive=True, autoSelectNewObjects=False, doNotSelectNewObjects=False, transmitFilters=False, showSetMembers=True, setFilter='defaultSetFilter' )\n\n\npm.formLayout('Outliner',e =1,af=[(outpanel,'top',0),(outpanel,'left',0),(outpanel,'right',0),(outpanel,'bottom',0)])\npm.formLayout('ControlsForm',e=1,\n\tattachForm = [\n\t\n\t\n\t(GlobalName,'top',8),\n\t(BaseCtlBtn,'top',45),\n\t(BaseCtlShapeBtn,'top',45),\n\t\n\t(Border01Btn,'right',10),\n\t(BaseCtlShapeBtn,'right',10),\n\n\n\t\n\t(GlobalName,'left',10),\n\t(BaseCtlBtn,'left',10),\n\t(CtrlSizeText,'left',20),\n\t(Border01Btn,'left',10),\n\t(lockatBtn,'left',10),\n\t(attrsBtn,'left',10),\t\n\t(OnOffAttr,'left',10),\t\n\t(EnumAttrBtn,'left',10),\t\n\t(JntCreate,'left',10),\t\n\t(EachJntCreate,'left',10),\t\t\n\t\n\t],\n\tattachControl = [\n\t\n\t(BaseCtlShapeBtn, 'left' , 10 , BaseCtlBtn ),\n\n\t(plusBtn, 'left' , 6 , CtrlSizeText ),\n\t(intensityTxtFld, 'left' , 6 , plusBtn ),\n\t(minusBtn, 'left' , 6 , intensityTxtFld ),\n\t(attrsBtn, 'top' , 12 , Border01Btn ),\n\t(unlockatBtn, 'left' , 6 , lockatBtn ),\n\t(keyableBtn, 'left' , 6 , unlockatBtn ),\n\t(hideBtn, 'left' , 6 , keyableBtn ),\n\t(ZeroOneAttr, 'left' , 6 , OnOffAttr ),\n\t(ZeroTenAttr, 'left' , 6 , ZeroOneAttr ),\n\t(IntAttr, 'left' , 6 , ZeroTenAttr ),\n\t(StringAttrBtn, 'left' , 6 , EnumAttrBtn ),\n\t(EachJntCreate, 'left' , 6 , JntCreate ),\n\t\n\t\t\n\t(intensityTxtFld, 'top' , 18 , BaseCtlShapeBtn ),\n\t(Border01Btn, 'top' , 10 , BaseCtlShapeBtn ),\n\t(CtrlSizeText, 'top' , 18 , BaseCtlShapeBtn ),\n\t(plusBtn, 'top' , 18 , BaseCtlShapeBtn ),\n\t(minusBtn, 'top' , 18 , BaseCtlShapeBtn ),\n\t(unlockatBtn, 'top' , 10 , attrsBtn ),\n\t(lockatBtn, 'top' , 10 , attrsBtn ),\n\t(keyableBtn, 'top' , 10 , attrsBtn ),\t\n\t(hideBtn, 'top' , 10 , attrsBtn ),\n\t(OnOffAttr, 'top' , 10 , hideBtn ),\n\t(ZeroOneAttr, 'top' , 10 , hideBtn ),\n\t(ZeroTenAttr, 'top' , 10 , hideBtn ),\n\t(IntAttr, 'top' , 10 , hideBtn ),\n\t(EnumAttrBtn, 'top' , 10 , IntAttr ),\n\t(StringAttrBtn, 'top' , 10 , IntAttr ),\n\t(JntCreate, 'top' , 10 , StringAttrBtn ),\n\t(EachJntCreate, 'top' , 10 , StringAttrBtn ),\n\t]\n\t\n\t\n\t\n\t\n\t\n\t)\n\n\nwith wind:\n\twith template:\n\t\twith Tab:\n\t\t\tprint 'Launching ToolkitX'\n\t\t\t\n\ndef Control_MM_UI():\n\t\n\tif pm.popupMenu('ControlMenu', ex=1):\n\t\tpm.deleteUI('ControlMenu')\n    \t\n\t\n\tCtlMenu = pm.popupMenu('ControlMenu', mm=1, b=(1), aob=1, ctl=0, alt=0, sh=0, p=\"ControlBase\", pmo=1)\n    \n\tpm.menuItem(p=CtlMenu, l=\"Print Fn\", rp=\"SW\", c=\"print 'SouthWest'\")\n\tpm.menuItem(p=CtlMenu, l=\"Circle\", rp=\"NE\", c=\"pm.circle()\")\n\t\n\n\nControl_MM_UI()\n\ndef NewTab():\n    pm.scrollField( 'Notes',p = 'Tabs', bgc = [(.2),(.2),(.2)],hlc = [(.9),(.2),(.2)],en =1 )\n    Tab = tabLayout('Tabs',e =1 , snt=0)\n    \n    \n    \n    \ndef CtrJnt():\n    #createJoint\n\n    sl = pm.ls(sl=1)\n    try:\n        pm.select(sl)\n        tempPos = pm.cluster(n='Temp')[1]\n        Jnt = pm.createNode('joint',n = (sl[0]+'Jnt'))\n        pm.delete(pm.parentConstraint(tempPos,Jnt))\n        pm.delete(tempPos)\n        \n        \n        \n        \n    except:\n        tempPos = pm.createNode('transform',n = 'Temp')\n        pm.delete(pm.parentConstraint(sl,tempPos))\n        Jnt = pm.createNode('joint',n = (sl[0]+'_Jnt'))\n        pm.delete(pm.parentConstraint(tempPos,Jnt))\n        pm.delete(tempPos)\n        \n        \n        \n    \n    \n\ndef CtrJntEach():\n    \n    #createJoint\n    try:sl = getSelection()\n    except:sl= pm.ls(sl=1)\n    for i in sl:\n        \n        \n        try:\n            pm.select(i)\n            tempPos = pm.cluster(n='Temp')[1]\n            Jnt = pm.createNode('joint',n = (i+'Jnt'))\n            pm.delete(pm.parentConstraint(tempPos,Jnt))\n            pm.delete(tempPos)\n            \n            \n            \n            \n        except:\n            tempPos = pm.createNode('transform',n = 'Temp')\n            pm.delete(pm.parentConstraint(i,tempPos))\n            Jnt = pm.createNode('joint',n = (i+'_Jnt'))\n            pm.delete(pm.parentConstraint(tempPos,Jnt))\n            pm.delete(tempPos)\n            \n        \n        \ndef getSelection():\n    components = cmds.ls(sl=1)\n    selList = []\n    objName = components[0][0:components[0].index(\".\")]\n    # go through every component in the list. If it is a single component (\"pCube1.vtx[1]\"), add it to the list. Else,\n    # add each component in the index (\"pCube1.vtx[1:5]\") to the list\n    for c in components:\n        if \":\" not in c:\n            selList.append(c)\n        else:\n            print c\n            startComponent = int(c[c.index(\"[\") + 1: c.index(\":\")])\n            endComponent = int(c[c.index(\":\") + 1:c.index(\"]\")])\n            componentType = c[c.index(\".\") + 1:c.index(\"[\")]\n            while startComponent <= endComponent:\n                selList.append(objName + \".\" + componentType + \"[\" + str(startComponent) + \"]\")\n                startComponent += 1\n\n    return selList\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Cui" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Cui" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\nfrom pymel.core import *    \n\nif window('TheRiggersToolkitX',ex=True):\n\tdeleteUI('TheRiggersToolkitX')\nif window('ExamplaeWindow',ex=True):\n\tdeleteUI('ExamplaeWindow')\n\nif cmds.windowPref('TheRiggersToolkitX', exists=True ):\n   cmds.windowPref( 'TheRiggersToolkitX', r=1 )\n\t\ntemplate = uiTemplate('TheRiggersToolkitXtemplate', force=True)\ntemplate.define(formLayout)\n\nwind = pm.window( 'TheRiggersToolkitX',t = 'RigToolkitX',w=300,h=330,s=1,bgc = [(.17),(.18),(.19)])\nTab = tabLayout('Tabs',p='TheRiggersToolkitX',tc =1,stb=1,snt=1,ntc = 'NewTab()')\n\nToolsSc = pm.scrollLayout('Controls',p='Tabs',w=300,h=350)\nToolsSc = pm.scrollLayout('Tools',p='Tabs')\nchannelbox = pm.channelBox('ChannelBox',p = 'Tabs',ac = [(.8),(.9),(1)],bc = [(.3),(.3),(.3)],ekf =1,fw=150,hlc=[(.2),(.6),(.4)],hol =1,ln=1,nn=0,m=1,pre = 5,)\nout = pm.formLayout('Outliner',p='Tabs',w=300,h=330)\noutpanel = pm.outlinerPanel(p = 'Outliner')\n\n\nSkinSc= pm.scrollLayout('Skin',p='Tabs')\nScriptEdt = pm.scrollLayout('MelCmd',p='Tabs')\nMiscSc = pm.scrollLayout('Misc',p='Tabs')\n\n\ncmdShll = cmds.cmdShell(p='MelCmd',w=290,h=260 , bgc = [(.17),(.18),(.19)])\nclearBtn = pm.symbolButton('minusBtn',p = 'MelCmd',i = 'clearAll.png',w = 285,h=43,ebg =1 , bgc = [(.1),(.11),(.11)],en = 1,command=('cmds.cmdShell(\\\"' + cmdShll + '\\\", edit=True, clear=True)' ))\n\n\nControlsForm = pm.formLayout( 'ControlsForm',p='Controls')\n\nToolsForm = pm.formLayout('ToolkitForm',p='Tools')\nSkinForm = pm.formLayout('SkinForm',p='Skin')\nMiscForm = pm.formLayout('MiscForm',p='Misc')\n\nGlobalName = pm.textField('Globalfield', w = 270 , h=25 ,pht = 'Name for Ctrls or Attrs',p = 'ControlsForm',bgc = [(.17),(.18),(.19)])\n\nBaseCtlBtn = pm.iconTextButton('ControlBase',style='iconAndTextHorizontal', image1='polyColorSetEditor.png', label='Control Class',p = 'ControlsForm',w=130,h=40, bgc = [(.3),(.5),(.5)])\nBaseCtlShapeBtn = pm.iconTextButton('ControlShape',style='iconAndTextHorizontal', image1='fluidCreate3D.png', label='Control Shape',p = 'ControlsForm',w=130,h=40,  bgc = [(.3),(.5),(.5)])\nBorder01Btn = pm.button('Border01',l = '',p = 'ControlsForm',w= 260,h = 60,en=0)\n\nCtrlSizeText = pm.iconTextButton('Sizetxt',style='iconAndTextHorizontal',image1='StandinShelf.png',l = 'SHAPE SIZE',p = 'ControlsForm',w = 105,h=40, bgc = [(.2),(.3),(.3)],en = 1)\nintensityTxtFld = pm.floatField('intenTxf',min = .10,p = 'ControlsForm',v=.10,w= 45,h =40,bgc = [(.17),(.18),(.19)] )\nplusBtn = pm.symbolButton('plusBtn',p = 'ControlsForm',i = 'UVTBAdd.png',w = 40,h=40,ebg =1 , bgc = [(.2),(.3),(.3)],en = 1)\nminusBtn = pm.symbolButton('minusBtn',p = 'ControlsForm',i = 'UVTBRemove.png',w = 40,h=40,ebg =1 , bgc = [(.2),(.3),(.3)],en = 1)\n\n\nattrsBtn = pm.button('atrBtn',l= 'Attributes',p = 'ControlsForm',w = 270,h=19, bgc = [(.2),(.2),(.2)],hlc = [(.9),(.2),(.2)],en =1)\n\n\n\nlockatBtn = pm.symbolButton('lockatrBtn',p = 'ControlsForm',i = 'Lock_ON.png',w = 63,h=25,ebg =1 , bgc = [(.3),(.2),(.2)],en = 1)\nunlockatBtn = pm.symbolButton('unlockatrBtn',p = 'ControlsForm',i = 'Lock_OFF.png',w = 63,h=25,ebg =1 , bgc = [(.3),(.2),(.2)],en = 1)\nkeyableBtn = pm.symbolButton('keyableAtBtn',p = 'ControlsForm',i = 'keyIntoclip.png',w = 63,h=25,ebg =1 , bgc = [(.3),(.2),(.2)],en = 1)\nhideBtn = pm.symbolButton('hideAtBtn',p = 'ControlsForm',i = 'RS_visible.png',w = 63,h=25,ebg =1 , bgc = [(.3),(.2),(.2)],en = 1)\n\nOnOffAttr = pm.button('OnOff',l= 'Off/On',p = 'ControlsForm',w = 63,h=19, bgc = [(.2),(.2),(.2)],hlc = [(.9),(.2),(.2)],en =1)\nZeroOneAttr = pm.button('ZeroOneAtr',l= '0.0-1.0',p = 'ControlsForm',w = 63,h=19, bgc = [(.2),(.2),(.2)],hlc = [(.9),(.2),(.2)],en =1)\nZeroTenAttr = pm.button('ZeroTenAtr',l= '0-10',p = 'ControlsForm',w = 63,h=19, bgc = [(.2),(.2),(.2)],hlc = [(.9),(.2),(.2)],en =1)\nIntAttr= pm.button('IntAtr',l= '0-1',p = 'ControlsForm',w = 63,h=19, bgc = [(.2),(.2),(.2)],hlc = [(.9),(.2),(.2)],en =1)\n\nEnumAttrBtn= pm.button('EnumAtr',l= 'Enum',p = 'ControlsForm',w = 132,h=19, bgc = [(.2),(.2),(.2)],hlc = [(.9),(.2),(.2)],en =1)\nStringAttrBtn= pm.button('StringAtr',l= 'String',p = 'ControlsForm',w = 132,h=19, bgc = [(.2),(.2),(.2)],hlc = [(.9),(.2),(.2)],en =1)\nJntCreate= pm.iconTextButton('CreateJnt',style='iconAndTextHorizontal',image1='CenterPivot.png',l = 'Create Joint CTR ',p = 'ControlsForm',w = 132,h=40, bgc = [(.2),(.3),(.3)],en = 1,c = 'CtrJnt()')\nEachJntCreate= pm.iconTextButton('EachCreateJnt',style='iconAndTextHorizontal',image1='out_particle.png',l = 'Create Joint Each',p = 'ControlsForm',w = 132,h=40, bgc = [(.2),(.3),(.3)],en = 1,c = 'CtrJntEach()')\n\noutliner = pm.outlinerPanel(outpanel, query=True,outlinerEditor=True)\n\npm.outlinerEditor( outliner, edit=True, mainListConnection='worldList', selectionConnection='modelList', showShapes=False, showReferenceNodes=False, showReferenceMembers=False, showAttributes=False, showConnected=False, showAnimCurvesOnly=False, autoExpand=False, showDagOnly=True, ignoreDagHierarchy=False, expandConnections=False, showNamespace=True, showCompounds=True, showNumericAttrsOnly=False, highlightActive=True, autoSelectNewObjects=False, doNotSelectNewObjects=False, transmitFilters=False, showSetMembers=True, setFilter='defaultSetFilter' )\n\n\npm.formLayout('Outliner',e =1,af=[(outpanel,'top',0),(outpanel,'left',0),(outpanel,'right',0),(outpanel,'bottom',0)])\npm.formLayout('ControlsForm',e=1,\n\tattachForm = [\n\t\n\t\n\t(GlobalName,'top',8),\n\t(BaseCtlBtn,'top',45),\n\t(BaseCtlShapeBtn,'top',45),\n\t\n\t(Border01Btn,'right',10),\n\t(BaseCtlShapeBtn,'right',10),\n\n\n\t\n\t(GlobalName,'left',10),\n\t(BaseCtlBtn,'left',10),\n\t(CtrlSizeText,'left',20),\n\t(Border01Btn,'left',10),\n\t(lockatBtn,'left',10),\n\t(attrsBtn,'left',10),\t\n\t(OnOffAttr,'left',10),\t\n\t(EnumAttrBtn,'left',10),\t\n\t(JntCreate,'left',10),\t\n\t(EachJntCreate,'left',10),\t\t\n\t\n\t],\n\tattachControl = [\n\t\n\t(BaseCtlShapeBtn, 'left' , 10 , BaseCtlBtn ),\n\n\t(plusBtn, 'left' , 6 , CtrlSizeText ),\n\t(intensityTxtFld, 'left' , 6 , plusBtn ),\n\t(minusBtn, 'left' , 6 , intensityTxtFld ),\n\t(attrsBtn, 'top' , 12 , Border01Btn ),\n\t(unlockatBtn, 'left' , 6 , lockatBtn ),\n\t(keyableBtn, 'left' , 6 , unlockatBtn ),\n\t(hideBtn, 'left' , 6 , keyableBtn ),\n\t(ZeroOneAttr, 'left' , 6 , OnOffAttr ),\n\t(ZeroTenAttr, 'left' , 6 , ZeroOneAttr ),\n\t(IntAttr, 'left' , 6 , ZeroTenAttr ),\n\t(StringAttrBtn, 'left' , 6 , EnumAttrBtn ),\n\t(EachJntCreate, 'left' , 6 , JntCreate ),\n\t\n\t\t\n\t(intensityTxtFld, 'top' , 18 , BaseCtlShapeBtn ),\n\t(Border01Btn, 'top' , 10 , BaseCtlShapeBtn ),\n\t(CtrlSizeText, 'top' , 18 , BaseCtlShapeBtn ),\n\t(plusBtn, 'top' , 18 , BaseCtlShapeBtn ),\n\t(minusBtn, 'top' , 18 , BaseCtlShapeBtn ),\n\t(unlockatBtn, 'top' , 10 , attrsBtn ),\n\t(lockatBtn, 'top' , 10 , attrsBtn ),\n\t(keyableBtn, 'top' , 10 , attrsBtn ),\t\n\t(hideBtn, 'top' , 10 , attrsBtn ),\n\t(OnOffAttr, 'top' , 10 , hideBtn ),\n\t(ZeroOneAttr, 'top' , 10 , hideBtn ),\n\t(ZeroTenAttr, 'top' , 10 , hideBtn ),\n\t(IntAttr, 'top' , 10 , hideBtn ),\n\t(EnumAttrBtn, 'top' , 10 , IntAttr ),\n\t(StringAttrBtn, 'top' , 10 , IntAttr ),\n\t(JntCreate, 'top' , 10 , StringAttrBtn ),\n\t(EachJntCreate, 'top' , 10 , StringAttrBtn ),\n\t]\n\t\n\t\n\t\n\t\n\t\n\t)\n\n\nwith wind:\n\twith template:\n\t\twith Tab:\n\t\t\tprint 'Launching ToolkitX'\n\t\t\t\n\ndef Control_MM_UI():\n\t\n\tif pm.popupMenu('ControlMenu', ex=1):\n\t\tpm.deleteUI('ControlMenu')\n    \t\n\t\n\tCtlMenu = pm.popupMenu('ControlMenu', mm=1, b=(1), aob=1, ctl=0, alt=0, sh=0, p=\"ControlBase\", pmo=1)\n    \n\tpm.menuItem(p=CtlMenu, l=\"Print Fn\", rp=\"SW\", c=\"print 'SouthWest'\")\n\tpm.menuItem(p=CtlMenu, l=\"Circle\", rp=\"NE\", c=\"pm.circle()\")\n\t\n\n\nControl_MM_UI()\n\ndef NewTab():\n    pm.scrollField( 'Notes',p = 'Tabs', bgc = [(.2),(.2),(.2)],hlc = [(.9),(.2),(.2)],en =1 )\n    Tab = tabLayout('Tabs',e =1 , snt=0)\n    \n    \n    \n    \ndef CtrJnt():\n    #createJoint\n\n    sl = pm.ls(sl=1)\n    try:\n        pm.select(sl)\n        tempPos = pm.cluster(n='Temp')[1]\n        Jnt = pm.createNode('joint',n = (sl[0]+'Jnt'))\n        pm.delete(pm.parentConstraint(tempPos,Jnt))\n        pm.delete(tempPos)\n        \n        \n        \n        \n    except:\n        tempPos = pm.createNode('transform',n = 'Temp')\n        pm.delete(pm.parentConstraint(sl,tempPos))\n        Jnt = pm.createNode('joint',n = (sl[0]+'_Jnt'))\n        pm.delete(pm.parentConstraint(tempPos,Jnt))\n        pm.delete(tempPos)\n        \n        \n        \n    \n    \n\ndef CtrJntEach():\n    \n    #createJoint\n    try:sl = getSelection()\n    except:sl= pm.ls(sl=1)\n    for i in sl:\n        \n        \n        try:\n            pm.select(i)\n            tempPos = pm.cluster(n='Temp')[1]\n            Jnt = pm.createNode('joint',n = (i+'Jnt'))\n            pm.delete(pm.parentConstraint(tempPos,Jnt))\n            pm.delete(tempPos)\n            \n            \n            \n            \n        except:\n            tempPos = pm.createNode('transform',n = 'Temp')\n            pm.delete(pm.parentConstraint(i,tempPos))\n            Jnt = pm.createNode('joint',n = (i+'_Jnt'))\n            pm.delete(pm.parentConstraint(tempPos,Jnt))\n            pm.delete(tempPos)\n            \n        \n        \ndef getSelection():\n    components = cmds.ls(sl=1)\n    selList = []\n    objName = components[0][0:components[0].index(\".\")]\n    # go through every component in the list. If it is a single component (\"pCube1.vtx[1]\"), add it to the list. Else,\n    # add each component in the index (\"pCube1.vtx[1:5]\") to the list\n    for c in components:\n        if \":\" not in c:\n            selList.append(c)\n        else:\n            print c\n            startComponent = int(c[c.index(\"[\") + 1: c.index(\":\")])\n            endComponent = int(c[c.index(\":\") + 1:c.index(\"]\")])\n            componentType = c[c.index(\".\") + 1:c.index(\"[\")]\n            while startComponent <= endComponent:\n                selList.append(objName + \".\" + componentType + \"[\" + str(startComponent) + \"]\")\n                startComponent += 1\n\n    return selList\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "#skintransfer\n\n\n\n\nimport maya.cmds as cmds\nimport maya.mel as mel\ndef sknTransferUI():\n            \n    if cmds.window('SkinTransfer', exists=True ):\n        cmds.deleteUI( 'SkinTransfer', window=True )\n    if cmds.windowPref('SkinTransfer', exists=True ):\n        cmds.windowPref( 'SkinTransfer', r=True )\n    \n    cmds.window('SkinTransfer', title='Skin Transfer', iconName='Short Name', widthHeight=(336,150),s=0 )\n    \n    form = cmds.formLayout(numberOfDivisions=100,bgc =[(.294),(.294),(.294)])\n    source = cmds.textField('sourcetxf',w=150,h=40)\n    \n    destination = cmds.textScrollList('asd',h=40,w=150)\n    \n    sourceButton = cmds.button(l='Source',w=150,bgc =[(.394),(.394),(.394)],c='sourceobjs()')\n    destinationButton = cmds.button(l='Destination',w=150,bgc =[(.394),(.394),(.394)],c='destinationObjs()')\n    transfer = cmds.button(l='Transfer',w=310,bgc =[(.2),(.5),(.4)],h=25,c='Transfer()')\n    author = cmds.symbolButton(i='UV_Freeze_Tool.png',c='author()')\n    \n    \n    cmds.formLayout(form,edit=True,attachForm=[\n    (source,'top',10),\n    (destination,'top',11),\n    (sourceButton,'top',60),\n    (destinationButton,'top',60),\n    (transfer,'top',91),\n    (author,'top',120),\n    \n    \n    \n    (source,'left',12),\n    (destination,'left',12),\n    (sourceButton,'left',12),\n    (destinationButton,'left',12),\n    (transfer,'left',12),\n    (author,'left',302),\n    \n            \n            \n            \n            \t\n    \n    \n    \n    \n    \n    \n    ],\n    attachControl=[\n    \n    (destination, 'left', 10, source), \n    (sourceButton, 'bottom', 20, source), \n    (destinationButton, 'left', 10, sourceButton), \n    \n    \n    \n    \n        \t\n        \t\n    \n    ]\n    \n    \n    \n    \n    \n    \n    \n    )\n            \n            \n            \n            \n    cmds.showWindow('SkinTransfer')\n        \n        \nobjlst=[]    \nsourceobjctlst=[]\ndef sourceobjs():\n    print 'f'\n    sel = cmds.ls(sl=True)\n    cmds.textField('sourcetxf',e=True,tx=str(sel[0]),ed=0)\n    sourceobjctlst.append(sel[0])\n    \n    \ndef destinationObjs():\n    cmds.textScrollList('asd',e=True,ra=True)\n    \n    destsel = cmds.ls(sl=True)\n    for i in destsel:\n        cmds.textScrollList('asd',e=True,a=i)\n        objlst.append(i)\n        \n    \n    \n\n    \ndef Transfer():\n    cmds.select(cl=True)\n    sel = str(sourceobjctlst[0])\n    a = mel.eval(\"findRelatedSkinCluster(\"+'\"'+sel+'\"'+\")\")\n    infJnts=cmds.skinCluster(a,q=True,wi=True)\n    cmds.select(infJnts,r=True)\n    for i in objlst:\n        try:\n            cmds.skinCluster(i,e=True,ub=True)\n        except:\n            \n            pass\n            \n        b = cmds.skinCluster(infJnts,i,mi=5)\n        cmds.select(sel,i)\n        mel.eval(\"copySkinWeights  -noMirror -surfaceAssociation closestPoint -influenceAssociation closestJoint -normalize;\")\n        cmds.select(cl=True)\n        \n    \n\ndef author():\n    cmds.launch(web='https://www.facebook.com/sidmehraajm/') \n    \n    \n    \nsknTransferUI()" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "SS" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "SS" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "#skintransfer\n\n\n\nimport pymel.core as pm\nimport maya.cmds as cmds\nimport maya.mel as mel\ndef sknTransferUI():\n            \n    if cmds.window('SkinTransfer', exists=True ):\n        cmds.deleteUI( 'SkinTransfer', window=True )\n    if cmds.windowPref('SkinTransfer', exists=True ):\n        cmds.windowPref( 'SkinTransfer', r=True )\n    \n    cmds.window('SkinTransfer', title='Skin Transfer', iconName='Short Name', widthHeight=(336,150),s=0 )\n    \n    form = cmds.formLayout(numberOfDivisions=100,bgc =[(.294),(.294),(.294)])\n    source = cmds.textField('sourcetxf',w=150,h=40)\n    \n    destination = cmds.textScrollList('asd',h=40,w=150)\n    \n    sourceButton = cmds.button(l='Source',w=150,bgc =[(.394),(.394),(.394)],c='sourceobjs()')\n    destinationButton = cmds.button(l='Destination',w=150,bgc =[(.394),(.394),(.394)],c='destinationObjs()')\n    transfer = cmds.button(l='Transfer',w=310,bgc =[(.2),(.5),(.4)],h=25,c='Transfer()')\n    author = cmds.symbolButton(i='UV_Freeze_Tool.png',c='author()')\n    \n    \n    cmds.formLayout(form,edit=True,attachForm=[\n    (source,'top',10),\n    (destination,'top',11),\n    (sourceButton,'top',60),\n    (destinationButton,'top',60),\n    (transfer,'top',91),\n    (author,'top',120),\n    \n    \n    \n    (source,'left',12),\n    (destination,'left',12),\n    (sourceButton,'left',12),\n    (destinationButton,'left',12),\n    (transfer,'left',12),\n    (author,'left',302),\n    \n            \n            \n            \n            \t\n    \n    \n    \n    \n    \n    \n    ],\n    attachControl=[\n    \n    (destination, 'left', 10, source), \n    (sourceButton, 'bottom', 20, source), \n    (destinationButton, 'left', 10, sourceButton), \n    \n    \n    \n    \n        \t\n        \t\n    \n    ]\n    \n    \n    \n    \n    \n    \n    \n    )\n            \n            \n            \n            \n    cmds.showWindow('SkinTransfer')\n        \n        \nobjlst=[]    \nsourceobjctlst=[]\ndef sourceobjs():\n    print 'f'\n    sel = cmds.ls(sl=True)[0]\n    a = sel.encode('utf8')\n    \n    cmds.textField('sourcetxf',e=True,tx=a,ed=0)\n    sourceobjctlst.append(sel[0])\n    \n    \ndef destinationObjs():\n    cmds.textScrollList('asd',e=True,ra=True)\n    \n    destsel = cmds.ls(sl=True)\n    for i in destsel:\n        cmds.textScrollList('asd',e=True,a=i)\n        objlst.append(i)\n        \n    \n    \n\n    \ndef Transfer():\n    cmds.select(cl=True)\n    sel = str(sourceobjctlst[0])\n    a = mel.eval(\"findRelatedSkinCluster(\"+'\"'+sel+'\"'+\")\")\n    infJnts=cmds.skinCluster(a,q=True,wi=True)\n    cmds.select(infJnts,r=True)\n    for i in objlst:\n        try:\n            cmds.skinCluster(i,e=True,ub=True)\n        except:\n            \n            pass\n            \n        b = cmds.skinCluster(infJnts,i,mi=5)\n        cmds.select(sel,i)\n        mel.eval(\"copySkinWeights  -noMirror -surfaceAssociation closestPoint -influenceAssociation closestJoint -normalize;\")\n        cmds.select(cl=True)\n        \n    \n\ndef author():\n    cmds.launch(web='https://www.facebook.com/sidmehraajm/') \n    \n    \n    \nsknTransferUI()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;

} 
